# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _CLEsperantoPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCLEImageDataManagerPython
else:
    import _itkCLEImageDataManagerPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkCLEImageDataManagerPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkCLEImageDataManagerPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkCLEDataManagerPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCLEImagePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython

def itkCLEImageDataManagerD2_New():
    return itkCLEImageDataManagerD2.New()

class itkCLEImageDataManagerD2(itk.itkCLEDataManagerPython.itkCLEDataManagerD2):
    r"""Proxy of C++ itkCLEImageDataManagerD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD2_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD2_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD2_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerD2
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerD2

        Create a new object of the class itkCLEImageDataManagerD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerD2 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerD2_swigregister(itkCLEImageDataManagerD2)
itkCLEImageDataManagerD2___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerD2___New_orig__
itkCLEImageDataManagerD2_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerD2_cast


def itkCLEImageDataManagerD3_New():
    return itkCLEImageDataManagerD3.New()

class itkCLEImageDataManagerD3(itk.itkCLEDataManagerPython.itkCLEDataManagerD3):
    r"""Proxy of C++ itkCLEImageDataManagerD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD3_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD3_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD3_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerD3
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerD3

        Create a new object of the class itkCLEImageDataManagerD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerD3 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerD3_swigregister(itkCLEImageDataManagerD3)
itkCLEImageDataManagerD3___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerD3___New_orig__
itkCLEImageDataManagerD3_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerD3_cast


def itkCLEImageDataManagerD4_New():
    return itkCLEImageDataManagerD4.New()

class itkCLEImageDataManagerD4(itk.itkCLEDataManagerPython.itkCLEDataManagerD4):
    r"""Proxy of C++ itkCLEImageDataManagerD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD4_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD4_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD4_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerD4
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerD4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerD4

        Create a new object of the class itkCLEImageDataManagerD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerD4 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerD4_swigregister(itkCLEImageDataManagerD4)
itkCLEImageDataManagerD4___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerD4___New_orig__
itkCLEImageDataManagerD4_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerD4_cast


def itkCLEImageDataManagerF2_New():
    return itkCLEImageDataManagerF2.New()

class itkCLEImageDataManagerF2(itk.itkCLEDataManagerPython.itkCLEDataManagerF2):
    r"""Proxy of C++ itkCLEImageDataManagerF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF2_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF2_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF2_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerF2
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerF2

        Create a new object of the class itkCLEImageDataManagerF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerF2 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerF2_swigregister(itkCLEImageDataManagerF2)
itkCLEImageDataManagerF2___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerF2___New_orig__
itkCLEImageDataManagerF2_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerF2_cast


def itkCLEImageDataManagerF3_New():
    return itkCLEImageDataManagerF3.New()

class itkCLEImageDataManagerF3(itk.itkCLEDataManagerPython.itkCLEDataManagerF3):
    r"""Proxy of C++ itkCLEImageDataManagerF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF3_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF3_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF3_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerF3
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerF3

        Create a new object of the class itkCLEImageDataManagerF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerF3 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerF3_swigregister(itkCLEImageDataManagerF3)
itkCLEImageDataManagerF3___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerF3___New_orig__
itkCLEImageDataManagerF3_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerF3_cast


def itkCLEImageDataManagerF4_New():
    return itkCLEImageDataManagerF4.New()

class itkCLEImageDataManagerF4(itk.itkCLEDataManagerPython.itkCLEDataManagerF4):
    r"""Proxy of C++ itkCLEImageDataManagerF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF4_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF4_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF4_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerF4
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerF4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerF4

        Create a new object of the class itkCLEImageDataManagerF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerF4 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerF4_swigregister(itkCLEImageDataManagerF4)
itkCLEImageDataManagerF4___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerF4___New_orig__
itkCLEImageDataManagerF4_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerF4_cast


def itkCLEImageDataManagerSS2_New():
    return itkCLEImageDataManagerSS2.New()

class itkCLEImageDataManagerSS2(itk.itkCLEDataManagerPython.itkCLEDataManagerSS2):
    r"""Proxy of C++ itkCLEImageDataManagerSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS2_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS2_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS2_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerSS2
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerSS2

        Create a new object of the class itkCLEImageDataManagerSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerSS2 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS2_swigregister(itkCLEImageDataManagerSS2)
itkCLEImageDataManagerSS2___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerSS2___New_orig__
itkCLEImageDataManagerSS2_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerSS2_cast


def itkCLEImageDataManagerSS3_New():
    return itkCLEImageDataManagerSS3.New()

class itkCLEImageDataManagerSS3(itk.itkCLEDataManagerPython.itkCLEDataManagerSS3):
    r"""Proxy of C++ itkCLEImageDataManagerSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS3_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS3_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS3_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerSS3
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerSS3

        Create a new object of the class itkCLEImageDataManagerSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerSS3 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS3_swigregister(itkCLEImageDataManagerSS3)
itkCLEImageDataManagerSS3___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerSS3___New_orig__
itkCLEImageDataManagerSS3_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerSS3_cast


def itkCLEImageDataManagerSS4_New():
    return itkCLEImageDataManagerSS4.New()

class itkCLEImageDataManagerSS4(itk.itkCLEDataManagerPython.itkCLEDataManagerSS4):
    r"""Proxy of C++ itkCLEImageDataManagerSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS4_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS4_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS4_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerSS4
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerSS4

        Create a new object of the class itkCLEImageDataManagerSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerSS4 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerSS4_swigregister(itkCLEImageDataManagerSS4)
itkCLEImageDataManagerSS4___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerSS4___New_orig__
itkCLEImageDataManagerSS4_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerSS4_cast


def itkCLEImageDataManagerUC2_New():
    return itkCLEImageDataManagerUC2.New()

class itkCLEImageDataManagerUC2(itk.itkCLEDataManagerPython.itkCLEDataManagerUC2):
    r"""Proxy of C++ itkCLEImageDataManagerUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC2_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC2_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC2_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerUC2
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerUC2

        Create a new object of the class itkCLEImageDataManagerUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerUC2 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC2_swigregister(itkCLEImageDataManagerUC2)
itkCLEImageDataManagerUC2___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerUC2___New_orig__
itkCLEImageDataManagerUC2_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerUC2_cast


def itkCLEImageDataManagerUC3_New():
    return itkCLEImageDataManagerUC3.New()

class itkCLEImageDataManagerUC3(itk.itkCLEDataManagerPython.itkCLEDataManagerUC3):
    r"""Proxy of C++ itkCLEImageDataManagerUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC3_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC3_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC3_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerUC3
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerUC3

        Create a new object of the class itkCLEImageDataManagerUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerUC3 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC3_swigregister(itkCLEImageDataManagerUC3)
itkCLEImageDataManagerUC3___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerUC3___New_orig__
itkCLEImageDataManagerUC3_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerUC3_cast


def itkCLEImageDataManagerUC4_New():
    return itkCLEImageDataManagerUC4.New()

class itkCLEImageDataManagerUC4(itk.itkCLEDataManagerPython.itkCLEDataManagerUC4):
    r"""Proxy of C++ itkCLEImageDataManagerUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC4_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC4_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC4_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerUC4
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerUC4

        Create a new object of the class itkCLEImageDataManagerUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerUC4 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerUC4_swigregister(itkCLEImageDataManagerUC4)
itkCLEImageDataManagerUC4___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerUC4___New_orig__
itkCLEImageDataManagerUC4_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerUC4_cast


def itkCLEImageDataManagerUS2_New():
    return itkCLEImageDataManagerUS2.New()

class itkCLEImageDataManagerUS2(itk.itkCLEDataManagerPython.itkCLEDataManagerUS2):
    r"""Proxy of C++ itkCLEImageDataManagerUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS2_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS2_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS2_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerUS2
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerUS2

        Create a new object of the class itkCLEImageDataManagerUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerUS2 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS2_swigregister(itkCLEImageDataManagerUS2)
itkCLEImageDataManagerUS2___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerUS2___New_orig__
itkCLEImageDataManagerUS2_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerUS2_cast


def itkCLEImageDataManagerUS3_New():
    return itkCLEImageDataManagerUS3.New()

class itkCLEImageDataManagerUS3(itk.itkCLEDataManagerPython.itkCLEDataManagerUS3):
    r"""Proxy of C++ itkCLEImageDataManagerUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS3_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS3_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS3_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerUS3
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerUS3

        Create a new object of the class itkCLEImageDataManagerUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerUS3 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS3_swigregister(itkCLEImageDataManagerUS3)
itkCLEImageDataManagerUS3___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerUS3___New_orig__
itkCLEImageDataManagerUS3_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerUS3_cast


def itkCLEImageDataManagerUS4_New():
    return itkCLEImageDataManagerUS4.New()

class itkCLEImageDataManagerUS4(itk.itkCLEDataManagerPython.itkCLEDataManagerUS4):
    r"""Proxy of C++ itkCLEImageDataManagerUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS4_Clone)
    SetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS4_SetImagePointer)
    GetImagePointer = _swig_new_instance_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS4_GetImagePointer)
    __swig_destroy__ = _itkCLEImageDataManagerPython.delete_itkCLEImageDataManagerUS4
    cast = _swig_new_static_method(_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageDataManagerUS4

        Create a new object of the class itkCLEImageDataManagerUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageDataManagerUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageDataManagerUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageDataManagerUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageDataManagerUS4 in _itkCLEImageDataManagerPython:
_itkCLEImageDataManagerPython.itkCLEImageDataManagerUS4_swigregister(itkCLEImageDataManagerUS4)
itkCLEImageDataManagerUS4___New_orig__ = _itkCLEImageDataManagerPython.itkCLEImageDataManagerUS4___New_orig__
itkCLEImageDataManagerUS4_cast = _itkCLEImageDataManagerPython.itkCLEImageDataManagerUS4_cast



