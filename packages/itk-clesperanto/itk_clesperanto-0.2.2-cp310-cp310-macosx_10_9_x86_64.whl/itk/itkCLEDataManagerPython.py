# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _CLEsperantoPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCLEDataManagerPython
else:
    import _itkCLEDataManagerPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkCLEDataManagerPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkCLEDataManagerPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython

def itkCLEDataManagerD2_New():
    return itkCLEDataManagerD2.New()

class itkCLEDataManagerD2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerD2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD2_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD2_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD2_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD2_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD2_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD2_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD2_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD2_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD2_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerD2
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerD2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerD2

        Create a new object of the class itkCLEDataManagerD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerD2 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerD2_swigregister(itkCLEDataManagerD2)
itkCLEDataManagerD2___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerD2___New_orig__
itkCLEDataManagerD2_cast = _itkCLEDataManagerPython.itkCLEDataManagerD2_cast


def itkCLEDataManagerD3_New():
    return itkCLEDataManagerD3.New()

class itkCLEDataManagerD3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerD3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD3_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD3_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD3_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD3_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD3_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD3_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD3_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD3_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD3_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerD3
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerD3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerD3

        Create a new object of the class itkCLEDataManagerD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerD3 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerD3_swigregister(itkCLEDataManagerD3)
itkCLEDataManagerD3___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerD3___New_orig__
itkCLEDataManagerD3_cast = _itkCLEDataManagerPython.itkCLEDataManagerD3_cast


def itkCLEDataManagerD4_New():
    return itkCLEDataManagerD4.New()

class itkCLEDataManagerD4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerD4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD4_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD4_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD4_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD4_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD4_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD4_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD4_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD4_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerD4_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerD4
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerD4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerD4

        Create a new object of the class itkCLEDataManagerD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerD4 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerD4_swigregister(itkCLEDataManagerD4)
itkCLEDataManagerD4___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerD4___New_orig__
itkCLEDataManagerD4_cast = _itkCLEDataManagerPython.itkCLEDataManagerD4_cast


def itkCLEDataManagerF2_New():
    return itkCLEDataManagerF2.New()

class itkCLEDataManagerF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF2_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF2_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF2_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF2_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF2_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF2_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF2_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF2_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF2_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerF2
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerF2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerF2

        Create a new object of the class itkCLEDataManagerF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerF2 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerF2_swigregister(itkCLEDataManagerF2)
itkCLEDataManagerF2___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerF2___New_orig__
itkCLEDataManagerF2_cast = _itkCLEDataManagerPython.itkCLEDataManagerF2_cast


def itkCLEDataManagerF3_New():
    return itkCLEDataManagerF3.New()

class itkCLEDataManagerF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF3_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF3_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF3_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF3_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF3_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF3_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF3_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF3_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF3_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerF3
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerF3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerF3

        Create a new object of the class itkCLEDataManagerF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerF3 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerF3_swigregister(itkCLEDataManagerF3)
itkCLEDataManagerF3___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerF3___New_orig__
itkCLEDataManagerF3_cast = _itkCLEDataManagerPython.itkCLEDataManagerF3_cast


def itkCLEDataManagerF4_New():
    return itkCLEDataManagerF4.New()

class itkCLEDataManagerF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF4_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF4_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF4_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF4_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF4_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF4_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF4_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF4_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerF4_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerF4
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerF4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerF4

        Create a new object of the class itkCLEDataManagerF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerF4 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerF4_swigregister(itkCLEDataManagerF4)
itkCLEDataManagerF4___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerF4___New_orig__
itkCLEDataManagerF4_cast = _itkCLEDataManagerPython.itkCLEDataManagerF4_cast


def itkCLEDataManagerSS2_New():
    return itkCLEDataManagerSS2.New()

class itkCLEDataManagerSS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS2_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS2_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS2_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS2_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS2_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS2_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS2_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS2_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS2_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerSS2
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerSS2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerSS2

        Create a new object of the class itkCLEDataManagerSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerSS2 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerSS2_swigregister(itkCLEDataManagerSS2)
itkCLEDataManagerSS2___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerSS2___New_orig__
itkCLEDataManagerSS2_cast = _itkCLEDataManagerPython.itkCLEDataManagerSS2_cast


def itkCLEDataManagerSS3_New():
    return itkCLEDataManagerSS3.New()

class itkCLEDataManagerSS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS3_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS3_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS3_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS3_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS3_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS3_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS3_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS3_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS3_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerSS3
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerSS3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerSS3

        Create a new object of the class itkCLEDataManagerSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerSS3 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerSS3_swigregister(itkCLEDataManagerSS3)
itkCLEDataManagerSS3___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerSS3___New_orig__
itkCLEDataManagerSS3_cast = _itkCLEDataManagerPython.itkCLEDataManagerSS3_cast


def itkCLEDataManagerSS4_New():
    return itkCLEDataManagerSS4.New()

class itkCLEDataManagerSS4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerSS4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS4_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS4_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS4_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS4_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS4_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS4_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS4_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS4_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerSS4_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerSS4
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerSS4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerSS4

        Create a new object of the class itkCLEDataManagerSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerSS4 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerSS4_swigregister(itkCLEDataManagerSS4)
itkCLEDataManagerSS4___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerSS4___New_orig__
itkCLEDataManagerSS4_cast = _itkCLEDataManagerPython.itkCLEDataManagerSS4_cast


def itkCLEDataManagerUC2_New():
    return itkCLEDataManagerUC2.New()

class itkCLEDataManagerUC2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC2_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC2_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC2_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC2_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC2_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC2_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC2_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC2_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC2_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerUC2
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerUC2

        Create a new object of the class itkCLEDataManagerUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerUC2 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerUC2_swigregister(itkCLEDataManagerUC2)
itkCLEDataManagerUC2___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerUC2___New_orig__
itkCLEDataManagerUC2_cast = _itkCLEDataManagerPython.itkCLEDataManagerUC2_cast


def itkCLEDataManagerUC3_New():
    return itkCLEDataManagerUC3.New()

class itkCLEDataManagerUC3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC3_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC3_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC3_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC3_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC3_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC3_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC3_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC3_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC3_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerUC3
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerUC3

        Create a new object of the class itkCLEDataManagerUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerUC3 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerUC3_swigregister(itkCLEDataManagerUC3)
itkCLEDataManagerUC3___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerUC3___New_orig__
itkCLEDataManagerUC3_cast = _itkCLEDataManagerPython.itkCLEDataManagerUC3_cast


def itkCLEDataManagerUC4_New():
    return itkCLEDataManagerUC4.New()

class itkCLEDataManagerUC4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC4_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC4_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC4_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC4_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC4_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC4_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC4_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC4_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUC4_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerUC4
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerUC4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerUC4

        Create a new object of the class itkCLEDataManagerUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerUC4 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerUC4_swigregister(itkCLEDataManagerUC4)
itkCLEDataManagerUC4___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerUC4___New_orig__
itkCLEDataManagerUC4_cast = _itkCLEDataManagerPython.itkCLEDataManagerUC4_cast


def itkCLEDataManagerUS2_New():
    return itkCLEDataManagerUS2.New()

class itkCLEDataManagerUS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS2_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS2_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS2_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS2_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS2_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS2_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS2_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS2_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS2_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerUS2
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerUS2

        Create a new object of the class itkCLEDataManagerUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerUS2 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerUS2_swigregister(itkCLEDataManagerUS2)
itkCLEDataManagerUS2___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerUS2___New_orig__
itkCLEDataManagerUS2_cast = _itkCLEDataManagerPython.itkCLEDataManagerUS2_cast


def itkCLEDataManagerUS3_New():
    return itkCLEDataManagerUS3.New()

class itkCLEDataManagerUS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS3_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS3_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS3_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS3_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS3_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS3_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS3_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS3_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS3_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerUS3
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerUS3

        Create a new object of the class itkCLEDataManagerUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerUS3 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerUS3_swigregister(itkCLEDataManagerUS3)
itkCLEDataManagerUS3___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerUS3___New_orig__
itkCLEDataManagerUS3_cast = _itkCLEDataManagerPython.itkCLEDataManagerUS3_cast


def itkCLEDataManagerUS4_New():
    return itkCLEDataManagerUS4.New()

class itkCLEDataManagerUS4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkCLEDataManagerUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS4_Clone)
    Allocate = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS4_Allocate)
    Initialize = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS4_Initialize)
    SetCPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS4_SetCPUDirtyFlag)
    SetGPUDirtyFlag = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS4_SetGPUDirtyFlag)
    IsCPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS4_IsCPUBufferDirty)
    IsGPUBufferDirty = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS4_IsGPUBufferDirty)
    Update = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS4_Update)
    Graft = _swig_new_instance_method(_itkCLEDataManagerPython.itkCLEDataManagerUS4_Graft)
    __swig_destroy__ = _itkCLEDataManagerPython.delete_itkCLEDataManagerUS4
    cast = _swig_new_static_method(_itkCLEDataManagerPython.itkCLEDataManagerUS4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEDataManagerUS4

        Create a new object of the class itkCLEDataManagerUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEDataManagerUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEDataManagerUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEDataManagerUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEDataManagerUS4 in _itkCLEDataManagerPython:
_itkCLEDataManagerPython.itkCLEDataManagerUS4_swigregister(itkCLEDataManagerUS4)
itkCLEDataManagerUS4___New_orig__ = _itkCLEDataManagerPython.itkCLEDataManagerUS4___New_orig__
itkCLEDataManagerUS4_cast = _itkCLEDataManagerPython.itkCLEDataManagerUS4_cast



