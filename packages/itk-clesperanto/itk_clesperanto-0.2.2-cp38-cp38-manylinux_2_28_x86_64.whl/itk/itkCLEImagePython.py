# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _CLEsperantoPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCLEImagePython
else:
    import _itkCLEImagePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkCLEImagePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkCLEImagePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImagePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkCLEImageDataManagerPython
import itk.itkCLEDataManagerPython

def itkCLEImageD2_Superclass_New():
    return itkCLEImageD2_Superclass.New()

class itkCLEImageD2_Superclass(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkCLEImageD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageD2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageD2_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageD2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageD2_Superclass

        Create a new object of the class itkCLEImageD2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageD2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageD2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageD2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageD2_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageD2_Superclass_swigregister(itkCLEImageD2_Superclass)
itkCLEImageD2_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageD2_Superclass___New_orig__
itkCLEImageD2_Superclass_cast = _itkCLEImagePython.itkCLEImageD2_Superclass_cast


def itkCLEImageD3_Superclass_New():
    return itkCLEImageD3_Superclass.New()

class itkCLEImageD3_Superclass(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkCLEImageD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageD3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageD3_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageD3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageD3_Superclass

        Create a new object of the class itkCLEImageD3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageD3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageD3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageD3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageD3_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageD3_Superclass_swigregister(itkCLEImageD3_Superclass)
itkCLEImageD3_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageD3_Superclass___New_orig__
itkCLEImageD3_Superclass_cast = _itkCLEImagePython.itkCLEImageD3_Superclass_cast


def itkCLEImageD4_Superclass_New():
    return itkCLEImageD4_Superclass.New()

class itkCLEImageD4_Superclass(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkCLEImageD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageD4_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageD4_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageD4_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageD4_Superclass

        Create a new object of the class itkCLEImageD4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageD4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageD4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageD4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageD4_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageD4_Superclass_swigregister(itkCLEImageD4_Superclass)
itkCLEImageD4_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageD4_Superclass___New_orig__
itkCLEImageD4_Superclass_cast = _itkCLEImagePython.itkCLEImageD4_Superclass_cast


def itkCLEImageF2_Superclass_New():
    return itkCLEImageF2_Superclass.New()

class itkCLEImageF2_Superclass(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkCLEImageF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageF2_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageF2_Superclass

        Create a new object of the class itkCLEImageF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageF2_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageF2_Superclass_swigregister(itkCLEImageF2_Superclass)
itkCLEImageF2_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageF2_Superclass___New_orig__
itkCLEImageF2_Superclass_cast = _itkCLEImagePython.itkCLEImageF2_Superclass_cast


def itkCLEImageF3_Superclass_New():
    return itkCLEImageF3_Superclass.New()

class itkCLEImageF3_Superclass(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkCLEImageF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageF3_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageF3_Superclass

        Create a new object of the class itkCLEImageF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageF3_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageF3_Superclass_swigregister(itkCLEImageF3_Superclass)
itkCLEImageF3_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageF3_Superclass___New_orig__
itkCLEImageF3_Superclass_cast = _itkCLEImagePython.itkCLEImageF3_Superclass_cast


def itkCLEImageF4_Superclass_New():
    return itkCLEImageF4_Superclass.New()

class itkCLEImageF4_Superclass(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkCLEImageF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageF4_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageF4_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageF4_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageF4_Superclass

        Create a new object of the class itkCLEImageF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageF4_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageF4_Superclass_swigregister(itkCLEImageF4_Superclass)
itkCLEImageF4_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageF4_Superclass___New_orig__
itkCLEImageF4_Superclass_cast = _itkCLEImagePython.itkCLEImageF4_Superclass_cast


def itkCLEImageSS2_Superclass_New():
    return itkCLEImageSS2_Superclass.New()

class itkCLEImageSS2_Superclass(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkCLEImageSS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageSS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageSS2_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageSS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageSS2_Superclass

        Create a new object of the class itkCLEImageSS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageSS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageSS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageSS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageSS2_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageSS2_Superclass_swigregister(itkCLEImageSS2_Superclass)
itkCLEImageSS2_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageSS2_Superclass___New_orig__
itkCLEImageSS2_Superclass_cast = _itkCLEImagePython.itkCLEImageSS2_Superclass_cast


def itkCLEImageSS3_Superclass_New():
    return itkCLEImageSS3_Superclass.New()

class itkCLEImageSS3_Superclass(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkCLEImageSS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageSS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageSS3_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageSS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageSS3_Superclass

        Create a new object of the class itkCLEImageSS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageSS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageSS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageSS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageSS3_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageSS3_Superclass_swigregister(itkCLEImageSS3_Superclass)
itkCLEImageSS3_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageSS3_Superclass___New_orig__
itkCLEImageSS3_Superclass_cast = _itkCLEImagePython.itkCLEImageSS3_Superclass_cast


def itkCLEImageSS4_Superclass_New():
    return itkCLEImageSS4_Superclass.New()

class itkCLEImageSS4_Superclass(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkCLEImageSS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageSS4_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageSS4_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageSS4_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageSS4_Superclass

        Create a new object of the class itkCLEImageSS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageSS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageSS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageSS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageSS4_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageSS4_Superclass_swigregister(itkCLEImageSS4_Superclass)
itkCLEImageSS4_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageSS4_Superclass___New_orig__
itkCLEImageSS4_Superclass_cast = _itkCLEImagePython.itkCLEImageSS4_Superclass_cast


def itkCLEImageUC2_Superclass_New():
    return itkCLEImageUC2_Superclass.New()

class itkCLEImageUC2_Superclass(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkCLEImageUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageUC2_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageUC2_Superclass

        Create a new object of the class itkCLEImageUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageUC2_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageUC2_Superclass_swigregister(itkCLEImageUC2_Superclass)
itkCLEImageUC2_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageUC2_Superclass___New_orig__
itkCLEImageUC2_Superclass_cast = _itkCLEImagePython.itkCLEImageUC2_Superclass_cast


def itkCLEImageUC3_Superclass_New():
    return itkCLEImageUC3_Superclass.New()

class itkCLEImageUC3_Superclass(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkCLEImageUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageUC3_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageUC3_Superclass

        Create a new object of the class itkCLEImageUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageUC3_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageUC3_Superclass_swigregister(itkCLEImageUC3_Superclass)
itkCLEImageUC3_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageUC3_Superclass___New_orig__
itkCLEImageUC3_Superclass_cast = _itkCLEImagePython.itkCLEImageUC3_Superclass_cast


def itkCLEImageUC4_Superclass_New():
    return itkCLEImageUC4_Superclass.New()

class itkCLEImageUC4_Superclass(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkCLEImageUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUC4_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageUC4_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUC4_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageUC4_Superclass

        Create a new object of the class itkCLEImageUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageUC4_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageUC4_Superclass_swigregister(itkCLEImageUC4_Superclass)
itkCLEImageUC4_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageUC4_Superclass___New_orig__
itkCLEImageUC4_Superclass_cast = _itkCLEImagePython.itkCLEImageUC4_Superclass_cast


def itkCLEImageUS2_Superclass_New():
    return itkCLEImageUS2_Superclass.New()

class itkCLEImageUS2_Superclass(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkCLEImageUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageUS2_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageUS2_Superclass

        Create a new object of the class itkCLEImageUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageUS2_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageUS2_Superclass_swigregister(itkCLEImageUS2_Superclass)
itkCLEImageUS2_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageUS2_Superclass___New_orig__
itkCLEImageUS2_Superclass_cast = _itkCLEImagePython.itkCLEImageUS2_Superclass_cast


def itkCLEImageUS3_Superclass_New():
    return itkCLEImageUS3_Superclass.New()

class itkCLEImageUS3_Superclass(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkCLEImageUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageUS3_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageUS3_Superclass

        Create a new object of the class itkCLEImageUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageUS3_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageUS3_Superclass_swigregister(itkCLEImageUS3_Superclass)
itkCLEImageUS3_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageUS3_Superclass___New_orig__
itkCLEImageUS3_Superclass_cast = _itkCLEImagePython.itkCLEImageUS3_Superclass_cast


def itkCLEImageUS4_Superclass_New():
    return itkCLEImageUS4_Superclass.New()

class itkCLEImageUS4_Superclass(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkCLEImageUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Superclass_Graft)
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUS4_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Superclass_Clone)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Superclass_Allocate)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Superclass_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Superclass_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Superclass_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Superclass_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Superclass_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Superclass_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Superclass_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Superclass_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageUS4_Superclass
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUS4_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageUS4_Superclass

        Create a new object of the class itkCLEImageUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageUS4_Superclass in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageUS4_Superclass_swigregister(itkCLEImageUS4_Superclass)
itkCLEImageUS4_Superclass___New_orig__ = _itkCLEImagePython.itkCLEImageUS4_Superclass___New_orig__
itkCLEImageUS4_Superclass_cast = _itkCLEImagePython.itkCLEImageUS4_Superclass_cast


def itkCLEImageD2_New():
    return itkCLEImageD2.New()

class itkCLEImageD2(itkCLEImageD2_Superclass):
    r"""Proxy of C++ itkCLEImageD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageD2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD2_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageD2
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageD2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageD2

        Create a new object of the class itkCLEImageD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageD2 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageD2_swigregister(itkCLEImageD2)
itkCLEImageD2___New_orig__ = _itkCLEImagePython.itkCLEImageD2___New_orig__
itkCLEImageD2_cast = _itkCLEImagePython.itkCLEImageD2_cast


def itkCLEImageD3_New():
    return itkCLEImageD3.New()

class itkCLEImageD3(itkCLEImageD3_Superclass):
    r"""Proxy of C++ itkCLEImageD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageD3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD3_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageD3
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageD3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageD3

        Create a new object of the class itkCLEImageD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageD3 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageD3_swigregister(itkCLEImageD3)
itkCLEImageD3___New_orig__ = _itkCLEImagePython.itkCLEImageD3___New_orig__
itkCLEImageD3_cast = _itkCLEImagePython.itkCLEImageD3_cast


def itkCLEImageD4_New():
    return itkCLEImageD4.New()

class itkCLEImageD4(itkCLEImageD4_Superclass):
    r"""Proxy of C++ itkCLEImageD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageD4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageD4_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageD4
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageD4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageD4

        Create a new object of the class itkCLEImageD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageD4 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageD4_swigregister(itkCLEImageD4)
itkCLEImageD4___New_orig__ = _itkCLEImagePython.itkCLEImageD4___New_orig__
itkCLEImageD4_cast = _itkCLEImagePython.itkCLEImageD4_cast


def itkCLEImageF2_New():
    return itkCLEImageF2.New()

class itkCLEImageF2(itkCLEImageF2_Superclass):
    r"""Proxy of C++ itkCLEImageF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF2_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageF2
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageF2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageF2

        Create a new object of the class itkCLEImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageF2 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageF2_swigregister(itkCLEImageF2)
itkCLEImageF2___New_orig__ = _itkCLEImagePython.itkCLEImageF2___New_orig__
itkCLEImageF2_cast = _itkCLEImagePython.itkCLEImageF2_cast


def itkCLEImageF3_New():
    return itkCLEImageF3.New()

class itkCLEImageF3(itkCLEImageF3_Superclass):
    r"""Proxy of C++ itkCLEImageF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF3_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageF3
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageF3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageF3

        Create a new object of the class itkCLEImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageF3 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageF3_swigregister(itkCLEImageF3)
itkCLEImageF3___New_orig__ = _itkCLEImagePython.itkCLEImageF3___New_orig__
itkCLEImageF3_cast = _itkCLEImagePython.itkCLEImageF3_cast


def itkCLEImageF4_New():
    return itkCLEImageF4.New()

class itkCLEImageF4(itkCLEImageF4_Superclass):
    r"""Proxy of C++ itkCLEImageF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageF4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageF4_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageF4
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageF4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageF4

        Create a new object of the class itkCLEImageF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageF4 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageF4_swigregister(itkCLEImageF4)
itkCLEImageF4___New_orig__ = _itkCLEImagePython.itkCLEImageF4___New_orig__
itkCLEImageF4_cast = _itkCLEImagePython.itkCLEImageF4_cast


def itkCLEImageSS2_New():
    return itkCLEImageSS2.New()

class itkCLEImageSS2(itkCLEImageSS2_Superclass):
    r"""Proxy of C++ itkCLEImageSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS2_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageSS2
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageSS2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageSS2

        Create a new object of the class itkCLEImageSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageSS2 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageSS2_swigregister(itkCLEImageSS2)
itkCLEImageSS2___New_orig__ = _itkCLEImagePython.itkCLEImageSS2___New_orig__
itkCLEImageSS2_cast = _itkCLEImagePython.itkCLEImageSS2_cast


def itkCLEImageSS3_New():
    return itkCLEImageSS3.New()

class itkCLEImageSS3(itkCLEImageSS3_Superclass):
    r"""Proxy of C++ itkCLEImageSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS3_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageSS3
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageSS3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageSS3

        Create a new object of the class itkCLEImageSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageSS3 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageSS3_swigregister(itkCLEImageSS3)
itkCLEImageSS3___New_orig__ = _itkCLEImagePython.itkCLEImageSS3___New_orig__
itkCLEImageSS3_cast = _itkCLEImagePython.itkCLEImageSS3_cast


def itkCLEImageSS4_New():
    return itkCLEImageSS4.New()

class itkCLEImageSS4(itkCLEImageSS4_Superclass):
    r"""Proxy of C++ itkCLEImageSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageSS4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageSS4_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageSS4
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageSS4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageSS4

        Create a new object of the class itkCLEImageSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageSS4 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageSS4_swigregister(itkCLEImageSS4)
itkCLEImageSS4___New_orig__ = _itkCLEImagePython.itkCLEImageSS4___New_orig__
itkCLEImageSS4_cast = _itkCLEImagePython.itkCLEImageSS4_cast


def itkCLEImageUC2_New():
    return itkCLEImageUC2.New()

class itkCLEImageUC2(itkCLEImageUC2_Superclass):
    r"""Proxy of C++ itkCLEImageUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC2_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageUC2
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageUC2

        Create a new object of the class itkCLEImageUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageUC2 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageUC2_swigregister(itkCLEImageUC2)
itkCLEImageUC2___New_orig__ = _itkCLEImagePython.itkCLEImageUC2___New_orig__
itkCLEImageUC2_cast = _itkCLEImagePython.itkCLEImageUC2_cast


def itkCLEImageUC3_New():
    return itkCLEImageUC3.New()

class itkCLEImageUC3(itkCLEImageUC3_Superclass):
    r"""Proxy of C++ itkCLEImageUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC3_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageUC3
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageUC3

        Create a new object of the class itkCLEImageUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageUC3 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageUC3_swigregister(itkCLEImageUC3)
itkCLEImageUC3___New_orig__ = _itkCLEImagePython.itkCLEImageUC3___New_orig__
itkCLEImageUC3_cast = _itkCLEImagePython.itkCLEImageUC3_cast


def itkCLEImageUC4_New():
    return itkCLEImageUC4.New()

class itkCLEImageUC4(itkCLEImageUC4_Superclass):
    r"""Proxy of C++ itkCLEImageUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUC4_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageUC4
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUC4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageUC4

        Create a new object of the class itkCLEImageUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageUC4 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageUC4_swigregister(itkCLEImageUC4)
itkCLEImageUC4___New_orig__ = _itkCLEImagePython.itkCLEImageUC4___New_orig__
itkCLEImageUC4_cast = _itkCLEImagePython.itkCLEImageUC4_cast


def itkCLEImageUS2_New():
    return itkCLEImageUS2.New()

class itkCLEImageUS2(itkCLEImageUS2_Superclass):
    r"""Proxy of C++ itkCLEImageUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS2_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageUS2
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageUS2

        Create a new object of the class itkCLEImageUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageUS2 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageUS2_swigregister(itkCLEImageUS2)
itkCLEImageUS2___New_orig__ = _itkCLEImagePython.itkCLEImageUS2___New_orig__
itkCLEImageUS2_cast = _itkCLEImagePython.itkCLEImageUS2_cast


def itkCLEImageUS3_New():
    return itkCLEImageUS3.New()

class itkCLEImageUS3(itkCLEImageUS3_Superclass):
    r"""Proxy of C++ itkCLEImageUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS3_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageUS3
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageUS3

        Create a new object of the class itkCLEImageUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageUS3 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageUS3_swigregister(itkCLEImageUS3)
itkCLEImageUS3___New_orig__ = _itkCLEImagePython.itkCLEImageUS3___New_orig__
itkCLEImageUS3_cast = _itkCLEImagePython.itkCLEImageUS3_cast


def itkCLEImageUS4_New():
    return itkCLEImageUS4.New()

class itkCLEImageUS4(itkCLEImageUS4_Superclass):
    r"""Proxy of C++ itkCLEImageUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Clone)
    GetModifiableDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_GetModifiableDataManager)
    GetDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_GetDataManager)
    GetGPUDataManager = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_GetGPUDataManager)
    Allocate = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Allocate)
    UpdateBuffers = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_UpdateBuffers)
    FillBuffer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkCLEImagePython.itkCLEImageUS4_GetNeighborhoodAccessor)
    __swig_destroy__ = _itkCLEImagePython.delete_itkCLEImageUS4
    cast = _swig_new_static_method(_itkCLEImagePython.itkCLEImageUS4_cast)

    def New(*args, **kargs):
        """New() -> itkCLEImageUS4

        Create a new object of the class itkCLEImageUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCLEImageUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCLEImageUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCLEImageUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCLEImageUS4 in _itkCLEImagePython:
_itkCLEImagePython.itkCLEImageUS4_swigregister(itkCLEImageUS4)
itkCLEImageUS4___New_orig__ = _itkCLEImagePython.itkCLEImageUS4___New_orig__
itkCLEImageUS4_cast = _itkCLEImagePython.itkCLEImageUS4_cast



