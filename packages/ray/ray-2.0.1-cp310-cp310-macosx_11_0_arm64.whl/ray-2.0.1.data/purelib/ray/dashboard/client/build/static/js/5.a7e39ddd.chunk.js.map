{"version":3,"sources":["components/SearchComponent.tsx","components/Loading.tsx","../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","../node_modules/@material-ui/core/esm/Switch/Switch.js","service/job.ts","pages/job/index.tsx","pages/job/hook/useJobList.ts"],"names":["useStyles","makeStyles","theme","search","margin","spacing","marginTop","SearchInput","label","onChange","defaultValue","classes","className","size","InputProps","value","target","endAdornment","position","SearchSelect","options","select","SelectProps","style","width","map","e","Loading","loading","open","zIndex","color","TableContainer","React","props","ref","_props$component","component","Component","other","_objectWithoutProperties","_extends","clsx","root","withStyles","overflowX","name","Switch","_props$color","_props$edge","edge","_props$size","icon","thumb","edgeStart","edgeEnd","concat","capitalize","SwitchBase","type","checkedIcon","switchBase","input","checked","disabled","track","display","height","overflow","padding","boxSizing","flexShrink","verticalAlign","colorAdjust","marginLeft","marginRight","top","left","palette","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","getJobList","get","getJobDetail","id","columns","JobList","useState","jobList","setList","pageSize","pageNo","page","setPage","msg","setMsg","isRefreshing","setRefresh","ipLogMap","useContext","GlobalContext","filter","setFilter","refreshRef","useRef","tot","current","getJob","useCallback","a","rsp","data","sort","b","start_time","setTimeout","useEffect","clearTimeout","node","every","f","key","includes","val","onSwitchChange","event","changeFilter","find","push","originalJobs","useJobList","startsWith","TitleCard","title","inputProps","Math","min","Number","Pagination","count","ceil","length","Table","TableHead","TableRow","col","TableCell","align","TableBody","slice","index","job_id","submission_id","driver_info","status","end_time","node_ip_address","to","encodeURIComponent","dayjs","format","pid"],"mappings":"oIAAA,qIASMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,GACtBC,UAAW,OAIFC,EAAc,SAAC,GAQrB,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAC,EAKI,EALJA,aAMMC,EAAUX,IAEhB,OACE,kBAAC,IAAD,CACEY,UAAWD,EAAQR,OACnBU,KAAK,QACLL,MAAOA,EACPM,WAAY,CACVL,SAAU,YAA4B,IAAfM,EAAc,EAAxBC,OAAUD,MACjBN,GACFA,EAASM,IAGbL,eACAO,aACE,kBAAC,IAAD,CAAgBC,SAAS,OACvB,kBAAC,IAAD,WAQCC,EAAe,SAAC,GAQtB,IAPLX,EAOI,EAPJA,MACAC,EAMI,EANJA,SACAW,EAKI,EALJA,QAMMT,EAAUX,IAChB,OACE,kBAAC,IAAD,CACEY,UAAWD,EAAQR,OACnBU,KAAK,QACLL,MAAOA,EACPa,QAAM,EACNC,YAAa,CACXb,SAAU,YAA4B,IAAfM,EAAc,EAAxBC,OAAUD,MACjBN,GACFA,EAASM,IAGbQ,MAAO,CACLC,MAAO,OAIX,kBAAC,IAAD,CAAUT,MAAM,IAAhB,OACCK,EAAQK,KAAI,SAACC,GAAD,MACE,kBAANA,EACL,kBAAC,IAAD,CAAUX,MAAOW,GAAIA,GAErB,kBAAC,IAAD,CAAUX,MAAOW,EAAE,IAAKA,EAAE,U,iCCjFpC,sCASeC,IANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACd,kBAAC,IAAD,CAAUC,KAAMD,EAASL,MAAO,CAAEO,OAAQ,MACxC,kBAAC,IAAD,CAAkBC,MAAM,e,iCCL5B,8CAaIC,EAA8BC,cAAiB,SAAwBC,EAAOC,GAChF,IAAIxB,EAAUuB,EAAMvB,QAChBC,EAAYsB,EAAMtB,UAClBwB,EAAmBF,EAAMG,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAQC,YAAyBN,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBD,gBAAoBK,EAAWG,YAAS,CAC1DN,IAAKA,EACLvB,UAAW8B,YAAK/B,EAAQgC,KAAM/B,IAC7B2B,OA2BUK,gBA5CK,CAElBD,KAAM,CACJnB,MAAO,OACPqB,UAAW,SAwCmB,CAChCC,KAAM,qBADOF,CAEZZ,I,iCCpDH,qEAmKIe,EAAsBd,cAAiB,SAAgBC,EAAOC,GAChE,IAAIxB,EAAUuB,EAAMvB,QAChBC,EAAYsB,EAAMtB,UAClBoC,EAAed,EAAMH,MACrBA,OAAyB,IAAjBiB,EAA0B,YAAcA,EAChDC,EAAcf,EAAMgB,KACpBA,OAAuB,IAAhBD,GAAiCA,EACxCE,EAAcjB,EAAMrB,KACpBA,OAAuB,IAAhBsC,EAAyB,SAAWA,EAC3CZ,EAAQC,YAAyBN,EAAO,CAAC,UAAW,YAAa,QAAS,OAAQ,SAElFkB,EAAoBnB,gBAAoB,OAAQ,CAClDrB,UAAWD,EAAQ0C,QAErB,OAAoBpB,gBAAoB,OAAQ,CAC9CrB,UAAW8B,YAAK/B,EAAQgC,KAAM/B,EAAW,CACvC,MAASD,EAAQ2C,UACjB,IAAO3C,EAAQ4C,SACfL,GAAgB,UAATrC,GAAoBF,EAAQ,OAAO6C,OAAOC,YAAW5C,OAChDoB,gBAAoByB,IAAYjB,YAAS,CACvDkB,KAAM,WACNP,KAAMA,EACNQ,YAAaR,EACbzC,QAAS,CACPgC,KAAMD,YAAK/B,EAAQkD,WAAYlD,EAAQ,QAAQ6C,OAAOC,YAAW1B,MACjE+B,MAAOnD,EAAQmD,MACfC,QAASpD,EAAQoD,QACjBC,SAAUrD,EAAQqD,UAEpB7B,IAAKA,GACJI,IAAsBN,gBAAoB,OAAQ,CACnDrB,UAAWD,EAAQsD,YAwGRrB,iBA/RK,SAAgB1C,GAClC,MAAO,CAELyC,KAAM,CACJuB,QAAS,cACT1C,MAAO,GACP2C,OAAQ,GACRC,SAAU,SACVC,QAAS,GACTC,UAAW,aACXpD,SAAU,WACVqD,WAAY,EACZzC,OAAQ,EAER0C,cAAe,SAEf,eAAgB,CACdC,YAAa,UAKjBnB,UAAW,CACToB,YAAa,GAIfnB,QAAS,CACPoB,aAAc,GAIhBd,WAAY,CACV3C,SAAU,WACV0D,IAAK,EACLC,KAAM,EACN/C,OAAQ,EAERC,MAA8B,UAAvB7B,EAAM4E,QAAQnB,KAAmBzD,EAAM4E,QAAQC,KAAK,IAAM7E,EAAM4E,QAAQC,KAAK,KACpFC,WAAY9E,EAAM+E,YAAYC,OAAO,CAAC,OAAQ,aAAc,CAC1DC,SAAUjF,EAAM+E,YAAYE,SAASC,WAEvC,YAAa,CACXC,UAAW,oBAEb,aAAc,CACZtD,MAA8B,UAAvB7B,EAAM4E,QAAQnB,KAAmBzD,EAAM4E,QAAQC,KAAK,KAAO7E,EAAM4E,QAAQC,KAAK,MAEvF,qBAAsB,CACpBO,QAAS,IAEX,sBAAuB,CACrBA,QAAgC,UAAvBpF,EAAM4E,QAAQnB,KAAmB,IAAO,KAKrD4B,aAAc,CACZ,YAAa,CACXxD,MAAO7B,EAAM4E,QAAQU,QAAQC,KAC7B,UAAW,CACTC,gBAAiBC,YAAKzF,EAAM4E,QAAQU,QAAQC,KAAMvF,EAAM4E,QAAQc,OAAOC,cACvE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZ3D,MAA8B,UAAvB7B,EAAM4E,QAAQnB,KAAmBzD,EAAM4E,QAAQC,KAAK,KAAO7E,EAAM4E,QAAQC,KAAK,MAEvF,qBAAsB,CACpBW,gBAAiBxF,EAAM4E,QAAQU,QAAQC,MAEzC,sBAAuB,CACrBC,gBAAwC,UAAvBxF,EAAM4E,QAAQnB,KAAmBzD,EAAM4E,QAAQgB,OAAOC,MAAQ7F,EAAM4E,QAAQgB,OAAOE,QAKxGC,eAAgB,CACd,YAAa,CACXlE,MAAO7B,EAAM4E,QAAQoB,UAAUT,KAC/B,UAAW,CACTC,gBAAiBC,YAAKzF,EAAM4E,QAAQoB,UAAUT,KAAMvF,EAAM4E,QAAQc,OAAOC,cACzE,uBAAwB,CACtBH,gBAAiB,iBAIvB,aAAc,CACZ3D,MAA8B,UAAvB7B,EAAM4E,QAAQnB,KAAmBzD,EAAM4E,QAAQC,KAAK,KAAO7E,EAAM4E,QAAQC,KAAK,MAEvF,qBAAsB,CACpBW,gBAAiBxF,EAAM4E,QAAQoB,UAAUT,MAE3C,sBAAuB,CACrBC,gBAAwC,UAAvBxF,EAAM4E,QAAQnB,KAAmBzD,EAAM4E,QAAQgB,OAAOC,MAAQ7F,EAAM4E,QAAQgB,OAAOE,QAKxGG,UAAW,CACT3E,MAAO,GACP2C,OAAQ,GACRE,QAAS,EACT,WAAY,CACV7C,MAAO,GACP2C,OAAQ,IAEV,gBAAiB,CACfE,QAAS,EACT,YAAa,CACXgB,UAAW,sBAMjBtB,QAAS,GAGTC,SAAU,GAGVF,MAAO,CACLe,KAAM,QACNrD,MAAO,QAIT6B,MAAO,CACL+C,UAAWlG,EAAMmG,QAAQ,GACzBX,gBAAiB,eACjBlE,MAAO,GACP2C,OAAQ,GACRmC,aAAc,OAIhBrC,MAAO,CACLE,OAAQ,OACR3C,MAAO,OACP8E,aAAc,EACdxE,QAAS,EACTkD,WAAY9E,EAAM+E,YAAYC,OAAO,CAAC,UAAW,oBAAqB,CACpEC,SAAUjF,EAAM+E,YAAYE,SAASC,WAEvCM,gBAAwC,UAAvBxF,EAAM4E,QAAQnB,KAAmBzD,EAAM4E,QAAQgB,OAAOC,MAAQ7F,EAAM4E,QAAQgB,OAAOE,MACpGV,QAAgC,UAAvBpF,EAAM4E,QAAQnB,KAAmB,IAAO,OA2IrB,CAChCb,KAAM,aADOF,CAEZG,I,iCC3SH,gFAEawD,EAAa,WACxB,OAAOC,YAAgB,cAGZC,EAAe,SAACC,GAC3B,OAAOF,YAAG,eAAuBE,M,0QCW7B1G,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCyC,KAAM,CACJ0B,QAASnE,EAAMG,QAAQ,GACvBmB,MAAO,YAILmF,EAAU,CACd,SACA,gBACA,SACA,OACA,YACA,UACA,cAmIaC,UAhIC,WACd,IAAMjG,EAAUX,IAChB,ECjCwB,WACxB,MAA2B6G,mBAAuB,IAAlD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,CAAEG,SAAU,GAAIC,OAAQ,IAAzD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBN,mBAAS,2BAA/B,mBAAOO,EAAP,KAAYC,EAAZ,KACA,EAAmCR,oBAAS,GAA5C,mBAAOS,EAAP,KAAqBC,EAArB,KACQC,EAAaC,qBAAWC,KAAxBF,SACR,EAA4BX,mBAK1B,IALF,mBAAOc,EAAP,KAAeC,EAAf,KAMMC,EAAaC,iBAAOR,GACpBS,EAAMD,mBAaZD,EAAWG,QAAUV,EACrB,IAAMW,EAASC,sBAAW,sBAAC,4BAAAC,EAAA,yDACpBN,EAAWG,QADS,iEAIPzB,cAJO,QAInB6B,EAJmB,UAOvBrB,EACEqB,EAAIC,KAAKC,MAAK,SAACH,EAAGI,GAAJ,eAAU,UAACA,EAAEC,kBAAH,QAAiB,IAAjB,UAAuBL,EAAEK,kBAAzB,QAAuC,OAEjEnB,EAAO,iBAGTU,EAAIC,QAAUS,WAAWR,EAAQ,KAbR,2CAcxB,IAUH,OARAS,qBAAU,WAER,OADAT,IACO,WACDF,EAAIC,SACNW,aAAaZ,EAAIC,YAGpB,CAACC,IACG,CACLnB,QAASA,EAAQa,QAAO,SAACiB,GAAD,OACtBjB,EAAOkB,OAAM,SAACC,GAAD,aAAOF,EAAKE,EAAEC,OAAQ,UAACH,EAAKE,EAAEC,YAAR,QAAgB,IAAIC,SAASF,EAAEG,WAEpE7B,MACAE,eACA4B,eAlCqB,SAACC,GACtB5B,EAAW4B,EAAMnI,OAAO+C,UAkCxBqF,aA5CmB,SAACL,EAA0BE,GAC9C,IAAMH,EAAInB,EAAO0B,MAAK,SAAC3H,GAAD,OAAOA,EAAEqH,MAAQA,KACnCD,EACFA,EAAEG,IAAMA,EAERtB,EAAO2B,KAAK,CAAEP,MAAKE,QAErBrB,EAAU,YAAID,KAsCdT,OACAqC,aAAczC,EACdK,QAAS,SAAC4B,EAAaE,GAAd,OAA8B9B,EAAQ,2BAAKD,GAAN,kBAAa6B,EAAME,MACjEzB,YDpBEgC,GARFpC,EADF,EACEA,IACAE,EAFF,EAEEA,aACA4B,EAHF,EAGEA,eACApC,EAJF,EAIEA,QACAsC,EALF,EAKEA,aACAlC,EANF,EAMEA,KACAC,EAPF,EAOEA,QACAK,EARF,EAQEA,SAGF,OACE,yBAAK5G,UAAWD,EAAQgC,MACtB,kBAAChB,EAAA,EAAD,CAASC,QAASwF,EAAIqC,WAAW,aACjC,kBAACC,EAAA,EAAD,CAAWC,MAAM,QAAjB,gBAEE,kBAAC5G,EAAA,EAAD,CACEgB,QAASuD,EACT7G,SAAUyI,EACVpG,KAAK,UACL8G,WAAY,CAAE,aAAc,wBAE9B,6BARF,mBASmBxC,GAEnB,kBAACsC,EAAA,EAAD,CAAWC,MAAM,YACf,kBAAC3H,EAAA,EAAD,KACE,kBAAC,IAAD,CACExB,MAAM,SACNC,SAAU,SAACM,GAAD,OAAWqI,EAAa,SAAUrI,MAE9C,kBAAC,IAAD,CACEP,MAAM,YACNC,SAAU,SAACM,GAAD,OACRoG,EAAQ,WAAY0C,KAAKC,IAAIC,OAAOhJ,GAAQ,MAAQ,OAGxD,6BACE,kBAACiJ,EAAA,EAAD,CACEC,MAAOJ,KAAKK,KAAKpD,EAAQqD,OAASjD,EAAKF,UACvCE,KAAMA,EAAKD,OACXxG,SAAU,SAACiB,EAAGuF,GAAJ,OAAeE,EAAQ,SAAUF,OAG/C,kBAACmD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACG3D,EAAQlF,KAAI,SAAC8I,GAAD,OACX,kBAACC,EAAA,EAAD,CAAWC,MAAM,SAAS1B,IAAKwB,GAC5BA,QAKT,kBAACG,EAAA,EAAD,KACG5D,EACE6D,OACEzD,EAAKD,OAAS,GAAKC,EAAKF,SACzBE,EAAKD,OAASC,EAAKF,UAEpBvF,KACC,WAUEmJ,GAVF,QAEIC,EAFJ,EAEIA,OACAC,EAHJ,EAGIA,cACAC,EAJJ,EAIIA,YACApH,EALJ,EAKIA,KACAqH,EANJ,EAMIA,OACAxC,EAPJ,EAOIA,WACAyC,EARJ,EAQIA,SARJ,OAYE,kBAACX,EAAA,EAAD,CAAUvB,IAAG,iBAAE8B,QAAF,IAAEA,IAAUC,SAAZ,QAA6BF,GACxC,kBAACJ,EAAA,EAAD,CAAWC,MAAM,UAAjB,OAA2BI,QAA3B,IAA2BA,IAAU,KACrC,kBAACL,EAAA,EAAD,CAAWC,MAAM,UAAjB,OACGK,QADH,IACGA,IAAiB,KAEpB,kBAACN,EAAA,EAAD,CAAWC,MAAM,UAAUO,GAC3B,kBAACR,EAAA,EAAD,CAAWC,MAAM,UAGdM,GACDvD,EAASuD,EAAYG,iBACnB,kBAAC,IAAD,CACEC,GAAE,eAAUC,mBACV5D,EAASuD,EAAYG,kBADrB,qBAGS,WAATvH,EACIkH,EADJ,iBAEcC,IAEhB9J,OAAO,UART,OAaA,KAGJ,kBAACwJ,EAAA,EAAD,CAAWC,MAAM,UACdY,IAAMtB,OAAOvB,IAAa8C,OACzB,wBAGJ,kBAACd,EAAA,EAAD,CAAWC,MAAM,UACdQ,GAAYA,EAAW,EACpBI,IAAMtB,OAAOkB,IAAWK,OACtB,uBAEF,KAEN,kBAACd,EAAA,EAAD,CAAWC,MAAM,UAAjB,iBACGM,QADH,IACGA,OADH,EACGA,EAAaQ,WADhB,QACuB","file":"static/js/5.a7e39ddd.chunk.js","sourcesContent":["import {\n  InputAdornment,\n  makeStyles,\n  MenuItem,\n  TextField,\n} from \"@material-ui/core\";\nimport { SearchOutlined } from \"@material-ui/icons\";\nimport React from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    margin: theme.spacing(1),\n    marginTop: 0,\n  },\n}));\n\nexport const SearchInput = ({\n  label,\n  onChange,\n  defaultValue,\n}: {\n  label: string;\n  defaultValue?: string;\n  onChange?: (value: string) => void;\n}) => {\n  const classes = useStyles();\n\n  return (\n    <TextField\n      className={classes.search}\n      size=\"small\"\n      label={label}\n      InputProps={{\n        onChange: ({ target: { value } }) => {\n          if (onChange) {\n            onChange(value);\n          }\n        },\n        defaultValue,\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <SearchOutlined />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nexport const SearchSelect = ({\n  label,\n  onChange,\n  options,\n}: {\n  label: string;\n  onChange?: (value: string) => void;\n  options: (string | [string, string])[];\n}) => {\n  const classes = useStyles();\n  return (\n    <TextField\n      className={classes.search}\n      size=\"small\"\n      label={label}\n      select\n      SelectProps={{\n        onChange: ({ target: { value } }) => {\n          if (onChange) {\n            onChange(value as string);\n          }\n        },\n        style: {\n          width: 100,\n        },\n      }}\n    >\n      <MenuItem value=\"\">All</MenuItem>\n      {options.map((e) =>\n        typeof e === \"string\" ? (\n          <MenuItem value={e}>{e}</MenuItem>\n        ) : (\n          <MenuItem value={e[0]}>{e[1]}</MenuItem>\n        ),\n      )}\n    </TextField>\n  );\n};\n","import { Backdrop, CircularProgress } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst Loading = ({ loading }: { loading: boolean }) => (\n  <Backdrop open={loading} style={{ zIndex: 100 }}>\n    <CircularProgress color=\"primary\" />\n  </Backdrop>\n);\n\nexport default Loading;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import { JobDetailRsp, JobListRsp } from \"../type/job\";\nimport { get } from \"./requestHandlers\";\n\nexport const getJobList = () => {\n  return get<JobListRsp>(\"api/jobs/\");\n};\n\nexport const getJobDetail = (id: string) => {\n  return get<JobDetailRsp>(`jobs/${id}`);\n};\n","import {\n  Switch,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport dayjs from \"dayjs\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport { SearchInput } from \"../../components/SearchComponent\";\nimport TitleCard from \"../../components/TitleCard\";\nimport { useJobList } from \"./hook/useJobList\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    width: \"100%\",\n  },\n}));\n\nconst columns = [\n  \"Job ID\",\n  \"Submission ID\",\n  \"Status\",\n  \"Logs\",\n  \"StartTime\",\n  \"EndTime\",\n  \"Driver Pid\",\n];\n\nconst JobList = () => {\n  const classes = useStyles();\n  const {\n    msg,\n    isRefreshing,\n    onSwitchChange,\n    jobList,\n    changeFilter,\n    page,\n    setPage,\n    ipLogMap,\n  } = useJobList();\n\n  return (\n    <div className={classes.root}>\n      <Loading loading={msg.startsWith(\"Loading\")} />\n      <TitleCard title=\"JOBS\">\n        Auto Refresh:\n        <Switch\n          checked={isRefreshing}\n          onChange={onSwitchChange}\n          name=\"refresh\"\n          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n        />\n        <br />\n        Request Status: {msg}\n      </TitleCard>\n      <TitleCard title=\"Job List\">\n        <TableContainer>\n          <SearchInput\n            label=\"Job ID\"\n            onChange={(value) => changeFilter(\"job_id\", value)}\n          />\n          <SearchInput\n            label=\"Page Size\"\n            onChange={(value) =>\n              setPage(\"pageSize\", Math.min(Number(value), 500) || 10)\n            }\n          />\n          <div>\n            <Pagination\n              count={Math.ceil(jobList.length / page.pageSize)}\n              page={page.pageNo}\n              onChange={(e, pageNo) => setPage(\"pageNo\", pageNo)}\n            />\n          </div>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {columns.map((col) => (\n                  <TableCell align=\"center\" key={col}>\n                    {col}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {jobList\n                .slice(\n                  (page.pageNo - 1) * page.pageSize,\n                  page.pageNo * page.pageSize,\n                )\n                .map(\n                  (\n                    {\n                      job_id,\n                      submission_id,\n                      driver_info,\n                      type,\n                      status,\n                      start_time,\n                      end_time,\n                    },\n                    index,\n                  ) => (\n                    <TableRow key={job_id ?? submission_id ?? index}>\n                      <TableCell align=\"center\">{job_id ?? \"-\"}</TableCell>\n                      <TableCell align=\"center\">\n                        {submission_id ?? \"-\"}\n                      </TableCell>\n                      <TableCell align=\"center\">{status}</TableCell>\n                      <TableCell align=\"center\">\n                        {/* TODO(aguo): Also show logs for the job id instead\n                        of just the submission's logs */}\n                        {driver_info &&\n                        ipLogMap[driver_info.node_ip_address] ? (\n                          <Link\n                            to={`/log/${encodeURIComponent(\n                              ipLogMap[driver_info.node_ip_address],\n                            )}?fileName=${\n                              type === \"DRIVER\"\n                                ? job_id\n                                : `driver-${submission_id}`\n                            }`}\n                            target=\"_blank\"\n                          >\n                            Log\n                          </Link>\n                        ) : (\n                          \"-\"\n                        )}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {dayjs(Number(start_time)).format(\n                          \"YYYY/MM/DD HH:mm:ss\",\n                        )}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {end_time && end_time > 0\n                          ? dayjs(Number(end_time)).format(\n                              \"YYYY/MM/DD HH:mm:ss\",\n                            )\n                          : \"-\"}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        {driver_info?.pid ?? \"-\"}\n                      </TableCell>\n                    </TableRow>\n                  ),\n                )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </TitleCard>\n    </div>\n  );\n};\n\nexport default JobList;\n","import { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { GlobalContext } from \"../../../App\";\nimport { getJobList } from \"../../../service/job\";\nimport { UnifiedJob } from \"../../../type/job\";\n\nexport const useJobList = () => {\n  const [jobList, setList] = useState<UnifiedJob[]>([]);\n  const [page, setPage] = useState({ pageSize: 10, pageNo: 1 });\n  const [msg, setMsg] = useState(\"Loading the job list...\");\n  const [isRefreshing, setRefresh] = useState(true);\n  const { ipLogMap } = useContext(GlobalContext);\n  const [filter, setFilter] = useState<\n    {\n      key: \"job_id\" | \"status\";\n      val: string;\n    }[]\n  >([]);\n  const refreshRef = useRef(isRefreshing);\n  const tot = useRef<NodeJS.Timeout>();\n  const changeFilter = (key: \"job_id\" | \"status\", val: string) => {\n    const f = filter.find((e) => e.key === key);\n    if (f) {\n      f.val = val;\n    } else {\n      filter.push({ key, val });\n    }\n    setFilter([...filter]);\n  };\n  const onSwitchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRefresh(event.target.checked);\n  };\n  refreshRef.current = isRefreshing;\n  const getJob = useCallback(async () => {\n    if (!refreshRef.current) {\n      return;\n    }\n    const rsp = await getJobList();\n\n    if (rsp) {\n      setList(\n        rsp.data.sort((a, b) => (b.start_time ?? 0) - (a.start_time ?? 0)),\n      );\n      setMsg(\"Fetched jobs\");\n    }\n\n    tot.current = setTimeout(getJob, 4000);\n  }, []);\n\n  useEffect(() => {\n    getJob();\n    return () => {\n      if (tot.current) {\n        clearTimeout(tot.current);\n      }\n    };\n  }, [getJob]);\n  return {\n    jobList: jobList.filter((node) =>\n      filter.every((f) => node[f.key] && (node[f.key] ?? \"\").includes(f.val)),\n    ),\n    msg,\n    isRefreshing,\n    onSwitchChange,\n    changeFilter,\n    page,\n    originalJobs: jobList,\n    setPage: (key: string, val: number) => setPage({ ...page, [key]: val }),\n    ipLogMap,\n  };\n};\n"],"sourceRoot":""}