{"version":3,"sources":["ThemeProvider.tsx","camera.ts","ImageDataPreview.tsx","component-value.ts","worker/fesion.worker.ts","worker/proxy.ts","MyComponent.tsx","index.tsx"],"names":["ThemeProvider","props","stTheme","useRenderData","theme","muiTheme","createTheme","palette","primary","main","primaryColor","background","default","backgroundColor","paper","secondaryBackgroundColor","text","textColor","typography","fontFamily","font","children","stopStream","stream","getTracks","forEach","track","stop","ImageDataPreview","canvasRef","useRef","imageData","useEffect","current","canvasElem","width","height","Streamlit","setFrameHeight","ctx","getContext","putImageData","ref","setComponentValue","componentValue","Worker_fn","Worker","WorkerProxy","options","worker","workerInitialData","_isLoaded","this","funcName","funcDefPyCode","requirements","onmessage","e","_processWorkerMessage","data","msg","type","postInitialData","initDataMessage","postMessage","message","expectedReplyType","Promise","resolve","reject","channel","MessageChannel","port1","close","error","Error","port2","_asyncPostMessage","then","console","debug","filterFuncConfig","MyComponent","renderData","imageFilterPyFuncDefCode","args","imageFilterPyFuncName","imageFilterDepPackages","imageFilterDepPackagesJson","JSON","stringify","sort","useState","workerProxy","setWorkerProxy","pythonError","filterDepPackages","parse","isLoaded","updateFuncCode","frame","setFrame","playing","setPlaying","play","useCallback","undefined","playingRef","onFrame","a","process","outImageData","stack","startsWith","videoConstraints","onFrameFnRef","unmounted","videoElem","document","createElement","canvasCtx","lastFrameTime","onAnimationFrame","paused","currentTime","drawImage","getImageData","window","requestAnimationFrame","navigator","mediaDevices","getUserMedia","video","audio","_stream","onloadedmetadata","videoWidth","videoHeight","srcObject","pause","remove","useCamera","Box","position","display","top","left","justifyContent","alignItems","CircularProgress","size","Button","variant","onClick","ReactDOM","render","StrictMode","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.9a06663b.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  ThemeProvider as MuiThemeProvider,\n  createTheme,\n} from \"@mui/material/styles\";\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\";\n\ninterface ThemeProviderProps {\n  children: React.ReactNode;\n}\nconst ThemeProvider: React.VFC<ThemeProviderProps> = (props) => {\n  const { theme: stTheme } = useRenderData();\n\n  if (stTheme == null) {\n    return <>props.children</>;\n  }\n\n  const muiTheme = createTheme({\n    palette: {\n      primary: {\n        main: stTheme.primaryColor,\n      },\n      background: {\n        default: stTheme.backgroundColor,\n        paper: stTheme.secondaryBackgroundColor,\n      },\n      text: {\n        primary: stTheme.textColor,\n      },\n    },\n    typography: {\n      fontFamily: stTheme.font,\n    },\n  });\n\n  return <MuiThemeProvider theme={muiTheme}>{props.children}</MuiThemeProvider>;\n};\n\nexport default ThemeProvider;\n","import { useEffect, useRef } from \"react\";\n\nfunction stopStream(stream: MediaStream): void {\n  stream.getTracks().forEach((track) => {\n    track.stop();\n  });\n}\n\ntype onFrameFn = (imageData: ImageData) => void | Promise<void>;\n\ninterface UseCameraOptions {\n  playing: boolean;\n  videoConstraints: MediaStreamConstraints[\"video\"];\n  onFrame: onFrameFn;\n}\nexport const useCamera = ({\n  playing,\n  videoConstraints,\n  onFrame,\n}: UseCameraOptions): void => {\n  const onFrameFnRef = useRef<onFrameFn>(onFrame);\n  onFrameFnRef.current = onFrame;\n\n  useEffect(() => {\n    if (!playing) {\n      return;\n    }\n\n    let unmounted = false;\n\n    const videoElem = document.createElement(\"video\");\n\n    const canvasElem = document.createElement(\"canvas\");\n    const canvasCtx = canvasElem.getContext(\"2d\"); // TODO: Check if another context type is better.\n\n    if (canvasCtx == null) {\n      throw new Error(\"Failed to get a canvas context.\");\n    }\n\n    let lastFrameTime: number | undefined = undefined;\n    const onAnimationFrame = async () => {\n      if (unmounted) {\n        return;\n      }\n\n      if (!videoElem.paused && videoElem.currentTime !== lastFrameTime) {\n        lastFrameTime = videoElem.currentTime;\n\n        canvasCtx.drawImage(videoElem, 0, 0);\n        const imageData = canvasCtx.getImageData(\n          0,\n          0,\n          canvasElem.width,\n          canvasElem.height\n        );\n\n        await onFrameFnRef.current(imageData); // NOTE: Wait for the promise resolution here, but parallel execution may also be an option.\n      }\n\n      window.requestAnimationFrame(onAnimationFrame);\n    };\n\n    let stream: MediaStream | null = null;\n    navigator.mediaDevices\n      .getUserMedia({\n        video: videoConstraints,\n        audio: false,\n      })\n      .then((_stream) => {\n        if (unmounted) {\n          stopStream(_stream);\n          return;\n        }\n\n        stream = _stream;\n\n        videoElem.onloadedmetadata = function () {\n          if (unmounted) {\n            return;\n          }\n\n          canvasElem.width = videoElem.videoWidth;\n          canvasElem.height = videoElem.videoHeight;\n          videoElem.play();\n\n          window.requestAnimationFrame(onAnimationFrame);\n        };\n\n        videoElem.srcObject = stream;\n      });\n\n    return () => {\n      unmounted = true;\n\n      videoElem.pause();\n      videoElem.remove();\n\n      canvasElem.remove();\n\n      if (stream) {\n        stopStream(stream);\n      }\n    };\n  }, [playing, videoConstraints]);\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { Streamlit } from \"streamlit-component-lib\";\n\ninterface ImageDataPreviewProps {\n  imageData: ImageData;\n}\nconst ImageDataPreview: React.VFC<ImageDataPreviewProps> = (props) => {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  const imageData = props.imageData;\n\n  // Size adjustment\n  useEffect(() => {\n    if (canvasRef.current == null) {\n      return;\n    }\n\n    const canvasElem = canvasRef.current;\n    canvasElem.width = imageData.width;\n    canvasElem.height = imageData.height;\n\n    Streamlit.setFrameHeight();\n    return () => {\n      Streamlit.setFrameHeight();\n    };\n  }, [imageData.width, imageData.height]);\n\n  // Draw canvas\n  useEffect(() => {\n    if (canvasRef.current == null) {\n      return;\n    }\n\n    const canvasElem = canvasRef.current;\n    const ctx = canvasElem.getContext(\"2d\");\n    ctx?.putImageData(imageData, 0, 0);\n  }, [imageData]);\n\n  return <canvas ref={canvasRef} />;\n};\n\nexport default ImageDataPreview;\n","import { Streamlit } from \"streamlit-component-lib\";\n\nexport interface ComponentValue {\n  pythonError: null | {\n    message: string;\n    stack: string;\n  };\n}\n\nexport function setComponentValue(componentValue: ComponentValue): void {\n  return Streamlit.setComponentValue(componentValue);\n}\n","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/fesion.worker.82af06f5.js\");\n}\n","import Worker from \"./fesion.worker\";\n\ninterface WorkerProxyOptions {\n  funcName: string;\n  funcDefPyCode: string;\n  requirements: string[];\n}\n\nexport class WorkerProxy {\n  private worker: Worker;\n  private workerInitialData: FilterFuncConfig;\n\n  private _isLoaded: boolean;\n  public get isLoaded(): boolean {\n    return this._isLoaded;\n  }\n\n  public constructor(options: WorkerProxyOptions) {\n    this.workerInitialData = {\n      funcName: options.funcName,\n      funcDefPyCode: options.funcDefPyCode,\n      requirements: options.requirements,\n    };\n    this._isLoaded = false;\n\n    this.worker = new Worker();\n    this.worker.onmessage = (e) => {\n      this._processWorkerMessage(e.data);\n    };\n  }\n\n  private _processWorkerMessage(msg: OutMessage): void {\n    switch (msg.type) {\n      case \"ready\": {\n        this.postInitialData();\n        break;\n      }\n      case \"loaded\": {\n        this._isLoaded = true;\n      }\n    }\n  }\n\n  private postInitialData() {\n    const initDataMessage: InitDataMessage = {\n      type: \"initData\",\n      data: this.workerInitialData,\n    };\n    this.worker.postMessage(initDataMessage);\n  }\n\n  private _asyncPostMessage(\n    message: InMessage\n  ): Promise<GeneralReplyMessage[\"data\"]>;\n  private _asyncPostMessage<T extends ReplyMessage[\"type\"]>(\n    message: InMessage,\n    expectedReplyType: T\n  ): Promise<Extract<ReplyMessage, { type: T }>[\"data\"]>;\n  private _asyncPostMessage(\n    message: InMessage,\n    expectedReplyType = \"reply\"\n  ): Promise<ReplyMessage[\"data\"]> {\n    return new Promise((resolve, reject) => {\n      const channel = new MessageChannel();\n\n      channel.port1.onmessage = (e: MessageEvent<ReplyMessage>) => {\n        channel.port1.close();\n        const msg = e.data;\n        if (msg.error) {\n          reject(msg.error);\n        } else {\n          if (msg.type !== expectedReplyType) {\n            throw new Error(`Unexpected reply type \"${msg.type}\"`);\n          }\n          resolve(msg.data);\n        }\n      };\n\n      this.worker.postMessage(message, [channel.port2]);\n    });\n  }\n\n  public process(imageData: ImageData): Promise<ImageData> {\n    if (!this._isLoaded) {\n      console.debug(\"Worker is not loaded\");\n      return Promise.resolve(imageData);\n    }\n\n    return this._asyncPostMessage(\n      {\n        type: \"inputImage\",\n        data: {\n          imageData,\n        },\n      },\n      \"outputImage\"\n    ).then((data) => {\n      return data.imageData;\n    });\n  }\n\n  public updateFuncCode(filterFuncConfig: FilterFuncConfig): Promise<void> {\n    return this._asyncPostMessage({\n      type: \"updateFilterFunc\",\n      data: filterFuncConfig,\n    });\n  }\n}\n","import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\";\nimport Button from \"@mui/material/Button\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Box from \"@mui/material/Box\";\nimport { useCamera } from \"./camera\";\nimport ImageDataPreview from \"./ImageDataPreview\";\nimport { setComponentValue } from \"./component-value\";\nimport { WorkerProxy } from \"./worker/proxy\";\n\nconst MyComponent: React.VFC = () => {\n  const renderData = useRenderData();\n\n  const imageFilterPyFuncDefCode = renderData.args[\"func_def_code\"];\n  const imageFilterPyFuncName = renderData.args[\"func_name\"]; // TODO: Create a denied name list as a func_name, which are already used as global entity names, like `fesionImageWidth`.\n  const imageFilterDepPackages: string[] =\n    renderData.args[\"dep_packages\"] ?? [];\n  const imageFilterDepPackagesJson = JSON.stringify(\n    imageFilterDepPackages.sort()\n  ); // Serialize for memoization\n\n  const [workerProxy, setWorkerProxy] = useState<WorkerProxy>();\n  useEffect(\n    () => {\n      setComponentValue({ pythonError: null });\n\n      const filterDepPackages: string[] = JSON.parse(\n        imageFilterDepPackagesJson\n      );\n\n      const workerProxy = new WorkerProxy({\n        funcName: imageFilterPyFuncName,\n        funcDefPyCode: imageFilterPyFuncDefCode,\n        requirements: filterDepPackages,\n      });\n\n      setWorkerProxy(workerProxy);\n    },\n    [\n      // No deps because workerProxy should not be re-created.\n    ]\n  );\n  useEffect(() => {\n    if (workerProxy == null || !workerProxy.isLoaded) {\n      return;\n    }\n\n    setComponentValue({ pythonError: null });\n\n    const filterDepPackages: string[] =\n      JSON.parse(imageFilterDepPackagesJson) || [];\n\n    workerProxy.updateFuncCode({\n      funcName: imageFilterPyFuncName,\n      funcDefPyCode: imageFilterPyFuncDefCode,\n      requirements: filterDepPackages,\n    });\n  }, [\n    workerProxy,\n    imageFilterPyFuncName,\n    imageFilterPyFuncDefCode,\n    imageFilterDepPackagesJson,\n  ]);\n\n  const [frame, setFrame] = useState<ImageData>();\n\n  const [playing, setPlaying] = useState(false);\n\n  const play = useCallback(() => setPlaying(true), []);\n  const stop = useCallback(() => {\n    setPlaying(false);\n    setFrame(undefined);\n  }, []);\n\n  const playingRef = useRef(false);\n  playingRef.current = playing;\n  const onFrame = useCallback(\n    async (imageData: ImageData) => {\n      if (workerProxy == null || !workerProxy.isLoaded) {\n        setFrame(imageData);\n        return;\n      }\n\n      try {\n        const outImageData = await workerProxy.process(imageData);\n        // Here is called asynchronously, so use ref to check the `playing` value.\n        if (!playingRef.current) {\n          setFrame(undefined);\n          return;\n        }\n        setFrame(outImageData);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      } catch (err: any) {\n        if (\n          typeof err.stack === \"string\" &&\n          err.stack.startsWith(\"PythonError\")\n        ) {\n          const serializableError = {\n            stack: err.stack,\n            message: err.message,\n          };\n          setComponentValue({ pythonError: serializableError });\n        }\n        setPlaying(false);\n        throw err;\n      }\n    },\n    [workerProxy]\n  );\n\n  useCamera({\n    playing,\n    videoConstraints: true,\n    onFrame,\n  });\n\n  return (\n    <Box>\n      <Box position=\"relative\" display=\"inline-block\">\n        {playing && (workerProxy == null || !workerProxy.isLoaded) && (\n          <Box\n            position=\"absolute\"\n            top={0}\n            left={0}\n            width=\"100%\"\n            height=\"100%\"\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <CircularProgress size={80} />\n          </Box>\n        )}\n        <Box>{frame && <ImageDataPreview imageData={frame} />}</Box>\n      </Box>\n      <Box>\n        {playing ? (\n          <Button variant=\"contained\" onClick={stop}>\n            Stop\n          </Button>\n        ) : (\n          <Button variant=\"contained\" onClick={play}>\n            Play\n          </Button>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyComponent;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport ThemeProvider from \"./ThemeProvider\";\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\";\nimport MyComponent from \"./MyComponent\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <StreamlitProvider>\n      <ThemeProvider>\n        <MyComponent />\n      </ThemeProvider>\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}