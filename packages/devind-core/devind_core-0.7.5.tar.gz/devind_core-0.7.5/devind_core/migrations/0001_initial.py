# Generated by Django 3.2.12 on 2022-02-16 07:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import devind_core.models.file


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.OAUTH2_PROVIDER_ACCESS_TOKEN_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название настройки', max_length=512)),
                ('code', models.CharField(help_text='Уникальный код настройки', max_length=30, unique=True)),
                ('kind', models.PositiveIntegerField(choices=[(0, 'text'), (1, 'date'), (2, 'bool'), (3, 'file'), (4, 'choice')], default=0, help_text='Тип настройки')),
                ('position', models.PositiveIntegerField(default=0, help_text='Позиция')),
                ('parent', models.ForeignKey(help_text='Родительское правило', null=True, on_delete=django.db.models.deletion.CASCADE, to='devind_core.profile')),
            ],
            options={
                'ordering': ('position',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind_value', models.PositiveIntegerField(choices=[(0, 'text'), (1, 'file'), (2, 'json'), (4, 'bool')], default=0, help_text='Тип значения настройки')),
                ('readonly', models.BooleanField(default=True, help_text='Может ли поле быть изменено')),
                ('key', models.CharField(help_text='Ключ настройки', max_length=255)),
                ('value', models.TextField(blank=True, help_text='Значение настройки по умолчанию')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SettingValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(blank=True, help_text='Значение настройки')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('setting', models.ForeignKey(help_text='Настройка', on_delete=django.db.models.deletion.CASCADE, to='devind_core.setting')),
                ('user', models.ForeignKey(help_text='Пользователь', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('setting', 'user')},
            },
        ),
        migrations.AddField(
            model_name='setting',
            name='users',
            field=models.ManyToManyField(help_text='Пользователи', through='devind_core.SettingValue', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(help_text='ip-адрес сессии')),
                ('user_agent', models.TextField(help_text='HTTP_USER_AGENT сессии')),
                ('created_at', models.DateTimeField(auto_now=True, help_text='Дата создания сессии')),
                ('access_token', models.OneToOneField(help_text='Токен сессии', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.OAUTH2_PROVIDER_ACCESS_TOKEN_MODEL)),
                ('user', models.ForeignKey(help_text='Пользователь', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResetPassword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(help_text='Токен восстановления пароля', max_length=255, unique=True)),
                ('password', models.CharField(help_text='Новый пароль пользователя', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Время запроса восстановления пароля')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Время изменения пароля')),
                ('user', models.ForeignKey(help_text='Пользователь, который запросил восстановление пароля', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(help_text='Значение хранимой информации')),
                ('visibility', models.BooleanField(default=True, help_text='Доступность настройки')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('profile', models.ForeignKey(help_text='Профиль', on_delete=django.db.models.deletion.CASCADE, to='devind_core.profile')),
                ('user', models.ForeignKey(help_text='Пользователь', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
                'unique_together': {('profile', 'user')},
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='users',
            field=models.ManyToManyField(help_text='Пользователи', through='devind_core.ProfileValue', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='LogRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.CharField(help_text='Страница, с которой отправлен запрос', max_length=255, null=True)),
                ('body', models.BinaryField(help_text='Запрос или мутация')),
                ('time', models.FloatField(default=0, help_text='Время работы страницы')),
                ('created_at', models.DateTimeField(auto_now=True, help_text='Дата и время запроса')),
                ('session', models.ForeignKey(help_text='Сессия пользователя (null, если пользователя нет)', null=True, on_delete=django.db.models.deletion.CASCADE, to='devind_core.session')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LogEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.TextField(help_text='Идентификатор модели', null=True)),
                ('action', models.PositiveSmallIntegerField(choices=[(1, 'addition'), (2, 'change'), (3, 'deletion')], default=1, help_text='Действие пользователя')),
                ('payload', models.JSONField(help_text='Измененные данные')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время действия')),
                ('content_type', models.ForeignKey(help_text='Модель, связанная с действием', null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('session', models.ForeignKey(help_text='Сессия пользователя', null=True, on_delete=django.db.models.deletion.SET_NULL, to='devind_core.session')),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название файла', max_length=255)),
                ('src', models.FileField(help_text='Путь к файлу', upload_to=devind_core.models.file.user_directory_path)),
                ('deleted', models.BooleanField(default=False, help_text='Помечаем удаленный файл')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата добавления файла')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления файла')),
                ('user', models.ForeignKey(help_text='Пользователь, добавивший файл', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
    ]
