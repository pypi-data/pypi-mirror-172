# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: poolgrpc/compiled/auctioneer.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\"poolgrpc/compiled/auctioneer.proto\x12\x07poolrpc\"Z\n\x15ReserveAccountRequest\x12\x15\n\raccount_value\x18\x01 \x01(\x04\x12\x16\n\x0e\x61\x63\x63ount_expiry\x18\x02 \x01(\r\x12\x12\n\ntrader_key\x18\x03 \x01(\x0c\"K\n\x16ReserveAccountResponse\x12\x16\n\x0e\x61uctioneer_key\x18\x01 \x01(\x0c\x12\x19\n\x11initial_batch_key\x18\x02 \x01(\x0c\"\xb3\x01\n\x18ServerInitAccountRequest\x12(\n\raccount_point\x18\x01 \x01(\x0b\x32\x11.poolrpc.OutPoint\x12\x16\n\x0e\x61\x63\x63ount_script\x18\x02 \x01(\x0c\x12\x15\n\raccount_value\x18\x03 \x01(\x04\x12\x16\n\x0e\x61\x63\x63ount_expiry\x18\x04 \x01(\r\x12\x12\n\ntrader_key\x18\x05 \x01(\x0c\x12\x12\n\nuser_agent\x18\x06 \x01(\t\"\x1b\n\x19ServerInitAccountResponse\"\x7f\n\x18ServerSubmitOrderRequest\x12!\n\x03\x61sk\x18\x01 \x01(\x0b\x32\x12.poolrpc.ServerAskH\x00\x12!\n\x03\x62id\x18\x02 \x01(\x0b\x32\x12.poolrpc.ServerBidH\x00\x12\x12\n\nuser_agent\x18\x03 \x01(\tB\t\n\x07\x64\x65tails\"j\n\x19ServerSubmitOrderResponse\x12.\n\rinvalid_order\x18\x01 \x01(\x0b\x32\x15.poolrpc.InvalidOrderH\x00\x12\x12\n\x08\x61\x63\x63\x65pted\x18\x02 \x01(\x08H\x00\x42\t\n\x07\x64\x65tails\"8\n\x18ServerCancelOrderRequest\x12\x1c\n\x14order_nonce_preimage\x18\x01 \x01(\x0c\"\x1b\n\x19ServerCancelOrderResponse\"\xae\x02\n\x14\x43lientAuctionMessage\x12,\n\x06\x63ommit\x18\x01 \x01(\x0b\x32\x1a.poolrpc.AccountCommitmentH\x00\x12\x31\n\tsubscribe\x18\x02 \x01(\x0b\x32\x1c.poolrpc.AccountSubscriptionH\x00\x12+\n\x06\x61\x63\x63\x65pt\x18\x03 \x01(\x0b\x32\x19.poolrpc.OrderMatchAcceptH\x00\x12+\n\x06reject\x18\x04 \x01(\x0b\x32\x19.poolrpc.OrderMatchRejectH\x00\x12\'\n\x04sign\x18\x05 \x01(\x0b\x32\x17.poolrpc.OrderMatchSignH\x00\x12+\n\x07recover\x18\x06 \x01(\x0b\x32\x18.poolrpc.AccountRecoveryH\x00\x42\x05\n\x03msg\"?\n\x11\x41\x63\x63ountCommitment\x12\x13\n\x0b\x63ommit_hash\x18\x01 \x01(\x0c\x12\x15\n\rbatch_version\x18\x02 \x01(\r\"Q\n\x13\x41\x63\x63ountSubscription\x12\x12\n\ntrader_key\x18\x01 \x01(\x0c\x12\x14\n\x0c\x63ommit_nonce\x18\x02 \x01(\x0c\x12\x10\n\x08\x61uth_sig\x18\x03 \x01(\x0c\"$\n\x10OrderMatchAccept\x12\x10\n\x08\x62\x61tch_id\x18\x01 \x01(\x0c\"\xeb\x02\n\x10OrderMatchReject\x12\x10\n\x08\x62\x61tch_id\x18\x01 \x01(\x0c\x12\x0e\n\x06reason\x18\x02 \x01(\t\x12;\n\x0breason_code\x18\x03 \x01(\x0e\x32&.poolrpc.OrderMatchReject.RejectReason\x12\x46\n\x0frejected_orders\x18\x04 \x03(\x0b\x32-.poolrpc.OrderMatchReject.RejectedOrdersEntry\x1aK\n\x13RejectedOrdersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12#\n\x05value\x18\x02 \x01(\x0b\x32\x14.poolrpc.OrderReject:\x02\x38\x01\"c\n\x0cRejectReason\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x16\n\x12SERVER_MISBEHAVIOR\x10\x01\x12\x1a\n\x16\x42\x41TCH_VERSION_MISMATCH\x10\x02\x12\x12\n\x0ePARTIAL_REJECT\x10\x03\"\x9f\x01\n\x0bOrderReject\x12\x0e\n\x06reason\x18\x01 \x01(\t\x12;\n\x0breason_code\x18\x02 \x01(\x0e\x32&.poolrpc.OrderReject.OrderRejectReason\"C\n\x11OrderRejectReason\x12\x12\n\x0e\x44UPLICATE_PEER\x10\x00\x12\x1a\n\x16\x43HANNEL_FUNDING_FAILED\x10\x01\"\xa7\x01\n\x0b\x43hannelInfo\x12\"\n\x04type\x18\x01 \x01(\x0e\x32\x14.poolrpc.ChannelType\x12\x16\n\x0elocal_node_key\x18\x02 \x01(\x0c\x12\x17\n\x0fremote_node_key\x18\x03 \x01(\x0c\x12 \n\x18local_payment_base_point\x18\x04 \x01(\x0c\x12!\n\x19remote_payment_base_point\x18\x05 \x01(\x0c\"\xa3\x02\n\x0eOrderMatchSign\x12\x10\n\x08\x62\x61tch_id\x18\x01 \x01(\x0c\x12>\n\x0c\x61\x63\x63ount_sigs\x18\x02 \x03(\x0b\x32(.poolrpc.OrderMatchSign.AccountSigsEntry\x12@\n\rchannel_infos\x18\x03 \x03(\x0b\x32).poolrpc.OrderMatchSign.ChannelInfosEntry\x1a\x32\n\x10\x41\x63\x63ountSigsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01\x1aI\n\x11\x43hannelInfosEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12#\n\x05value\x18\x02 \x01(\x0b\x32\x14.poolrpc.ChannelInfo:\x02\x38\x01\"%\n\x0f\x41\x63\x63ountRecovery\x12\x12\n\ntrader_key\x18\x01 \x01(\x0c\"\xde\x02\n\x14ServerAuctionMessage\x12-\n\tchallenge\x18\x01 \x01(\x0b\x32\x18.poolrpc.ServerChallengeH\x00\x12,\n\x07success\x18\x02 \x01(\x0b\x32\x19.poolrpc.SubscribeSuccessH\x00\x12(\n\x05\x65rror\x18\x03 \x01(\x0b\x32\x17.poolrpc.SubscribeErrorH\x00\x12-\n\x07prepare\x18\x04 \x01(\x0b\x32\x1a.poolrpc.OrderMatchPrepareH\x00\x12,\n\x04sign\x18\x05 \x01(\x0b\x32\x1c.poolrpc.OrderMatchSignBeginH\x00\x12/\n\x08\x66inalize\x18\x06 \x01(\x0b\x32\x1b.poolrpc.OrderMatchFinalizeH\x00\x12*\n\x07\x61\x63\x63ount\x18\x07 \x01(\x0b\x32\x17.poolrpc.AuctionAccountH\x00\x42\x05\n\x03msg\"9\n\x0fServerChallenge\x12\x11\n\tchallenge\x18\x01 \x01(\x0c\x12\x13\n\x0b\x63ommit_hash\x18\x02 \x01(\x0c\"&\n\x10SubscribeSuccess\x12\x12\n\ntrader_key\x18\x01 \x01(\x0c\"\xbc\x01\n\rMatchedMarket\x12\x41\n\x0ematched_orders\x18\x01 \x03(\x0b\x32).poolrpc.MatchedMarket.MatchedOrdersEntry\x12\x1b\n\x13\x63learing_price_rate\x18\x02 \x01(\r\x1aK\n\x12MatchedOrdersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12$\n\x05value\x18\x02 \x01(\x0b\x32\x15.poolrpc.MatchedOrder:\x02\x38\x01\"\xd6\x04\n\x11OrderMatchPrepare\x12I\n\x0ematched_orders\x18\x01 \x03(\x0b\x32-.poolrpc.OrderMatchPrepare.MatchedOrdersEntryB\x02\x18\x01\x12\x1f\n\x13\x63learing_price_rate\x18\x02 \x01(\rB\x02\x18\x01\x12.\n\x10\x63harged_accounts\x18\x03 \x03(\x0b\x32\x14.poolrpc.AccountDiff\x12,\n\rexecution_fee\x18\x04 \x01(\x0b\x32\x15.poolrpc.ExecutionFee\x12\x19\n\x11\x62\x61tch_transaction\x18\x05 \x01(\x0c\x12\x1b\n\x13\x66\x65\x65_rate_sat_per_kw\x18\x06 \x01(\x04\x12\x16\n\x0e\x66\x65\x65_rebate_sat\x18\x07 \x01(\x04\x12\x10\n\x08\x62\x61tch_id\x18\x08 \x01(\x0c\x12\x15\n\rbatch_version\x18\t \x01(\r\x12G\n\x0fmatched_markets\x18\n \x03(\x0b\x32..poolrpc.OrderMatchPrepare.MatchedMarketsEntry\x12\x19\n\x11\x62\x61tch_height_hint\x18\x0b \x01(\r\x1aK\n\x12MatchedOrdersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12$\n\x05value\x18\x02 \x01(\x0b\x32\x15.poolrpc.MatchedOrder:\x02\x38\x01\x1aM\n\x13MatchedMarketsEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12%\n\x05value\x18\x02 \x01(\x0b\x32\x16.poolrpc.MatchedMarket:\x02\x38\x01\"\'\n\x13OrderMatchSignBegin\x12\x10\n\x08\x62\x61tch_id\x18\x01 \x01(\x0c\"@\n\x12OrderMatchFinalize\x12\x10\n\x08\x62\x61tch_id\x18\x01 \x01(\x0c\x12\x12\n\nbatch_txid\x18\x02 \x01(\x0cJ\x04\x08\x03\x10\x04\"\x87\x02\n\x0eSubscribeError\x12\r\n\x05\x65rror\x18\x01 \x01(\t\x12\x31\n\nerror_code\x18\x02 \x01(\x0e\x32\x1d.poolrpc.SubscribeError.Error\x12\x12\n\ntrader_key\x18\x03 \x01(\x0c\x12\x34\n\x13\x61\x63\x63ount_reservation\x18\x04 \x01(\x0b\x32\x17.poolrpc.AuctionAccount\"i\n\x05\x45rror\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x13\n\x0fSERVER_SHUTDOWN\x10\x01\x12\x1a\n\x16\x41\x43\x43OUNT_DOES_NOT_EXIST\x10\x02\x12\"\n\x1eINCOMPLETE_ACCOUNT_RESERVATION\x10\x03\"\xe8\x01\n\x0e\x41uctionAccount\x12\r\n\x05value\x18\x01 \x01(\x04\x12\x0e\n\x06\x65xpiry\x18\x02 \x01(\r\x12\x12\n\ntrader_key\x18\x03 \x01(\x0c\x12\x16\n\x0e\x61uctioneer_key\x18\x04 \x01(\x0c\x12\x11\n\tbatch_key\x18\x05 \x01(\x0c\x12+\n\x05state\x18\x06 \x01(\x0e\x32\x1c.poolrpc.AuctionAccountState\x12\x13\n\x0bheight_hint\x18\x07 \x01(\r\x12#\n\x08outpoint\x18\x08 \x01(\x0b\x32\x11.poolrpc.OutPoint\x12\x11\n\tlatest_tx\x18\t \x01(\x0c\"d\n\x0cMatchedOrder\x12)\n\x0cmatched_bids\x18\x01 \x03(\x0b\x32\x13.poolrpc.MatchedBid\x12)\n\x0cmatched_asks\x18\x02 \x03(\x0b\x32\x13.poolrpc.MatchedAsk\"C\n\nMatchedAsk\x12\x1f\n\x03\x61sk\x18\x01 \x01(\x0b\x32\x12.poolrpc.ServerAsk\x12\x14\n\x0cunits_filled\x18\x02 \x01(\r\"C\n\nMatchedBid\x12\x1f\n\x03\x62id\x18\x01 \x01(\x0b\x32\x12.poolrpc.ServerBid\x12\x14\n\x0cunits_filled\x18\x02 \x01(\r\"\x9e\x02\n\x0b\x41\x63\x63ountDiff\x12\x16\n\x0e\x65nding_balance\x18\x01 \x01(\x04\x12\x37\n\x0c\x65nding_state\x18\x02 \x01(\x0e\x32!.poolrpc.AccountDiff.AccountState\x12\x16\n\x0eoutpoint_index\x18\x03 \x01(\x05\x12\x12\n\ntrader_key\x18\x04 \x01(\x0c\x12\x12\n\nnew_expiry\x18\x05 \x01(\r\"~\n\x0c\x41\x63\x63ountState\x12\x14\n\x10OUTPUT_RECREATED\x10\x00\x12!\n\x1dOUTPUT_DUST_EXTENDED_OFFCHAIN\x10\x01\x12\x1d\n\x19OUTPUT_DUST_ADDED_TO_FEES\x10\x02\x12\x16\n\x12OUTPUT_FULLY_SPENT\x10\x03\"\xee\x02\n\x0bServerOrder\x12\x12\n\ntrader_key\x18\x01 \x01(\x0c\x12\x12\n\nrate_fixed\x18\x02 \x01(\r\x12\x0b\n\x03\x61mt\x18\x03 \x01(\x04\x12\x14\n\x0cmin_chan_amt\x18\x04 \x01(\x04\x12\x13\n\x0border_nonce\x18\x06 \x01(\x0c\x12\x11\n\torder_sig\x18\x07 \x01(\x0c\x12\x15\n\rmulti_sig_key\x18\x08 \x01(\x0c\x12\x10\n\x08node_pub\x18\t \x01(\x0c\x12\'\n\tnode_addr\x18\n \x03(\x0b\x32\x14.poolrpc.NodeAddress\x12/\n\x0c\x63hannel_type\x18\x0c \x01(\x0e\x32\x19.poolrpc.OrderChannelType\x12%\n\x1dmax_batch_fee_rate_sat_per_kw\x18\r \x01(\x04\x12\x18\n\x10\x61llowed_node_ids\x18\x0e \x03(\x0c\x12\x1c\n\x14not_allowed_node_ids\x18\x0f \x03(\x0cJ\x04\x08\x05\x10\x06J\x04\x08\x0b\x10\x0c\"\xc9\x01\n\tServerBid\x12%\n\x07\x64\x65tails\x18\x01 \x01(\x0b\x32\x14.poolrpc.ServerOrder\x12\x1d\n\x15lease_duration_blocks\x18\x02 \x01(\r\x12\x0f\n\x07version\x18\x04 \x01(\r\x12(\n\rmin_node_tier\x18\x05 \x01(\x0e\x32\x11.poolrpc.NodeTier\x12\x19\n\x11self_chan_balance\x18\x06 \x01(\x04\x12\x1a\n\x12is_sidecar_channel\x18\x07 \x01(\x08J\x04\x08\x03\x10\x04\"b\n\tServerAsk\x12%\n\x07\x64\x65tails\x18\x01 \x01(\x0b\x32\x14.poolrpc.ServerOrder\x12\x1d\n\x15lease_duration_blocks\x18\x04 \x01(\r\x12\x0f\n\x07version\x18\x05 \x01(\r\"\"\n\x0b\x43\x61ncelOrder\x12\x13\n\x0border_nonce\x18\x01 \x01(\x0c\"\x8e\x01\n\x0cInvalidOrder\x12\x13\n\x0border_nonce\x18\x01 \x01(\x0c\x12\x35\n\x0b\x66\x61il_reason\x18\x02 \x01(\x0e\x32 .poolrpc.InvalidOrder.FailReason\x12\x13\n\x0b\x66\x61il_string\x18\x03 \x01(\t\"\x1d\n\nFailReason\x12\x0f\n\x0bINVALID_AMT\x10\x00\"F\n\x0bServerInput\x12#\n\x08outpoint\x18\x01 \x01(\x0b\x32\x11.poolrpc.OutPoint\x12\x12\n\nsig_script\x18\x02 \x01(\x0c\"-\n\x0cServerOutput\x12\r\n\x05value\x18\x01 \x01(\x04\x12\x0e\n\x06script\x18\x02 \x01(\x0c\"\x8b\x02\n\x1aServerModifyAccountRequest\x12\x12\n\ntrader_key\x18\x01 \x01(\x0c\x12(\n\nnew_inputs\x18\x02 \x03(\x0b\x32\x14.poolrpc.ServerInput\x12*\n\x0bnew_outputs\x18\x03 \x03(\x0b\x32\x15.poolrpc.ServerOutput\x12L\n\nnew_params\x18\x04 \x01(\x0b\x32\x38.poolrpc.ServerModifyAccountRequest.NewAccountParameters\x1a\x35\n\x14NewAccountParameters\x12\r\n\x05value\x18\x01 \x01(\x04\x12\x0e\n\x06\x65xpiry\x18\x02 \x01(\r\"2\n\x1bServerModifyAccountResponse\x12\x13\n\x0b\x61\x63\x63ount_sig\x18\x01 \x01(\x0c\".\n\x17ServerOrderStateRequest\x12\x13\n\x0border_nonce\x18\x01 \x01(\x0c\"Y\n\x18ServerOrderStateResponse\x12\"\n\x05state\x18\x01 \x01(\x0e\x32\x13.poolrpc.OrderState\x12\x19\n\x11units_unfulfilled\x18\x02 \x01(\r\"\x0e\n\x0cTermsRequest\"\xbd\x04\n\rTermsResponse\x12\x19\n\x11max_account_value\x18\x01 \x01(\x04\x12%\n\x19max_order_duration_blocks\x18\x02 \x01(\rB\x02\x18\x01\x12,\n\rexecution_fee\x18\x03 \x01(\x0b\x32\x15.poolrpc.ExecutionFee\x12G\n\x0flease_durations\x18\x04 \x03(\x0b\x32*.poolrpc.TermsResponse.LeaseDurationsEntryB\x02\x18\x01\x12\x1e\n\x16next_batch_conf_target\x18\x05 \x01(\r\x12&\n\x1enext_batch_fee_rate_sat_per_kw\x18\x06 \x01(\x04\x12\"\n\x1anext_batch_clear_timestamp\x18\x07 \x01(\x04\x12P\n\x16lease_duration_buckets\x18\x08 \x03(\x0b\x32\x30.poolrpc.TermsResponse.LeaseDurationBucketsEntry\x12#\n\x1b\x61uto_renew_extension_blocks\x18\t \x01(\r\x1a\x35\n\x13LeaseDurationsEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01\x1aY\n\x19LeaseDurationBucketsEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12+\n\x05value\x18\x02 \x01(\x0e\x32\x1c.poolrpc.DurationBucketState:\x02\x38\x01\"4\n\x14RelevantBatchRequest\x12\n\n\x02id\x18\x01 \x01(\x0c\x12\x10\n\x08\x61\x63\x63ounts\x18\x02 \x03(\x0c\"\xa4\x04\n\rRelevantBatch\x12\x0f\n\x07version\x18\x01 \x01(\r\x12\n\n\x02id\x18\x02 \x01(\x0c\x12.\n\x10\x63harged_accounts\x18\x03 \x03(\x0b\x32\x14.poolrpc.AccountDiff\x12\x45\n\x0ematched_orders\x18\x04 \x03(\x0b\x32).poolrpc.RelevantBatch.MatchedOrdersEntryB\x02\x18\x01\x12\x1f\n\x13\x63learing_price_rate\x18\x05 \x01(\rB\x02\x18\x01\x12,\n\rexecution_fee\x18\x06 \x01(\x0b\x32\x15.poolrpc.ExecutionFee\x12\x13\n\x0btransaction\x18\x07 \x01(\x0c\x12\x1b\n\x13\x66\x65\x65_rate_sat_per_kw\x18\x08 \x01(\x04\x12\x1d\n\x15\x63reation_timestamp_ns\x18\t \x01(\x04\x12\x43\n\x0fmatched_markets\x18\n \x03(\x0b\x32*.poolrpc.RelevantBatch.MatchedMarketsEntry\x1aK\n\x12MatchedOrdersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12$\n\x05value\x18\x02 \x01(\x0b\x32\x15.poolrpc.MatchedOrder:\x02\x38\x01\x1aM\n\x13MatchedMarketsEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12%\n\x05value\x18\x02 \x01(\x0b\x32\x16.poolrpc.MatchedMarket:\x02\x38\x01\"2\n\x0c\x45xecutionFee\x12\x10\n\x08\x62\x61se_fee\x18\x01 \x01(\x04\x12\x10\n\x08\x66\x65\x65_rate\x18\x02 \x01(\x04\",\n\x0bNodeAddress\x12\x0f\n\x07network\x18\x01 \x01(\t\x12\x0c\n\x04\x61\x64\x64r\x18\x02 \x01(\t\".\n\x08OutPoint\x12\x0c\n\x04txid\x18\x01 \x01(\x0c\x12\x14\n\x0coutput_index\x18\x02 \x01(\r\"\x7f\n\x0b\x41skSnapshot\x12\x0f\n\x07version\x18\x01 \x01(\r\x12\x1d\n\x15lease_duration_blocks\x18\x02 \x01(\r\x12\x12\n\nrate_fixed\x18\x03 \x01(\r\x12,\n\tchan_type\x18\x04 \x01(\x0e\x32\x19.poolrpc.OrderChannelType\"\x7f\n\x0b\x42idSnapshot\x12\x0f\n\x07version\x18\x01 \x01(\r\x12\x1d\n\x15lease_duration_blocks\x18\x02 \x01(\r\x12\x12\n\nrate_fixed\x18\x03 \x01(\r\x12,\n\tchan_type\x18\x04 \x01(\x0e\x32\x19.poolrpc.OrderChannelType\"\xa6\x01\n\x14MatchedOrderSnapshot\x12!\n\x03\x61sk\x18\x01 \x01(\x0b\x32\x14.poolrpc.AskSnapshot\x12!\n\x03\x62id\x18\x02 \x01(\x0b\x32\x14.poolrpc.BidSnapshot\x12\x15\n\rmatching_rate\x18\x03 \x01(\r\x12\x1a\n\x12total_sats_cleared\x18\x04 \x01(\x04\x12\x15\n\runits_matched\x18\x05 \x01(\r\"(\n\x14\x42\x61tchSnapshotRequest\x12\x10\n\x08\x62\x61tch_id\x18\x01 \x01(\x0c\"k\n\x15MatchedMarketSnapshot\x12\x35\n\x0ematched_orders\x18\x01 \x03(\x0b\x32\x1d.poolrpc.MatchedOrderSnapshot\x12\x1b\n\x13\x63learing_price_rate\x18\x02 \x01(\r\"\xbd\x03\n\x15\x42\x61tchSnapshotResponse\x12\x0f\n\x07version\x18\x01 \x01(\r\x12\x10\n\x08\x62\x61tch_id\x18\x02 \x01(\x0c\x12\x15\n\rprev_batch_id\x18\x03 \x01(\x0c\x12\x1f\n\x13\x63learing_price_rate\x18\x04 \x01(\rB\x02\x18\x01\x12\x39\n\x0ematched_orders\x18\x05 \x03(\x0b\x32\x1d.poolrpc.MatchedOrderSnapshotB\x02\x18\x01\x12\x13\n\x0b\x62\x61tch_tx_id\x18\x07 \x01(\t\x12\x10\n\x08\x62\x61tch_tx\x18\x06 \x01(\x0c\x12$\n\x1c\x62\x61tch_tx_fee_rate_sat_per_kw\x18\x08 \x01(\x04\x12\x1d\n\x15\x63reation_timestamp_ns\x18\t \x01(\x04\x12K\n\x0fmatched_markets\x18\n \x03(\x0b\x32\x32.poolrpc.BatchSnapshotResponse.MatchedMarketsEntry\x1aU\n\x13MatchedMarketsEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12-\n\x05value\x18\x02 \x01(\x0b\x32\x1e.poolrpc.MatchedMarketSnapshot:\x02\x38\x01\"/\n\x17ServerNodeRatingRequest\x12\x14\n\x0cnode_pubkeys\x18\x01 \x03(\x0c\"G\n\nNodeRating\x12\x13\n\x0bnode_pubkey\x18\x01 \x01(\x0c\x12$\n\tnode_tier\x18\x02 \x01(\x0e\x32\x11.poolrpc.NodeTier\"E\n\x18ServerNodeRatingResponse\x12)\n\x0cnode_ratings\x18\x01 \x03(\x0b\x32\x13.poolrpc.NodeRating\"I\n\x15\x42\x61tchSnapshotsRequest\x12\x16\n\x0estart_batch_id\x18\x01 \x01(\x0c\x12\x18\n\x10num_batches_back\x18\x02 \x01(\r\"I\n\x16\x42\x61tchSnapshotsResponse\x12/\n\x07\x62\x61tches\x18\x01 \x03(\x0b\x32\x1e.poolrpc.BatchSnapshotResponse\"\x13\n\x11MarketInfoRequest\"\xab\x02\n\nMarketInfo\x12/\n\x08num_asks\x18\x01 \x03(\x0b\x32\x1d.poolrpc.MarketInfo.TierValue\x12/\n\x08num_bids\x18\x02 \x03(\x0b\x32\x1d.poolrpc.MarketInfo.TierValue\x12>\n\x17\x61sk_open_interest_units\x18\x03 \x03(\x0b\x32\x1d.poolrpc.MarketInfo.TierValue\x12>\n\x17\x62id_open_interest_units\x18\x04 \x03(\x0b\x32\x1d.poolrpc.MarketInfo.TierValue\x1a;\n\tTierValue\x12\x1f\n\x04tier\x18\x01 \x01(\x0e\x32\x11.poolrpc.NodeTier\x12\r\n\x05value\x18\x02 \x01(\r\"\x94\x01\n\x12MarketInfoResponse\x12\x39\n\x07markets\x18\x01 \x03(\x0b\x32(.poolrpc.MarketInfoResponse.MarketsEntry\x1a\x43\n\x0cMarketsEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\"\n\x05value\x18\x02 \x01(\x0b\x32\x13.poolrpc.MarketInfo:\x02\x38\x01*D\n\x0b\x43hannelType\x12\r\n\tTWEAKLESS\x10\x00\x12\x0b\n\x07\x41NCHORS\x10\x01\x12\x19\n\x15SCRIPT_ENFORCED_LEASE\x10\x02*\xb7\x01\n\x13\x41uctionAccountState\x12\x16\n\x12STATE_PENDING_OPEN\x10\x00\x12\x0e\n\nSTATE_OPEN\x10\x01\x12\x11\n\rSTATE_EXPIRED\x10\x02\x12\x18\n\x14STATE_PENDING_UPDATE\x10\x03\x12\x10\n\x0cSTATE_CLOSED\x10\x04\x12\x17\n\x13STATE_PENDING_BATCH\x10\x05\x12 \n\x1cSTATE_EXPIRED_PENDING_UPDATE\x10\x06*\x81\x01\n\x10OrderChannelType\x12\x1e\n\x1aORDER_CHANNEL_TYPE_UNKNOWN\x10\x00\x12%\n!ORDER_CHANNEL_TYPE_PEER_DEPENDENT\x10\x01\x12&\n\"ORDER_CHANNEL_TYPE_SCRIPT_ENFORCED\x10\x02*4\n\x08NodeTier\x12\x10\n\x0cTIER_DEFAULT\x10\x00\x12\n\n\x06TIER_0\x10\x01\x12\n\n\x06TIER_1\x10\x02*\x9d\x01\n\nOrderState\x12\x13\n\x0fORDER_SUBMITTED\x10\x00\x12\x11\n\rORDER_CLEARED\x10\x01\x12\x1a\n\x16ORDER_PARTIALLY_FILLED\x10\x02\x12\x12\n\x0eORDER_EXECUTED\x10\x03\x12\x12\n\x0eORDER_CANCELED\x10\x04\x12\x11\n\rORDER_EXPIRED\x10\x05\x12\x10\n\x0cORDER_FAILED\x10\x06*^\n\x13\x44urationBucketState\x12\r\n\tNO_MARKET\x10\x00\x12\x11\n\rMARKET_CLOSED\x10\x01\x12\x14\n\x10\x41\x43\x43\x45PTING_ORDERS\x10\x02\x12\x0f\n\x0bMARKET_OPEN\x10\x03\x32\x8d\t\n\x11\x43hannelAuctioneer\x12Q\n\x0eReserveAccount\x12\x1e.poolrpc.ReserveAccountRequest\x1a\x1f.poolrpc.ReserveAccountResponse\x12T\n\x0bInitAccount\x12!.poolrpc.ServerInitAccountRequest\x1a\".poolrpc.ServerInitAccountResponse\x12Z\n\rModifyAccount\x12#.poolrpc.ServerModifyAccountRequest\x1a$.poolrpc.ServerModifyAccountResponse\x12T\n\x0bSubmitOrder\x12!.poolrpc.ServerSubmitOrderRequest\x1a\".poolrpc.ServerSubmitOrderResponse\x12T\n\x0b\x43\x61ncelOrder\x12!.poolrpc.ServerCancelOrderRequest\x1a\".poolrpc.ServerCancelOrderResponse\x12Q\n\nOrderState\x12 .poolrpc.ServerOrderStateRequest\x1a!.poolrpc.ServerOrderStateResponse\x12Y\n\x15SubscribeBatchAuction\x12\x1d.poolrpc.ClientAuctionMessage\x1a\x1d.poolrpc.ServerAuctionMessage(\x01\x30\x01\x12T\n\x10SubscribeSidecar\x12\x1d.poolrpc.ClientAuctionMessage\x1a\x1d.poolrpc.ServerAuctionMessage(\x01\x30\x01\x12\x36\n\x05Terms\x12\x15.poolrpc.TermsRequest\x1a\x16.poolrpc.TermsResponse\x12N\n\x15RelevantBatchSnapshot\x12\x1d.poolrpc.RelevantBatchRequest\x1a\x16.poolrpc.RelevantBatch\x12N\n\rBatchSnapshot\x12\x1d.poolrpc.BatchSnapshotRequest\x1a\x1e.poolrpc.BatchSnapshotResponse\x12Q\n\nNodeRating\x12 .poolrpc.ServerNodeRatingRequest\x1a!.poolrpc.ServerNodeRatingResponse\x12Q\n\x0e\x42\x61tchSnapshots\x12\x1e.poolrpc.BatchSnapshotsRequest\x1a\x1f.poolrpc.BatchSnapshotsResponse\x12\x45\n\nMarketInfo\x12\x1a.poolrpc.MarketInfoRequest\x1a\x1b.poolrpc.MarketInfoResponseB-Z+github.com/lightninglabs/pool/auctioneerrpcb\x06proto3')

_CHANNELTYPE = DESCRIPTOR.enum_types_by_name['ChannelType']
ChannelType = enum_type_wrapper.EnumTypeWrapper(_CHANNELTYPE)
_AUCTIONACCOUNTSTATE = DESCRIPTOR.enum_types_by_name['AuctionAccountState']
AuctionAccountState = enum_type_wrapper.EnumTypeWrapper(_AUCTIONACCOUNTSTATE)
_ORDERCHANNELTYPE = DESCRIPTOR.enum_types_by_name['OrderChannelType']
OrderChannelType = enum_type_wrapper.EnumTypeWrapper(_ORDERCHANNELTYPE)
_NODETIER = DESCRIPTOR.enum_types_by_name['NodeTier']
NodeTier = enum_type_wrapper.EnumTypeWrapper(_NODETIER)
_ORDERSTATE = DESCRIPTOR.enum_types_by_name['OrderState']
OrderState = enum_type_wrapper.EnumTypeWrapper(_ORDERSTATE)
_DURATIONBUCKETSTATE = DESCRIPTOR.enum_types_by_name['DurationBucketState']
DurationBucketState = enum_type_wrapper.EnumTypeWrapper(_DURATIONBUCKETSTATE)
TWEAKLESS = 0
ANCHORS = 1
SCRIPT_ENFORCED_LEASE = 2
STATE_PENDING_OPEN = 0
STATE_OPEN = 1
STATE_EXPIRED = 2
STATE_PENDING_UPDATE = 3
STATE_CLOSED = 4
STATE_PENDING_BATCH = 5
STATE_EXPIRED_PENDING_UPDATE = 6
ORDER_CHANNEL_TYPE_UNKNOWN = 0
ORDER_CHANNEL_TYPE_PEER_DEPENDENT = 1
ORDER_CHANNEL_TYPE_SCRIPT_ENFORCED = 2
TIER_DEFAULT = 0
TIER_0 = 1
TIER_1 = 2
ORDER_SUBMITTED = 0
ORDER_CLEARED = 1
ORDER_PARTIALLY_FILLED = 2
ORDER_EXECUTED = 3
ORDER_CANCELED = 4
ORDER_EXPIRED = 5
ORDER_FAILED = 6
NO_MARKET = 0
MARKET_CLOSED = 1
ACCEPTING_ORDERS = 2
MARKET_OPEN = 3


_RESERVEACCOUNTREQUEST = DESCRIPTOR.message_types_by_name['ReserveAccountRequest']
_RESERVEACCOUNTRESPONSE = DESCRIPTOR.message_types_by_name['ReserveAccountResponse']
_SERVERINITACCOUNTREQUEST = DESCRIPTOR.message_types_by_name['ServerInitAccountRequest']
_SERVERINITACCOUNTRESPONSE = DESCRIPTOR.message_types_by_name['ServerInitAccountResponse']
_SERVERSUBMITORDERREQUEST = DESCRIPTOR.message_types_by_name['ServerSubmitOrderRequest']
_SERVERSUBMITORDERRESPONSE = DESCRIPTOR.message_types_by_name['ServerSubmitOrderResponse']
_SERVERCANCELORDERREQUEST = DESCRIPTOR.message_types_by_name['ServerCancelOrderRequest']
_SERVERCANCELORDERRESPONSE = DESCRIPTOR.message_types_by_name['ServerCancelOrderResponse']
_CLIENTAUCTIONMESSAGE = DESCRIPTOR.message_types_by_name['ClientAuctionMessage']
_ACCOUNTCOMMITMENT = DESCRIPTOR.message_types_by_name['AccountCommitment']
_ACCOUNTSUBSCRIPTION = DESCRIPTOR.message_types_by_name['AccountSubscription']
_ORDERMATCHACCEPT = DESCRIPTOR.message_types_by_name['OrderMatchAccept']
_ORDERMATCHREJECT = DESCRIPTOR.message_types_by_name['OrderMatchReject']
_ORDERMATCHREJECT_REJECTEDORDERSENTRY = _ORDERMATCHREJECT.nested_types_by_name['RejectedOrdersEntry']
_ORDERREJECT = DESCRIPTOR.message_types_by_name['OrderReject']
_CHANNELINFO = DESCRIPTOR.message_types_by_name['ChannelInfo']
_ORDERMATCHSIGN = DESCRIPTOR.message_types_by_name['OrderMatchSign']
_ORDERMATCHSIGN_ACCOUNTSIGSENTRY = _ORDERMATCHSIGN.nested_types_by_name['AccountSigsEntry']
_ORDERMATCHSIGN_CHANNELINFOSENTRY = _ORDERMATCHSIGN.nested_types_by_name['ChannelInfosEntry']
_ACCOUNTRECOVERY = DESCRIPTOR.message_types_by_name['AccountRecovery']
_SERVERAUCTIONMESSAGE = DESCRIPTOR.message_types_by_name['ServerAuctionMessage']
_SERVERCHALLENGE = DESCRIPTOR.message_types_by_name['ServerChallenge']
_SUBSCRIBESUCCESS = DESCRIPTOR.message_types_by_name['SubscribeSuccess']
_MATCHEDMARKET = DESCRIPTOR.message_types_by_name['MatchedMarket']
_MATCHEDMARKET_MATCHEDORDERSENTRY = _MATCHEDMARKET.nested_types_by_name['MatchedOrdersEntry']
_ORDERMATCHPREPARE = DESCRIPTOR.message_types_by_name['OrderMatchPrepare']
_ORDERMATCHPREPARE_MATCHEDORDERSENTRY = _ORDERMATCHPREPARE.nested_types_by_name['MatchedOrdersEntry']
_ORDERMATCHPREPARE_MATCHEDMARKETSENTRY = _ORDERMATCHPREPARE.nested_types_by_name['MatchedMarketsEntry']
_ORDERMATCHSIGNBEGIN = DESCRIPTOR.message_types_by_name['OrderMatchSignBegin']
_ORDERMATCHFINALIZE = DESCRIPTOR.message_types_by_name['OrderMatchFinalize']
_SUBSCRIBEERROR = DESCRIPTOR.message_types_by_name['SubscribeError']
_AUCTIONACCOUNT = DESCRIPTOR.message_types_by_name['AuctionAccount']
_MATCHEDORDER = DESCRIPTOR.message_types_by_name['MatchedOrder']
_MATCHEDASK = DESCRIPTOR.message_types_by_name['MatchedAsk']
_MATCHEDBID = DESCRIPTOR.message_types_by_name['MatchedBid']
_ACCOUNTDIFF = DESCRIPTOR.message_types_by_name['AccountDiff']
_SERVERORDER = DESCRIPTOR.message_types_by_name['ServerOrder']
_SERVERBID = DESCRIPTOR.message_types_by_name['ServerBid']
_SERVERASK = DESCRIPTOR.message_types_by_name['ServerAsk']
_CANCELORDER = DESCRIPTOR.message_types_by_name['CancelOrder']
_INVALIDORDER = DESCRIPTOR.message_types_by_name['InvalidOrder']
_SERVERINPUT = DESCRIPTOR.message_types_by_name['ServerInput']
_SERVEROUTPUT = DESCRIPTOR.message_types_by_name['ServerOutput']
_SERVERMODIFYACCOUNTREQUEST = DESCRIPTOR.message_types_by_name['ServerModifyAccountRequest']
_SERVERMODIFYACCOUNTREQUEST_NEWACCOUNTPARAMETERS = _SERVERMODIFYACCOUNTREQUEST.nested_types_by_name['NewAccountParameters']
_SERVERMODIFYACCOUNTRESPONSE = DESCRIPTOR.message_types_by_name['ServerModifyAccountResponse']
_SERVERORDERSTATEREQUEST = DESCRIPTOR.message_types_by_name['ServerOrderStateRequest']
_SERVERORDERSTATERESPONSE = DESCRIPTOR.message_types_by_name['ServerOrderStateResponse']
_TERMSREQUEST = DESCRIPTOR.message_types_by_name['TermsRequest']
_TERMSRESPONSE = DESCRIPTOR.message_types_by_name['TermsResponse']
_TERMSRESPONSE_LEASEDURATIONSENTRY = _TERMSRESPONSE.nested_types_by_name['LeaseDurationsEntry']
_TERMSRESPONSE_LEASEDURATIONBUCKETSENTRY = _TERMSRESPONSE.nested_types_by_name['LeaseDurationBucketsEntry']
_RELEVANTBATCHREQUEST = DESCRIPTOR.message_types_by_name['RelevantBatchRequest']
_RELEVANTBATCH = DESCRIPTOR.message_types_by_name['RelevantBatch']
_RELEVANTBATCH_MATCHEDORDERSENTRY = _RELEVANTBATCH.nested_types_by_name['MatchedOrdersEntry']
_RELEVANTBATCH_MATCHEDMARKETSENTRY = _RELEVANTBATCH.nested_types_by_name['MatchedMarketsEntry']
_EXECUTIONFEE = DESCRIPTOR.message_types_by_name['ExecutionFee']
_NODEADDRESS = DESCRIPTOR.message_types_by_name['NodeAddress']
_OUTPOINT = DESCRIPTOR.message_types_by_name['OutPoint']
_ASKSNAPSHOT = DESCRIPTOR.message_types_by_name['AskSnapshot']
_BIDSNAPSHOT = DESCRIPTOR.message_types_by_name['BidSnapshot']
_MATCHEDORDERSNAPSHOT = DESCRIPTOR.message_types_by_name['MatchedOrderSnapshot']
_BATCHSNAPSHOTREQUEST = DESCRIPTOR.message_types_by_name['BatchSnapshotRequest']
_MATCHEDMARKETSNAPSHOT = DESCRIPTOR.message_types_by_name['MatchedMarketSnapshot']
_BATCHSNAPSHOTRESPONSE = DESCRIPTOR.message_types_by_name['BatchSnapshotResponse']
_BATCHSNAPSHOTRESPONSE_MATCHEDMARKETSENTRY = _BATCHSNAPSHOTRESPONSE.nested_types_by_name['MatchedMarketsEntry']
_SERVERNODERATINGREQUEST = DESCRIPTOR.message_types_by_name['ServerNodeRatingRequest']
_NODERATING = DESCRIPTOR.message_types_by_name['NodeRating']
_SERVERNODERATINGRESPONSE = DESCRIPTOR.message_types_by_name['ServerNodeRatingResponse']
_BATCHSNAPSHOTSREQUEST = DESCRIPTOR.message_types_by_name['BatchSnapshotsRequest']
_BATCHSNAPSHOTSRESPONSE = DESCRIPTOR.message_types_by_name['BatchSnapshotsResponse']
_MARKETINFOREQUEST = DESCRIPTOR.message_types_by_name['MarketInfoRequest']
_MARKETINFO = DESCRIPTOR.message_types_by_name['MarketInfo']
_MARKETINFO_TIERVALUE = _MARKETINFO.nested_types_by_name['TierValue']
_MARKETINFORESPONSE = DESCRIPTOR.message_types_by_name['MarketInfoResponse']
_MARKETINFORESPONSE_MARKETSENTRY = _MARKETINFORESPONSE.nested_types_by_name['MarketsEntry']
_ORDERMATCHREJECT_REJECTREASON = _ORDERMATCHREJECT.enum_types_by_name['RejectReason']
_ORDERREJECT_ORDERREJECTREASON = _ORDERREJECT.enum_types_by_name['OrderRejectReason']
_SUBSCRIBEERROR_ERROR = _SUBSCRIBEERROR.enum_types_by_name['Error']
_ACCOUNTDIFF_ACCOUNTSTATE = _ACCOUNTDIFF.enum_types_by_name['AccountState']
_INVALIDORDER_FAILREASON = _INVALIDORDER.enum_types_by_name['FailReason']
ReserveAccountRequest = _reflection.GeneratedProtocolMessageType('ReserveAccountRequest', (_message.Message,), {
  'DESCRIPTOR' : _RESERVEACCOUNTREQUEST,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ReserveAccountRequest)
  })
_sym_db.RegisterMessage(ReserveAccountRequest)

ReserveAccountResponse = _reflection.GeneratedProtocolMessageType('ReserveAccountResponse', (_message.Message,), {
  'DESCRIPTOR' : _RESERVEACCOUNTRESPONSE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ReserveAccountResponse)
  })
_sym_db.RegisterMessage(ReserveAccountResponse)

ServerInitAccountRequest = _reflection.GeneratedProtocolMessageType('ServerInitAccountRequest', (_message.Message,), {
  'DESCRIPTOR' : _SERVERINITACCOUNTREQUEST,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerInitAccountRequest)
  })
_sym_db.RegisterMessage(ServerInitAccountRequest)

ServerInitAccountResponse = _reflection.GeneratedProtocolMessageType('ServerInitAccountResponse', (_message.Message,), {
  'DESCRIPTOR' : _SERVERINITACCOUNTRESPONSE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerInitAccountResponse)
  })
_sym_db.RegisterMessage(ServerInitAccountResponse)

ServerSubmitOrderRequest = _reflection.GeneratedProtocolMessageType('ServerSubmitOrderRequest', (_message.Message,), {
  'DESCRIPTOR' : _SERVERSUBMITORDERREQUEST,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerSubmitOrderRequest)
  })
_sym_db.RegisterMessage(ServerSubmitOrderRequest)

ServerSubmitOrderResponse = _reflection.GeneratedProtocolMessageType('ServerSubmitOrderResponse', (_message.Message,), {
  'DESCRIPTOR' : _SERVERSUBMITORDERRESPONSE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerSubmitOrderResponse)
  })
_sym_db.RegisterMessage(ServerSubmitOrderResponse)

ServerCancelOrderRequest = _reflection.GeneratedProtocolMessageType('ServerCancelOrderRequest', (_message.Message,), {
  'DESCRIPTOR' : _SERVERCANCELORDERREQUEST,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerCancelOrderRequest)
  })
_sym_db.RegisterMessage(ServerCancelOrderRequest)

ServerCancelOrderResponse = _reflection.GeneratedProtocolMessageType('ServerCancelOrderResponse', (_message.Message,), {
  'DESCRIPTOR' : _SERVERCANCELORDERRESPONSE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerCancelOrderResponse)
  })
_sym_db.RegisterMessage(ServerCancelOrderResponse)

ClientAuctionMessage = _reflection.GeneratedProtocolMessageType('ClientAuctionMessage', (_message.Message,), {
  'DESCRIPTOR' : _CLIENTAUCTIONMESSAGE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ClientAuctionMessage)
  })
_sym_db.RegisterMessage(ClientAuctionMessage)

AccountCommitment = _reflection.GeneratedProtocolMessageType('AccountCommitment', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNTCOMMITMENT,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.AccountCommitment)
  })
_sym_db.RegisterMessage(AccountCommitment)

AccountSubscription = _reflection.GeneratedProtocolMessageType('AccountSubscription', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNTSUBSCRIPTION,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.AccountSubscription)
  })
_sym_db.RegisterMessage(AccountSubscription)

OrderMatchAccept = _reflection.GeneratedProtocolMessageType('OrderMatchAccept', (_message.Message,), {
  'DESCRIPTOR' : _ORDERMATCHACCEPT,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.OrderMatchAccept)
  })
_sym_db.RegisterMessage(OrderMatchAccept)

OrderMatchReject = _reflection.GeneratedProtocolMessageType('OrderMatchReject', (_message.Message,), {

  'RejectedOrdersEntry' : _reflection.GeneratedProtocolMessageType('RejectedOrdersEntry', (_message.Message,), {
    'DESCRIPTOR' : _ORDERMATCHREJECT_REJECTEDORDERSENTRY,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.OrderMatchReject.RejectedOrdersEntry)
    })
  ,
  'DESCRIPTOR' : _ORDERMATCHREJECT,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.OrderMatchReject)
  })
_sym_db.RegisterMessage(OrderMatchReject)
_sym_db.RegisterMessage(OrderMatchReject.RejectedOrdersEntry)

OrderReject = _reflection.GeneratedProtocolMessageType('OrderReject', (_message.Message,), {
  'DESCRIPTOR' : _ORDERREJECT,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.OrderReject)
  })
_sym_db.RegisterMessage(OrderReject)

ChannelInfo = _reflection.GeneratedProtocolMessageType('ChannelInfo', (_message.Message,), {
  'DESCRIPTOR' : _CHANNELINFO,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ChannelInfo)
  })
_sym_db.RegisterMessage(ChannelInfo)

OrderMatchSign = _reflection.GeneratedProtocolMessageType('OrderMatchSign', (_message.Message,), {

  'AccountSigsEntry' : _reflection.GeneratedProtocolMessageType('AccountSigsEntry', (_message.Message,), {
    'DESCRIPTOR' : _ORDERMATCHSIGN_ACCOUNTSIGSENTRY,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.OrderMatchSign.AccountSigsEntry)
    })
  ,

  'ChannelInfosEntry' : _reflection.GeneratedProtocolMessageType('ChannelInfosEntry', (_message.Message,), {
    'DESCRIPTOR' : _ORDERMATCHSIGN_CHANNELINFOSENTRY,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.OrderMatchSign.ChannelInfosEntry)
    })
  ,
  'DESCRIPTOR' : _ORDERMATCHSIGN,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.OrderMatchSign)
  })
_sym_db.RegisterMessage(OrderMatchSign)
_sym_db.RegisterMessage(OrderMatchSign.AccountSigsEntry)
_sym_db.RegisterMessage(OrderMatchSign.ChannelInfosEntry)

AccountRecovery = _reflection.GeneratedProtocolMessageType('AccountRecovery', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNTRECOVERY,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.AccountRecovery)
  })
_sym_db.RegisterMessage(AccountRecovery)

ServerAuctionMessage = _reflection.GeneratedProtocolMessageType('ServerAuctionMessage', (_message.Message,), {
  'DESCRIPTOR' : _SERVERAUCTIONMESSAGE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerAuctionMessage)
  })
_sym_db.RegisterMessage(ServerAuctionMessage)

ServerChallenge = _reflection.GeneratedProtocolMessageType('ServerChallenge', (_message.Message,), {
  'DESCRIPTOR' : _SERVERCHALLENGE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerChallenge)
  })
_sym_db.RegisterMessage(ServerChallenge)

SubscribeSuccess = _reflection.GeneratedProtocolMessageType('SubscribeSuccess', (_message.Message,), {
  'DESCRIPTOR' : _SUBSCRIBESUCCESS,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.SubscribeSuccess)
  })
_sym_db.RegisterMessage(SubscribeSuccess)

MatchedMarket = _reflection.GeneratedProtocolMessageType('MatchedMarket', (_message.Message,), {

  'MatchedOrdersEntry' : _reflection.GeneratedProtocolMessageType('MatchedOrdersEntry', (_message.Message,), {
    'DESCRIPTOR' : _MATCHEDMARKET_MATCHEDORDERSENTRY,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.MatchedMarket.MatchedOrdersEntry)
    })
  ,
  'DESCRIPTOR' : _MATCHEDMARKET,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.MatchedMarket)
  })
_sym_db.RegisterMessage(MatchedMarket)
_sym_db.RegisterMessage(MatchedMarket.MatchedOrdersEntry)

OrderMatchPrepare = _reflection.GeneratedProtocolMessageType('OrderMatchPrepare', (_message.Message,), {

  'MatchedOrdersEntry' : _reflection.GeneratedProtocolMessageType('MatchedOrdersEntry', (_message.Message,), {
    'DESCRIPTOR' : _ORDERMATCHPREPARE_MATCHEDORDERSENTRY,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.OrderMatchPrepare.MatchedOrdersEntry)
    })
  ,

  'MatchedMarketsEntry' : _reflection.GeneratedProtocolMessageType('MatchedMarketsEntry', (_message.Message,), {
    'DESCRIPTOR' : _ORDERMATCHPREPARE_MATCHEDMARKETSENTRY,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.OrderMatchPrepare.MatchedMarketsEntry)
    })
  ,
  'DESCRIPTOR' : _ORDERMATCHPREPARE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.OrderMatchPrepare)
  })
_sym_db.RegisterMessage(OrderMatchPrepare)
_sym_db.RegisterMessage(OrderMatchPrepare.MatchedOrdersEntry)
_sym_db.RegisterMessage(OrderMatchPrepare.MatchedMarketsEntry)

OrderMatchSignBegin = _reflection.GeneratedProtocolMessageType('OrderMatchSignBegin', (_message.Message,), {
  'DESCRIPTOR' : _ORDERMATCHSIGNBEGIN,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.OrderMatchSignBegin)
  })
_sym_db.RegisterMessage(OrderMatchSignBegin)

OrderMatchFinalize = _reflection.GeneratedProtocolMessageType('OrderMatchFinalize', (_message.Message,), {
  'DESCRIPTOR' : _ORDERMATCHFINALIZE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.OrderMatchFinalize)
  })
_sym_db.RegisterMessage(OrderMatchFinalize)

SubscribeError = _reflection.GeneratedProtocolMessageType('SubscribeError', (_message.Message,), {
  'DESCRIPTOR' : _SUBSCRIBEERROR,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.SubscribeError)
  })
_sym_db.RegisterMessage(SubscribeError)

AuctionAccount = _reflection.GeneratedProtocolMessageType('AuctionAccount', (_message.Message,), {
  'DESCRIPTOR' : _AUCTIONACCOUNT,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.AuctionAccount)
  })
_sym_db.RegisterMessage(AuctionAccount)

MatchedOrder = _reflection.GeneratedProtocolMessageType('MatchedOrder', (_message.Message,), {
  'DESCRIPTOR' : _MATCHEDORDER,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.MatchedOrder)
  })
_sym_db.RegisterMessage(MatchedOrder)

MatchedAsk = _reflection.GeneratedProtocolMessageType('MatchedAsk', (_message.Message,), {
  'DESCRIPTOR' : _MATCHEDASK,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.MatchedAsk)
  })
_sym_db.RegisterMessage(MatchedAsk)

MatchedBid = _reflection.GeneratedProtocolMessageType('MatchedBid', (_message.Message,), {
  'DESCRIPTOR' : _MATCHEDBID,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.MatchedBid)
  })
_sym_db.RegisterMessage(MatchedBid)

AccountDiff = _reflection.GeneratedProtocolMessageType('AccountDiff', (_message.Message,), {
  'DESCRIPTOR' : _ACCOUNTDIFF,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.AccountDiff)
  })
_sym_db.RegisterMessage(AccountDiff)

ServerOrder = _reflection.GeneratedProtocolMessageType('ServerOrder', (_message.Message,), {
  'DESCRIPTOR' : _SERVERORDER,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerOrder)
  })
_sym_db.RegisterMessage(ServerOrder)

ServerBid = _reflection.GeneratedProtocolMessageType('ServerBid', (_message.Message,), {
  'DESCRIPTOR' : _SERVERBID,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerBid)
  })
_sym_db.RegisterMessage(ServerBid)

ServerAsk = _reflection.GeneratedProtocolMessageType('ServerAsk', (_message.Message,), {
  'DESCRIPTOR' : _SERVERASK,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerAsk)
  })
_sym_db.RegisterMessage(ServerAsk)

CancelOrder = _reflection.GeneratedProtocolMessageType('CancelOrder', (_message.Message,), {
  'DESCRIPTOR' : _CANCELORDER,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.CancelOrder)
  })
_sym_db.RegisterMessage(CancelOrder)

InvalidOrder = _reflection.GeneratedProtocolMessageType('InvalidOrder', (_message.Message,), {
  'DESCRIPTOR' : _INVALIDORDER,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.InvalidOrder)
  })
_sym_db.RegisterMessage(InvalidOrder)

ServerInput = _reflection.GeneratedProtocolMessageType('ServerInput', (_message.Message,), {
  'DESCRIPTOR' : _SERVERINPUT,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerInput)
  })
_sym_db.RegisterMessage(ServerInput)

ServerOutput = _reflection.GeneratedProtocolMessageType('ServerOutput', (_message.Message,), {
  'DESCRIPTOR' : _SERVEROUTPUT,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerOutput)
  })
_sym_db.RegisterMessage(ServerOutput)

ServerModifyAccountRequest = _reflection.GeneratedProtocolMessageType('ServerModifyAccountRequest', (_message.Message,), {

  'NewAccountParameters' : _reflection.GeneratedProtocolMessageType('NewAccountParameters', (_message.Message,), {
    'DESCRIPTOR' : _SERVERMODIFYACCOUNTREQUEST_NEWACCOUNTPARAMETERS,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.ServerModifyAccountRequest.NewAccountParameters)
    })
  ,
  'DESCRIPTOR' : _SERVERMODIFYACCOUNTREQUEST,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerModifyAccountRequest)
  })
_sym_db.RegisterMessage(ServerModifyAccountRequest)
_sym_db.RegisterMessage(ServerModifyAccountRequest.NewAccountParameters)

ServerModifyAccountResponse = _reflection.GeneratedProtocolMessageType('ServerModifyAccountResponse', (_message.Message,), {
  'DESCRIPTOR' : _SERVERMODIFYACCOUNTRESPONSE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerModifyAccountResponse)
  })
_sym_db.RegisterMessage(ServerModifyAccountResponse)

ServerOrderStateRequest = _reflection.GeneratedProtocolMessageType('ServerOrderStateRequest', (_message.Message,), {
  'DESCRIPTOR' : _SERVERORDERSTATEREQUEST,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerOrderStateRequest)
  })
_sym_db.RegisterMessage(ServerOrderStateRequest)

ServerOrderStateResponse = _reflection.GeneratedProtocolMessageType('ServerOrderStateResponse', (_message.Message,), {
  'DESCRIPTOR' : _SERVERORDERSTATERESPONSE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerOrderStateResponse)
  })
_sym_db.RegisterMessage(ServerOrderStateResponse)

TermsRequest = _reflection.GeneratedProtocolMessageType('TermsRequest', (_message.Message,), {
  'DESCRIPTOR' : _TERMSREQUEST,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.TermsRequest)
  })
_sym_db.RegisterMessage(TermsRequest)

TermsResponse = _reflection.GeneratedProtocolMessageType('TermsResponse', (_message.Message,), {

  'LeaseDurationsEntry' : _reflection.GeneratedProtocolMessageType('LeaseDurationsEntry', (_message.Message,), {
    'DESCRIPTOR' : _TERMSRESPONSE_LEASEDURATIONSENTRY,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.TermsResponse.LeaseDurationsEntry)
    })
  ,

  'LeaseDurationBucketsEntry' : _reflection.GeneratedProtocolMessageType('LeaseDurationBucketsEntry', (_message.Message,), {
    'DESCRIPTOR' : _TERMSRESPONSE_LEASEDURATIONBUCKETSENTRY,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.TermsResponse.LeaseDurationBucketsEntry)
    })
  ,
  'DESCRIPTOR' : _TERMSRESPONSE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.TermsResponse)
  })
_sym_db.RegisterMessage(TermsResponse)
_sym_db.RegisterMessage(TermsResponse.LeaseDurationsEntry)
_sym_db.RegisterMessage(TermsResponse.LeaseDurationBucketsEntry)

RelevantBatchRequest = _reflection.GeneratedProtocolMessageType('RelevantBatchRequest', (_message.Message,), {
  'DESCRIPTOR' : _RELEVANTBATCHREQUEST,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.RelevantBatchRequest)
  })
_sym_db.RegisterMessage(RelevantBatchRequest)

RelevantBatch = _reflection.GeneratedProtocolMessageType('RelevantBatch', (_message.Message,), {

  'MatchedOrdersEntry' : _reflection.GeneratedProtocolMessageType('MatchedOrdersEntry', (_message.Message,), {
    'DESCRIPTOR' : _RELEVANTBATCH_MATCHEDORDERSENTRY,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.RelevantBatch.MatchedOrdersEntry)
    })
  ,

  'MatchedMarketsEntry' : _reflection.GeneratedProtocolMessageType('MatchedMarketsEntry', (_message.Message,), {
    'DESCRIPTOR' : _RELEVANTBATCH_MATCHEDMARKETSENTRY,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.RelevantBatch.MatchedMarketsEntry)
    })
  ,
  'DESCRIPTOR' : _RELEVANTBATCH,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.RelevantBatch)
  })
_sym_db.RegisterMessage(RelevantBatch)
_sym_db.RegisterMessage(RelevantBatch.MatchedOrdersEntry)
_sym_db.RegisterMessage(RelevantBatch.MatchedMarketsEntry)

ExecutionFee = _reflection.GeneratedProtocolMessageType('ExecutionFee', (_message.Message,), {
  'DESCRIPTOR' : _EXECUTIONFEE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ExecutionFee)
  })
_sym_db.RegisterMessage(ExecutionFee)

NodeAddress = _reflection.GeneratedProtocolMessageType('NodeAddress', (_message.Message,), {
  'DESCRIPTOR' : _NODEADDRESS,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.NodeAddress)
  })
_sym_db.RegisterMessage(NodeAddress)

OutPoint = _reflection.GeneratedProtocolMessageType('OutPoint', (_message.Message,), {
  'DESCRIPTOR' : _OUTPOINT,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.OutPoint)
  })
_sym_db.RegisterMessage(OutPoint)

AskSnapshot = _reflection.GeneratedProtocolMessageType('AskSnapshot', (_message.Message,), {
  'DESCRIPTOR' : _ASKSNAPSHOT,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.AskSnapshot)
  })
_sym_db.RegisterMessage(AskSnapshot)

BidSnapshot = _reflection.GeneratedProtocolMessageType('BidSnapshot', (_message.Message,), {
  'DESCRIPTOR' : _BIDSNAPSHOT,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.BidSnapshot)
  })
_sym_db.RegisterMessage(BidSnapshot)

MatchedOrderSnapshot = _reflection.GeneratedProtocolMessageType('MatchedOrderSnapshot', (_message.Message,), {
  'DESCRIPTOR' : _MATCHEDORDERSNAPSHOT,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.MatchedOrderSnapshot)
  })
_sym_db.RegisterMessage(MatchedOrderSnapshot)

BatchSnapshotRequest = _reflection.GeneratedProtocolMessageType('BatchSnapshotRequest', (_message.Message,), {
  'DESCRIPTOR' : _BATCHSNAPSHOTREQUEST,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.BatchSnapshotRequest)
  })
_sym_db.RegisterMessage(BatchSnapshotRequest)

MatchedMarketSnapshot = _reflection.GeneratedProtocolMessageType('MatchedMarketSnapshot', (_message.Message,), {
  'DESCRIPTOR' : _MATCHEDMARKETSNAPSHOT,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.MatchedMarketSnapshot)
  })
_sym_db.RegisterMessage(MatchedMarketSnapshot)

BatchSnapshotResponse = _reflection.GeneratedProtocolMessageType('BatchSnapshotResponse', (_message.Message,), {

  'MatchedMarketsEntry' : _reflection.GeneratedProtocolMessageType('MatchedMarketsEntry', (_message.Message,), {
    'DESCRIPTOR' : _BATCHSNAPSHOTRESPONSE_MATCHEDMARKETSENTRY,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.BatchSnapshotResponse.MatchedMarketsEntry)
    })
  ,
  'DESCRIPTOR' : _BATCHSNAPSHOTRESPONSE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.BatchSnapshotResponse)
  })
_sym_db.RegisterMessage(BatchSnapshotResponse)
_sym_db.RegisterMessage(BatchSnapshotResponse.MatchedMarketsEntry)

ServerNodeRatingRequest = _reflection.GeneratedProtocolMessageType('ServerNodeRatingRequest', (_message.Message,), {
  'DESCRIPTOR' : _SERVERNODERATINGREQUEST,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerNodeRatingRequest)
  })
_sym_db.RegisterMessage(ServerNodeRatingRequest)

NodeRating = _reflection.GeneratedProtocolMessageType('NodeRating', (_message.Message,), {
  'DESCRIPTOR' : _NODERATING,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.NodeRating)
  })
_sym_db.RegisterMessage(NodeRating)

ServerNodeRatingResponse = _reflection.GeneratedProtocolMessageType('ServerNodeRatingResponse', (_message.Message,), {
  'DESCRIPTOR' : _SERVERNODERATINGRESPONSE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.ServerNodeRatingResponse)
  })
_sym_db.RegisterMessage(ServerNodeRatingResponse)

BatchSnapshotsRequest = _reflection.GeneratedProtocolMessageType('BatchSnapshotsRequest', (_message.Message,), {
  'DESCRIPTOR' : _BATCHSNAPSHOTSREQUEST,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.BatchSnapshotsRequest)
  })
_sym_db.RegisterMessage(BatchSnapshotsRequest)

BatchSnapshotsResponse = _reflection.GeneratedProtocolMessageType('BatchSnapshotsResponse', (_message.Message,), {
  'DESCRIPTOR' : _BATCHSNAPSHOTSRESPONSE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.BatchSnapshotsResponse)
  })
_sym_db.RegisterMessage(BatchSnapshotsResponse)

MarketInfoRequest = _reflection.GeneratedProtocolMessageType('MarketInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _MARKETINFOREQUEST,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.MarketInfoRequest)
  })
_sym_db.RegisterMessage(MarketInfoRequest)

MarketInfo = _reflection.GeneratedProtocolMessageType('MarketInfo', (_message.Message,), {

  'TierValue' : _reflection.GeneratedProtocolMessageType('TierValue', (_message.Message,), {
    'DESCRIPTOR' : _MARKETINFO_TIERVALUE,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.MarketInfo.TierValue)
    })
  ,
  'DESCRIPTOR' : _MARKETINFO,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.MarketInfo)
  })
_sym_db.RegisterMessage(MarketInfo)
_sym_db.RegisterMessage(MarketInfo.TierValue)

MarketInfoResponse = _reflection.GeneratedProtocolMessageType('MarketInfoResponse', (_message.Message,), {

  'MarketsEntry' : _reflection.GeneratedProtocolMessageType('MarketsEntry', (_message.Message,), {
    'DESCRIPTOR' : _MARKETINFORESPONSE_MARKETSENTRY,
    '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
    # @@protoc_insertion_point(class_scope:poolrpc.MarketInfoResponse.MarketsEntry)
    })
  ,
  'DESCRIPTOR' : _MARKETINFORESPONSE,
  '__module__' : 'poolgrpc.compiled.auctioneer_pb2'
  # @@protoc_insertion_point(class_scope:poolrpc.MarketInfoResponse)
  })
_sym_db.RegisterMessage(MarketInfoResponse)
_sym_db.RegisterMessage(MarketInfoResponse.MarketsEntry)

_CHANNELAUCTIONEER = DESCRIPTOR.services_by_name['ChannelAuctioneer']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z+github.com/lightninglabs/pool/auctioneerrpc'
  _ORDERMATCHREJECT_REJECTEDORDERSENTRY._options = None
  _ORDERMATCHREJECT_REJECTEDORDERSENTRY._serialized_options = b'8\001'
  _ORDERMATCHSIGN_ACCOUNTSIGSENTRY._options = None
  _ORDERMATCHSIGN_ACCOUNTSIGSENTRY._serialized_options = b'8\001'
  _ORDERMATCHSIGN_CHANNELINFOSENTRY._options = None
  _ORDERMATCHSIGN_CHANNELINFOSENTRY._serialized_options = b'8\001'
  _MATCHEDMARKET_MATCHEDORDERSENTRY._options = None
  _MATCHEDMARKET_MATCHEDORDERSENTRY._serialized_options = b'8\001'
  _ORDERMATCHPREPARE_MATCHEDORDERSENTRY._options = None
  _ORDERMATCHPREPARE_MATCHEDORDERSENTRY._serialized_options = b'8\001'
  _ORDERMATCHPREPARE_MATCHEDMARKETSENTRY._options = None
  _ORDERMATCHPREPARE_MATCHEDMARKETSENTRY._serialized_options = b'8\001'
  _ORDERMATCHPREPARE.fields_by_name['matched_orders']._options = None
  _ORDERMATCHPREPARE.fields_by_name['matched_orders']._serialized_options = b'\030\001'
  _ORDERMATCHPREPARE.fields_by_name['clearing_price_rate']._options = None
  _ORDERMATCHPREPARE.fields_by_name['clearing_price_rate']._serialized_options = b'\030\001'
  _TERMSRESPONSE_LEASEDURATIONSENTRY._options = None
  _TERMSRESPONSE_LEASEDURATIONSENTRY._serialized_options = b'8\001'
  _TERMSRESPONSE_LEASEDURATIONBUCKETSENTRY._options = None
  _TERMSRESPONSE_LEASEDURATIONBUCKETSENTRY._serialized_options = b'8\001'
  _TERMSRESPONSE.fields_by_name['max_order_duration_blocks']._options = None
  _TERMSRESPONSE.fields_by_name['max_order_duration_blocks']._serialized_options = b'\030\001'
  _TERMSRESPONSE.fields_by_name['lease_durations']._options = None
  _TERMSRESPONSE.fields_by_name['lease_durations']._serialized_options = b'\030\001'
  _RELEVANTBATCH_MATCHEDORDERSENTRY._options = None
  _RELEVANTBATCH_MATCHEDORDERSENTRY._serialized_options = b'8\001'
  _RELEVANTBATCH_MATCHEDMARKETSENTRY._options = None
  _RELEVANTBATCH_MATCHEDMARKETSENTRY._serialized_options = b'8\001'
  _RELEVANTBATCH.fields_by_name['matched_orders']._options = None
  _RELEVANTBATCH.fields_by_name['matched_orders']._serialized_options = b'\030\001'
  _RELEVANTBATCH.fields_by_name['clearing_price_rate']._options = None
  _RELEVANTBATCH.fields_by_name['clearing_price_rate']._serialized_options = b'\030\001'
  _BATCHSNAPSHOTRESPONSE_MATCHEDMARKETSENTRY._options = None
  _BATCHSNAPSHOTRESPONSE_MATCHEDMARKETSENTRY._serialized_options = b'8\001'
  _BATCHSNAPSHOTRESPONSE.fields_by_name['clearing_price_rate']._options = None
  _BATCHSNAPSHOTRESPONSE.fields_by_name['clearing_price_rate']._serialized_options = b'\030\001'
  _BATCHSNAPSHOTRESPONSE.fields_by_name['matched_orders']._options = None
  _BATCHSNAPSHOTRESPONSE.fields_by_name['matched_orders']._serialized_options = b'\030\001'
  _MARKETINFORESPONSE_MARKETSENTRY._options = None
  _MARKETINFORESPONSE_MARKETSENTRY._serialized_options = b'8\001'
  _CHANNELTYPE._serialized_start=9274
  _CHANNELTYPE._serialized_end=9342
  _AUCTIONACCOUNTSTATE._serialized_start=9345
  _AUCTIONACCOUNTSTATE._serialized_end=9528
  _ORDERCHANNELTYPE._serialized_start=9531
  _ORDERCHANNELTYPE._serialized_end=9660
  _NODETIER._serialized_start=9662
  _NODETIER._serialized_end=9714
  _ORDERSTATE._serialized_start=9717
  _ORDERSTATE._serialized_end=9874
  _DURATIONBUCKETSTATE._serialized_start=9876
  _DURATIONBUCKETSTATE._serialized_end=9970
  _RESERVEACCOUNTREQUEST._serialized_start=47
  _RESERVEACCOUNTREQUEST._serialized_end=137
  _RESERVEACCOUNTRESPONSE._serialized_start=139
  _RESERVEACCOUNTRESPONSE._serialized_end=214
  _SERVERINITACCOUNTREQUEST._serialized_start=217
  _SERVERINITACCOUNTREQUEST._serialized_end=396
  _SERVERINITACCOUNTRESPONSE._serialized_start=398
  _SERVERINITACCOUNTRESPONSE._serialized_end=425
  _SERVERSUBMITORDERREQUEST._serialized_start=427
  _SERVERSUBMITORDERREQUEST._serialized_end=554
  _SERVERSUBMITORDERRESPONSE._serialized_start=556
  _SERVERSUBMITORDERRESPONSE._serialized_end=662
  _SERVERCANCELORDERREQUEST._serialized_start=664
  _SERVERCANCELORDERREQUEST._serialized_end=720
  _SERVERCANCELORDERRESPONSE._serialized_start=722
  _SERVERCANCELORDERRESPONSE._serialized_end=749
  _CLIENTAUCTIONMESSAGE._serialized_start=752
  _CLIENTAUCTIONMESSAGE._serialized_end=1054
  _ACCOUNTCOMMITMENT._serialized_start=1056
  _ACCOUNTCOMMITMENT._serialized_end=1119
  _ACCOUNTSUBSCRIPTION._serialized_start=1121
  _ACCOUNTSUBSCRIPTION._serialized_end=1202
  _ORDERMATCHACCEPT._serialized_start=1204
  _ORDERMATCHACCEPT._serialized_end=1240
  _ORDERMATCHREJECT._serialized_start=1243
  _ORDERMATCHREJECT._serialized_end=1606
  _ORDERMATCHREJECT_REJECTEDORDERSENTRY._serialized_start=1430
  _ORDERMATCHREJECT_REJECTEDORDERSENTRY._serialized_end=1505
  _ORDERMATCHREJECT_REJECTREASON._serialized_start=1507
  _ORDERMATCHREJECT_REJECTREASON._serialized_end=1606
  _ORDERREJECT._serialized_start=1609
  _ORDERREJECT._serialized_end=1768
  _ORDERREJECT_ORDERREJECTREASON._serialized_start=1701
  _ORDERREJECT_ORDERREJECTREASON._serialized_end=1768
  _CHANNELINFO._serialized_start=1771
  _CHANNELINFO._serialized_end=1938
  _ORDERMATCHSIGN._serialized_start=1941
  _ORDERMATCHSIGN._serialized_end=2232
  _ORDERMATCHSIGN_ACCOUNTSIGSENTRY._serialized_start=2107
  _ORDERMATCHSIGN_ACCOUNTSIGSENTRY._serialized_end=2157
  _ORDERMATCHSIGN_CHANNELINFOSENTRY._serialized_start=2159
  _ORDERMATCHSIGN_CHANNELINFOSENTRY._serialized_end=2232
  _ACCOUNTRECOVERY._serialized_start=2234
  _ACCOUNTRECOVERY._serialized_end=2271
  _SERVERAUCTIONMESSAGE._serialized_start=2274
  _SERVERAUCTIONMESSAGE._serialized_end=2624
  _SERVERCHALLENGE._serialized_start=2626
  _SERVERCHALLENGE._serialized_end=2683
  _SUBSCRIBESUCCESS._serialized_start=2685
  _SUBSCRIBESUCCESS._serialized_end=2723
  _MATCHEDMARKET._serialized_start=2726
  _MATCHEDMARKET._serialized_end=2914
  _MATCHEDMARKET_MATCHEDORDERSENTRY._serialized_start=2839
  _MATCHEDMARKET_MATCHEDORDERSENTRY._serialized_end=2914
  _ORDERMATCHPREPARE._serialized_start=2917
  _ORDERMATCHPREPARE._serialized_end=3515
  _ORDERMATCHPREPARE_MATCHEDORDERSENTRY._serialized_start=2839
  _ORDERMATCHPREPARE_MATCHEDORDERSENTRY._serialized_end=2914
  _ORDERMATCHPREPARE_MATCHEDMARKETSENTRY._serialized_start=3438
  _ORDERMATCHPREPARE_MATCHEDMARKETSENTRY._serialized_end=3515
  _ORDERMATCHSIGNBEGIN._serialized_start=3517
  _ORDERMATCHSIGNBEGIN._serialized_end=3556
  _ORDERMATCHFINALIZE._serialized_start=3558
  _ORDERMATCHFINALIZE._serialized_end=3622
  _SUBSCRIBEERROR._serialized_start=3625
  _SUBSCRIBEERROR._serialized_end=3888
  _SUBSCRIBEERROR_ERROR._serialized_start=3783
  _SUBSCRIBEERROR_ERROR._serialized_end=3888
  _AUCTIONACCOUNT._serialized_start=3891
  _AUCTIONACCOUNT._serialized_end=4123
  _MATCHEDORDER._serialized_start=4125
  _MATCHEDORDER._serialized_end=4225
  _MATCHEDASK._serialized_start=4227
  _MATCHEDASK._serialized_end=4294
  _MATCHEDBID._serialized_start=4296
  _MATCHEDBID._serialized_end=4363
  _ACCOUNTDIFF._serialized_start=4366
  _ACCOUNTDIFF._serialized_end=4652
  _ACCOUNTDIFF_ACCOUNTSTATE._serialized_start=4526
  _ACCOUNTDIFF_ACCOUNTSTATE._serialized_end=4652
  _SERVERORDER._serialized_start=4655
  _SERVERORDER._serialized_end=5021
  _SERVERBID._serialized_start=5024
  _SERVERBID._serialized_end=5225
  _SERVERASK._serialized_start=5227
  _SERVERASK._serialized_end=5325
  _CANCELORDER._serialized_start=5327
  _CANCELORDER._serialized_end=5361
  _INVALIDORDER._serialized_start=5364
  _INVALIDORDER._serialized_end=5506
  _INVALIDORDER_FAILREASON._serialized_start=5477
  _INVALIDORDER_FAILREASON._serialized_end=5506
  _SERVERINPUT._serialized_start=5508
  _SERVERINPUT._serialized_end=5578
  _SERVEROUTPUT._serialized_start=5580
  _SERVEROUTPUT._serialized_end=5625
  _SERVERMODIFYACCOUNTREQUEST._serialized_start=5628
  _SERVERMODIFYACCOUNTREQUEST._serialized_end=5895
  _SERVERMODIFYACCOUNTREQUEST_NEWACCOUNTPARAMETERS._serialized_start=5842
  _SERVERMODIFYACCOUNTREQUEST_NEWACCOUNTPARAMETERS._serialized_end=5895
  _SERVERMODIFYACCOUNTRESPONSE._serialized_start=5897
  _SERVERMODIFYACCOUNTRESPONSE._serialized_end=5947
  _SERVERORDERSTATEREQUEST._serialized_start=5949
  _SERVERORDERSTATEREQUEST._serialized_end=5995
  _SERVERORDERSTATERESPONSE._serialized_start=5997
  _SERVERORDERSTATERESPONSE._serialized_end=6086
  _TERMSREQUEST._serialized_start=6088
  _TERMSREQUEST._serialized_end=6102
  _TERMSRESPONSE._serialized_start=6105
  _TERMSRESPONSE._serialized_end=6678
  _TERMSRESPONSE_LEASEDURATIONSENTRY._serialized_start=6534
  _TERMSRESPONSE_LEASEDURATIONSENTRY._serialized_end=6587
  _TERMSRESPONSE_LEASEDURATIONBUCKETSENTRY._serialized_start=6589
  _TERMSRESPONSE_LEASEDURATIONBUCKETSENTRY._serialized_end=6678
  _RELEVANTBATCHREQUEST._serialized_start=6680
  _RELEVANTBATCHREQUEST._serialized_end=6732
  _RELEVANTBATCH._serialized_start=6735
  _RELEVANTBATCH._serialized_end=7283
  _RELEVANTBATCH_MATCHEDORDERSENTRY._serialized_start=2839
  _RELEVANTBATCH_MATCHEDORDERSENTRY._serialized_end=2914
  _RELEVANTBATCH_MATCHEDMARKETSENTRY._serialized_start=3438
  _RELEVANTBATCH_MATCHEDMARKETSENTRY._serialized_end=3515
  _EXECUTIONFEE._serialized_start=7285
  _EXECUTIONFEE._serialized_end=7335
  _NODEADDRESS._serialized_start=7337
  _NODEADDRESS._serialized_end=7381
  _OUTPOINT._serialized_start=7383
  _OUTPOINT._serialized_end=7429
  _ASKSNAPSHOT._serialized_start=7431
  _ASKSNAPSHOT._serialized_end=7558
  _BIDSNAPSHOT._serialized_start=7560
  _BIDSNAPSHOT._serialized_end=7687
  _MATCHEDORDERSNAPSHOT._serialized_start=7690
  _MATCHEDORDERSNAPSHOT._serialized_end=7856
  _BATCHSNAPSHOTREQUEST._serialized_start=7858
  _BATCHSNAPSHOTREQUEST._serialized_end=7898
  _MATCHEDMARKETSNAPSHOT._serialized_start=7900
  _MATCHEDMARKETSNAPSHOT._serialized_end=8007
  _BATCHSNAPSHOTRESPONSE._serialized_start=8010
  _BATCHSNAPSHOTRESPONSE._serialized_end=8455
  _BATCHSNAPSHOTRESPONSE_MATCHEDMARKETSENTRY._serialized_start=8370
  _BATCHSNAPSHOTRESPONSE_MATCHEDMARKETSENTRY._serialized_end=8455
  _SERVERNODERATINGREQUEST._serialized_start=8457
  _SERVERNODERATINGREQUEST._serialized_end=8504
  _NODERATING._serialized_start=8506
  _NODERATING._serialized_end=8577
  _SERVERNODERATINGRESPONSE._serialized_start=8579
  _SERVERNODERATINGRESPONSE._serialized_end=8648
  _BATCHSNAPSHOTSREQUEST._serialized_start=8650
  _BATCHSNAPSHOTSREQUEST._serialized_end=8723
  _BATCHSNAPSHOTSRESPONSE._serialized_start=8725
  _BATCHSNAPSHOTSRESPONSE._serialized_end=8798
  _MARKETINFOREQUEST._serialized_start=8800
  _MARKETINFOREQUEST._serialized_end=8819
  _MARKETINFO._serialized_start=8822
  _MARKETINFO._serialized_end=9121
  _MARKETINFO_TIERVALUE._serialized_start=9062
  _MARKETINFO_TIERVALUE._serialized_end=9121
  _MARKETINFORESPONSE._serialized_start=9124
  _MARKETINFORESPONSE._serialized_end=9272
  _MARKETINFORESPONSE_MARKETSENTRY._serialized_start=9205
  _MARKETINFORESPONSE_MARKETSENTRY._serialized_end=9272
  _CHANNELAUCTIONEER._serialized_start=9973
  _CHANNELAUCTIONEER._serialized_end=11138
# @@protoc_insertion_point(module_scope)
