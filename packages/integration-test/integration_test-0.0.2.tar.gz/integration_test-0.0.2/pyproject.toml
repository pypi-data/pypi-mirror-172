[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "integration-test"
description = "Collection of automated test cases"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Sven Siegmund", email = "sven.siegmund@iav.de" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "tamarisk",
    "wattle",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://gitlab.iavgroup.local/In-CarApps/test-automation/oru/integration_test#readme"
Issues = "https://gitlab.iavgroup.local/In-CarApps/test-automation/oru/integration_test/issues"
Source = "https://gitlab.iavgroup.local/In-CarApps/test-automation/oru/integration-test"

[tool.hatch.version]
path = "src/integration_test/__about__.py"

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-cov",
    "twine",
    "wheel",
]

[tool.hatch.envs.default.env-vars]
TWINE_CERT = "C:\\Users\\ssiegmund\\.ssh\\IAV-CA-Bundle.crt"
TWINE_REPOSITORY = "care"

[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/integration_test --cov=tests {args}"
no-cov = "cov --no-cov {args}"

[[tool.hatch.envs.test.matrix]]
python = ["310", ]

[tool.hatch.envs.style]
dependencies = [
    "black",
    "isort",
]

[tool.hatch.envs.style.scripts]
fmt = [
    "isort .",
    "black .",
]

[tool.coverage.run]
branch = true
parallel = true
omit = [
    "src/integration_test/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
    line-length = 102
