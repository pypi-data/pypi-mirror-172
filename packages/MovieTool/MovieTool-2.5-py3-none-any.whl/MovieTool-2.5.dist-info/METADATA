Metadata-Version: 2.1
Name: MovieTool
Version: 2.5
Summary: Descarga tus peliculas y series, automatiza todo y crea tu propio Netflix 100% funcional (y con más contenido que el de Netflix) haciendo uso de Plex, Ombi y otras tecnologías más. ⭐
Home-page: https://github.com/ElHaban3ro/MovieTool
Author: ElHaban3ro
Author-email: habanferd@gmail.com
License: MIT
Keywords: python,torrent,torrent-management,movies,plex,hbo,series,netflix,ombi,peliculas
Classifier: Programming Language :: Python :: 3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: pandas (==1.4.4)
Requires-Dist: python-qbittorrent (==0.4.2)
Requires-Dist: lxml (==4.9.1)
Requires-Dist: feedparser (==6.0.10)

# MOVIEPY

# DeeptransTool

[![License: MIT](https://img.shields.io/badge/License-MIT-yellowgreen.svg?style=flat-square)](https://opensource.org/licenses/MIT) [![Python 3.10](https://img.shields.io/badge/Python-3.10-blue.svg?style=flat-square&logo=python)](https://www.python.org/downloads/release/python-310/) [![PyPi Package](https://img.shields.io/badge/PyPi_Package-pip_install_MovieTool-yellow.svg?style=flat-square&logo=pypi)](https://pypi.org/project/MovieTool/) [![GitGub Repositorie](https://img.shields.io/badge/GitHub_Repositorie-MovieTool-gray.svg?style=flat-square&logo=github)](https://github.com/ElHaban3ro/MovieTool/)

*Este proyecto estÃ¡ en actual desarrollo, por tanto, si ve algo que falte o que directamente tiene un bug, lo invito a que me diga qliao xd. Contacta conmigo por Discord o Twitter!*



## Detalles del proyecto

---
Descarga tus ***peliculas*** o ***series*** favoritas, **automatizando** la descarga de peliculas y series ***en espaÃ±ol***, ahora 100% gratis. Usamos **OMBI**, **Plex**, **QBitTorrent** y *otros* servicios mÃ¡s para *cumplir la meta*. Una alternativa *facil de implementar* (ya trabajarÃ© en la implementaciÃ³n casi 100% automatica) y barata por donde lo veas. Â¡Te recomendamos que tengas a tu disposiciÃ³n ***MUY BUEN ALMACENAMIENTO***, pues, todo lo que se pida, **se descargarÃ¡**, por tanto, puedes ir mirando y eliminando, o *dejarlo de por vida* para que otras personas las ***utilicen!***

PodrÃ¡s usar los diferentes **modulos** de maneras independientes (mÃ¡s adelante la ***documentaciÃ³n***) o si lo prefieres, ***montar*** tu propio servidor *casi listo para utilizar* usando nuestros **scripts** (aÃºn no ***disponibles***, no puedes montar tu servidor aÃºn).

El **enfoque** inicial del proyecto cambiÃ³. Ahora nuestro *principal objetivo* es descargar el contenido en ***espaÃ±ol***, olvidandonos de los mayores **problemas** causados por los subtitlos de las **peliculas**/**series** en ***inglÃ©s***.




## InstalaciÃ³n (del paquete)

---
La mejor idea para obtener acceso a este paquete, es haciendo uso de ***pip***:
```bash
pip install MovieTool
```
Ya con el comando ejecutado, podrÃ¡s comenzar a usar nuestro paquete.

---

Si por alguna razÃ³n tienes algÃºn problema con esto, puedes **instalar** el proyecto ***clonando el repositorio*** dentro de la carpeta de un proyecto ya creado:
```bash
git clone https://github.com/ElHaban3ro/MovieTool.git
```

Esto te copiarÃ¡ el proyecto dentro de una **nueva** carpeta.
Lo siguiente en hacer es muy importante, necesitas instalar los requerimientos (el **requeriments.txt** incluye las librerias importantes que necesitamos para que el proyecto funcione). Ã‰sto lo hacemos con el comando:
```bash
pip install -r requirements.txt 
```

Esto, **idealmente** tendrÃ­a que instalarte todas las librerias necesarias.


Una vez con esto hecho, tu proyecto personalizado se verÃ­a asÃ­:
```
tu_proyecto |
               .venv
               MovieTool (librerÃ­a)  |
                                      download_torrents.py
                                     
               main.py (tu script principal)
```




## Uso

---

Hacer uso de nuestros modulos es realmente **facil**. Para utilizar un mÃ³dulo, se harÃ­a de la siguiente forma:

```python
from MovieTool.ombi_handler import ombi_requests

ombi_requests('MiOmbiApiKey', 'https://mihostombi', True, 7777)
```


## MÃ³dulos (DOCS)

----

- ### ***ombi_handler***:
    - > ombi_handler.ombi_requests(api_key: str, host: str, ssl: bool, port: int)
        - **DescripciÃ³n:**
          - Usa este mÃ³dulo como handler de tu servidor ombi y resivir las peliculas o series que se piden. Por ahora solo soporta las series, pero se estÃ¡ trabajando para hacerlo compatible con peliculas de igual forma. Recomiendo ejecutar esto en un nuevo hilo Python, ademÃ¡s de estar en un bucle infinito con un ```time.sleep(15)```

        - **params**:
          - api_key: **(str)** | Clave de la api de OMBI. Importante para efectuar correctamente las consultas.
    
          - host: **(str)** | DirecciÃ³n url donde estÃ¡ corriendo tu OMBI. Puede ser ingresado con el protocolo https o sin Ã©l. De cualquier manera especificar en el siguiente parametro.
    
          - ssl: **(bool)** |  Proporciona informaciÃ³n de sÃ­ tu servidor OMBI corre en un ambiente "seguro".

          - port: **(int)** | Puerto donde estÃ¡ corriendo tu servidor OMBI.

        - **Return**:
          - Una lista de listas, con las series que se han pedido.
            - **example**:
              - ```console
                > [['Stranger Things S01', 'Stranger Things S02'], ['House Of The Dragon S01E01', ''House Of The Dragon S01E02'']]
                ```

    - > ombi_handler.ombi_delete(ombi_request_id:str, api_key: str, host: str, ssl: bool, port: int)
        - **DescripciÃ³n:**
          - Elimina una peticiÃ³n dado su requestId. Si se utiliza la funciÃ³n anterior, esta se devuelve en el Ãºltimo Ã­ndice de cada lista. Esto lo usamos para que, despuÃ©s de aceptar y poner a descargar la serie/pelicula, no se quede en el apartado de "espera".

        - **params**:
          - ombi_request_id: **(str)** | Clave de la api de OMBI. Importante para efectuar correctamente las consultas.
        
          - api_key: **(str)** | Clave de la api de OMBI. Importante para efectuar correctamente las consultas.
    
          - host: **(str)** | DirecciÃ³n url donde estÃ¡ corriendo tu OMBI. Puede ser ingresado con el protocolo https o sin Ã©l. De cualquier manera especificar en el siguiente parametro.
    
          - ssl: **(bool)** |  Proporciona informaciÃ³n de sÃ­ tu servidor OMBI corre en un ambiente "seguro".

          - port: **(int)** | Puerto donde estÃ¡ corriendo tu servidor OMBI.

        - **Return**:
          - None.


- ### ***torrent_handler***:

    - > ombi_handler.t_handler(torrent_name_to_handler: str, search: str, movies_db_route: str, serie_name: str, qb_user: str,
              qb_pass: str, qb_ip: str, handler_time: int)
        - **DescripciÃ³n:**
          - Â¡Usa ese mÃ³dulo para estar pendiente de sÃ­ tus torrents ya descargaron! Recomendamos ejectuar esto en un nuevo hilo. De igual forma, si utilizas este mÃ³dulo te recomendamos utilizar el limitador de seeding propio del qBitTorrent.

        - **params**:
          - torrent_name_to_handler: Torrent name to handler!
    
          - search: La bÃºsqueda que utilizaste para el torrent! Esto lo empleamos para renombrar las peliculas. Si no quieres aÃ±adir un nombre, proporciona aquÃ­ el mismo que en el parametro anterior (torrent_name_to_handler)
    
          - movies_db_route: Ruta definitiva (donde moveremos las pelis para generar nuestro catÃ¡logo) donde se estructurarÃ¡n las series/peliculas por nombre oficial, despuÃ©s de terminar de descargar y mover los archivos, se espera que no se muevan de nuevo, una ruta definitiva!
    
          - serie_name: Nombre de la serie! Â¡Utilizada para crear una carpeta con el nombre! Si se emplea OMBI con nuestro mÃ³dulo, puedes optar por acceder al nombre de la serie con su Return.
    
          - qb_user: Usuario admin de tÃº QBitTorrent.
    
          - qb_pass: ContraseÃ±a del usuario admin de tu QBitTorrent.
    
          - qb_ip: Ruta donde estÃ¡ corriendo tu Web UI del QBitTorrent.

          - handler_time: Tiempo de espera (en segundos) con el cual se hace las peticiones a la API de qBitTorrent y ver si se ha descargado dicha serie.

          - **Return**:
            - La lista de los archivos que se consideraron multimedia y que se pasaron a la nueva carpeta de esa serie/pelicula.
              - **Example**:
                - ```console
                  > ['S01E01', 'S01E04'. 'S05E666']
                  ```




# Autor Contact
---

- Discord: ***! Die()#1274***
- [Twitter @ElHaban3ro](https://twitter.com/elhaban3ro)
- [GitHub Profile @ElHaban3ro](https://github.com/ElHaban3ro)
