{"version":3,"file":"chunks/app_components_charts_styles_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"qWAIO,MAUMA,GAAiB,OAAO,KAAP,qBAAH,kDAGlBC,EAAAA,EAAAA,GAAM,GAHY,8BAKhBC,GAAKA,EAAEC,MAAMC,SALG,eAMZF,GAAKA,EAAEC,MAAME,gBAND,YAOfJ,EAAAA,EAAAA,GAAM,GAPS,OAUdK,GAAe,OAAO,OAAP,qBAAH,UACdJ,GAAKA,EAAEC,MAAMC,SADC,eAEVF,GAAKA,EAAEC,MAAME,gBAFH,kBAGPJ,EAAAA,EAAAA,GAAM,GAHC,KAMZM,GAAkB,OAAO,MAAP,qBAAH,uDAILL,GAAKA,EAAEC,MAAMK,YAAYC,OAJpB,4CAMLR,EAAAA,EAAAA,GAAM,GAND,MAUfS,GAAgB,OAAO,MAAP,qBAAH,YACbT,EAAAA,EAAAA,GAAM,GADO,KACDA,EAAAA,EAAAA,GAAM,GADL,KACWA,EAAAA,EAAAA,GAAM,GADjB,KACuBA,EAAAA,EAAAA,GAAM,GAD7B,0BAEAC,GAAKA,EAAEC,MAAMQ,QAFb,wBAIHT,GAAKA,EAAEC,MAAMK,YAAYC,OAJtB,iEAYbG,GAAc,OAAO,MAAP,qBAAH,kDAGfX,EAAAA,EAAAA,GAAM,GAHS,KAIpBC,GAAKA,EAAEC,MAAMU,KAAKC,WAJE,WAKbZ,GAAKA,EAAEC,MAAMY,cALA,wBAWXC,GAAoB,OAAOJ,EAAP,qBAAH,qBACRV,GAAKA,EAAEC,MAAMc,YADL,gCAEEf,GAAKA,EAAEC,MAAMe,cAFf,iCAQjBC,GAAc,OAAO,MAAP,qBAAH,kDAGflB,EAAAA,EAAAA,GAAM,GAHS,2CAKFC,GAAKA,EAAEC,MAAMc,YALX,oDASTf,GAAKA,EAAEC,MAAMiB,gBATJ,KAYXC,GAAiB,OAAO,MAAP,qBAAH,YACdpB,EAAAA,EAAAA,GAAM,GADQ,KACFA,EAAAA,EAAAA,GAAM,GADJ,I","sources":["webpack:///./app/components/charts/styles.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nexport const SubHeading = styled('h3')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  font-weight: normal;\n  color: ${p => p.theme.textColor};\n  margin: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const SectionHeading = styled('h4')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n  align-items: center;\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin: ${space(1)} 0;\n`;\n\nexport const SectionValue = styled('span')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  margin-right: ${space(1)};\n`;\n\nexport const InlineContainer = styled('div')`\n  display: grid;\n  align-items: center;\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-auto-flow: column;\n    grid-column-gap: ${space(1)};\n  }\n`;\n\nexport const ChartControls = styled('div')`\n  padding: ${space(1)} ${space(1)} ${space(1)} ${space(3)};\n  border-top: 1px solid ${p => p.theme.border};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n`;\n\n// Header element for charts within panels.\nexport const HeaderTitle = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n  ${p => p.theme.text.cardTitle};\n  color: ${p => p.theme.headingColor};\n  align-items: center;\n`;\n\n// Header element for charts within panels\n// This header can be rendered while the chart is still loading\nexport const HeaderTitleLegend = styled(HeaderTitle)`\n  background-color: ${p => p.theme.background};\n  border-bottom-right-radius: ${p => p.theme.borderRadius};\n  position: absolute;\n  z-index: 1;\n`;\n\n// Used for rendering total value of a chart right below the HeaderTitleLegend\nexport const HeaderValue = styled('div')`\n  display: inline-grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n  align-items: baseline;\n  background-color: ${p => p.theme.background};\n  position: absolute;\n  top: 40px;\n  z-index: 1;\n  font-size: ${p => p.theme.headerFontSize};\n`;\n\nexport const ChartContainer = styled('div')`\n  padding: ${space(2)} ${space(3)};\n`;\n"],"names":["SectionHeading","space","p","theme","subText","fontSizeMedium","SectionValue","InlineContainer","breakpoints","small","ChartControls","border","HeaderTitle","text","cardTitle","headingColor","HeaderTitleLegend","background","borderRadius","HeaderValue","headerFontSize","ChartContainer"],"sourceRoot":""}