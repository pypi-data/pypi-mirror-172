{"version":3,"file":"chunks/app_views_settings_account_accountDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"kXAMe,MAAMA,UAGXC,EAAAA,EACRC,WACE,MAAO,EACR,CAEDC,SACE,OACE,QAAC,IAAD,CAAqBC,MAAOC,KAAKH,WAAjC,SACGG,KAAKC,mBAGX,EAdkBN,EAAAA,YAAAA,W,ynBCMrB,MAAMO,EAAW,aAEjB,MAAMC,UAAuBR,EAAAA,EAAU,sEAMdS,KAGrBC,EAAAA,EAAAA,IAAWD,GAGXJ,KAAKM,SAAS,CACZF,QADF,GAZmC,CACrCG,eAEE,MAAO,CAAC,CAAC,OAAQL,GAClB,CAaDM,aACE,MAAMJ,EAAOJ,KAAKS,MAAML,KAElBM,EAA0C,CAC9CC,YAAaT,EACbU,UAAW,MACXC,WAAW,EACXC,YAAY,EACZC,gBAAiBf,KAAKgB,qBAGxB,OACE,0BACE,QAAC,IAAD,CAAoBjB,OAAOkB,EAAAA,EAAAA,GAAE,sBAC7B,QAAC,IAAD,CAAMC,YAAad,KAAUM,EAA7B,UACE,QAAC,IAAD,CAAUS,MAAOC,EAAAA,QAAsBC,qBAAsB,CAACjB,aAEhE,QAAC,IAAD,CAAMc,YAAad,EAAKkB,WAAaZ,EAArC,UACE,QAAC,IAAD,CAAUS,MAAOI,EAAAA,QAA0BF,qBAAsB,CAACjB,aAEpE,QAAC,IAAD,CACEoB,SAAS,oBACTC,MAAOrB,EACPsB,OAAQC,IACN3B,KAAKgB,oBAAoBW,EAAzB,EAEFC,QAAM,MAIb,EAGH,S","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/accountDetails.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {updateUser} from 'sentry/actionCreators/account';\nimport {APIRequestMethod} from 'sentry/api';\nimport AvatarChooser from 'sentry/components/avatarChooser';\nimport Form from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport accountDetailsFields from 'sentry/data/forms/accountDetails';\nimport accountPreferencesFields from 'sentry/data/forms/accountPreferences';\nimport {t} from 'sentry/locale';\nimport {User} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nconst ENDPOINT = '/users/me/';\n\nclass AccountDetails extends AsyncView {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    // local state is NOT updated when the form saves\n    return [['user', ENDPOINT]];\n  }\n\n  handleSubmitSuccess = (user: User) => {\n    // the updateUser method updates our Config Store\n    // No components listen to the ConfigStore, they just access it directly\n    updateUser(user);\n    // We need to update the state, because AvatarChooser is using it,\n    // otherwise it will flick\n    this.setState({\n      user,\n    });\n  };\n\n  renderBody() {\n    const user = this.state.user as User;\n\n    const formCommonProps: Partial<Form['props']> = {\n      apiEndpoint: ENDPOINT,\n      apiMethod: 'PUT' as APIRequestMethod,\n      allowUndo: true,\n      saveOnBlur: true,\n      onSubmitSuccess: this.handleSubmitSuccess,\n    };\n\n    return (\n      <div>\n        <SettingsPageHeader title={t('Account Details')} />\n        <Form initialData={user} {...formCommonProps}>\n          <JsonForm forms={accountDetailsFields} additionalFieldProps={{user}} />\n        </Form>\n        <Form initialData={user.options} {...formCommonProps}>\n          <JsonForm forms={accountPreferencesFields} additionalFieldProps={{user}} />\n        </Form>\n        <AvatarChooser\n          endpoint=\"/users/me/avatar/\"\n          model={user}\n          onSave={resp => {\n            this.handleSubmitSuccess(resp as User);\n          }}\n          isUser\n        />\n      </div>\n    );\n  }\n}\n\nexport default AccountDetails;\n"],"names":["AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","ENDPOINT","AccountDetails","user","updateUser","setState","getEndpoints","renderBody","state","formCommonProps","apiEndpoint","apiMethod","allowUndo","saveOnBlur","onSubmitSuccess","handleSubmitSuccess","t","initialData","forms","accountDetailsFields","additionalFieldProps","options","accountPreferencesFields","endpoint","model","onSave","resp","isUser"],"sourceRoot":""}