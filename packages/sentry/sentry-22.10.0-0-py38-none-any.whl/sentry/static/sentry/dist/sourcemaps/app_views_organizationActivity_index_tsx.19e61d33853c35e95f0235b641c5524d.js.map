{"version":3,"file":"chunks/app_views_organizationActivity_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/activity/item/avatar.tsx","webpack:///./app/components/commitLink.tsx","webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/events/eventMessage.tsx","webpack:///./app/components/pullRequestLink.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/components/issueLink.tsx","webpack:///./app/views/organizationActivity/activityFeedItem.tsx","webpack:///./app/views/organizationActivity/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport Placeholder from 'sentry/components/placeholder';\nimport {IconSentry} from 'sentry/icons';\nimport {AvatarUser} from 'sentry/types';\n\ntype Props = {\n  type: 'system' | 'user';\n  className?: string;\n  size?: number;\n  user?: AvatarUser;\n};\n\nfunction ActivityAvatar({className, type, user, size = 38}: Props) {\n  if (user) {\n    return <UserAvatar user={user} size={size} className={className} />;\n  }\n\n  if (type === 'system') {\n    // Return Sentry avatar\n    return (\n      <SystemAvatar className={className} size={size}>\n        <StyledIconSentry size=\"md\" />\n      </SystemAvatar>\n    );\n  }\n\n  return (\n    <Placeholder\n      className={className}\n      width={`${size}px`}\n      height={`${size}px`}\n      shape=\"circle\"\n    />\n  );\n}\n\nexport default ActivityAvatar;\n\ntype SystemAvatarProps = {\n  size: number;\n};\n\nconst SystemAvatar = styled('span')<SystemAvatarProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  background-color: ${p => p.theme.textColor};\n  color: ${p => p.theme.background};\n  border-radius: 50%;\n`;\n\nconst StyledIconSentry = styled(IconSentry)`\n  padding-bottom: 3px;\n`;\n","import Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab, IconVsts} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Repository} from 'sentry/types';\nimport {getShortCommitHash} from 'sentry/utils';\n\ntype CommitFormatterParameters = {\n  baseUrl: string;\n  commitId: string;\n};\n\ntype CommitProvider = {\n  commitUrl: (opts: CommitFormatterParameters) => string;\n  icon: React.ReactNode;\n  providerIds: string[];\n};\n\n// TODO(epurkhiser, jess): This should be moved into plugins.\nconst SUPPORTED_PROVIDERS: Readonly<CommitProvider[]> = [\n  {\n    icon: <IconGithub size=\"xs\" />,\n    providerIds: ['github', 'integrations:github', 'integrations:github_enterprise'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconBitbucket size=\"xs\" />,\n    providerIds: ['bitbucket', 'integrations:bitbucket'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commits/${commitId}`,\n  },\n  {\n    icon: <IconVsts size=\"xs\" />,\n    providerIds: ['visualstudio', 'integrations:vsts'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconGitlab size=\"xs\" />,\n    providerIds: ['gitlab', 'integrations:gitlab'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n];\n\ntype Props = {\n  commitId?: string;\n  inline?: boolean;\n  onClick?: () => void;\n  repository?: Repository;\n  showIcon?: boolean;\n};\n\nfunction CommitLink({inline, commitId, repository, showIcon = true, onClick}: Props) {\n  if (!commitId || !repository) {\n    return <span>{t('Unknown Commit')}</span>;\n  }\n\n  const shortId = getShortCommitHash(commitId);\n\n  const providerData = SUPPORTED_PROVIDERS.find(provider => {\n    if (!repository.provider) {\n      return false;\n    }\n    return provider.providerIds.includes(repository.provider.id);\n  });\n\n  if (providerData === undefined) {\n    return <span>{shortId}</span>;\n  }\n\n  const commitUrl =\n    repository.url &&\n    providerData.commitUrl({\n      commitId,\n      baseUrl: repository.url,\n    });\n\n  return !inline ? (\n    <Button\n      external\n      href={commitUrl}\n      size=\"sm\"\n      icon={showIcon ? providerData.icon : null}\n      onClick={onClick}\n    >\n      {shortId}\n    </Button>\n  ) : (\n    <ExternalLink href={commitUrl} onClick={onClick}>\n      {showIcon ? providerData.icon : null}\n      {' ' + shortId}\n    </ExternalLink>\n  );\n}\n\nexport default CommitLink;\n","import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import styled from '@emotion/styled';\n\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport space from 'sentry/styles/space';\nimport {Level} from 'sentry/types';\n\ntype Props = {\n  annotations?: React.ReactNode;\n  className?: string;\n  hasGuideAnchor?: boolean;\n  level?: Level;\n  levelIndicatorSize?: string;\n  message?: React.ReactNode;\n};\n\nconst EventMessage = styled(\n  ({className, level, levelIndicatorSize, message, annotations}: Props) => (\n    <div className={className}>\n      {level && (\n        <ErrorLevel size={levelIndicatorSize} level={level}>\n          {level}\n        </ErrorLevel>\n      )}\n\n      {message && <Message>{message}</Message>}\n\n      {annotations}\n    </div>\n  )\n)`\n  display: flex;\n  gap: ${space(1)};\n  align-items: center;\n  position: relative;\n  line-height: 1.2;\n  overflow: hidden;\n`;\n\nconst Message = styled('span')`\n  ${p => p.theme.overflowEllipsis}\n  width: auto;\n  max-height: 38px;\n`;\n\nexport default EventMessage;\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab} from 'sentry/icons';\nimport space from 'sentry/styles/space';\nimport {PullRequest, Repository} from 'sentry/types';\n\nfunction renderIcon(repo: Repository) {\n  if (!repo.provider) {\n    return null;\n  }\n\n  const {id} = repo.provider;\n  const providerId = id.includes(':') ? id.split(':').pop() : id;\n\n  switch (providerId) {\n    case 'github':\n      return <IconGithub size=\"xs\" data-test-id=\"pull-request-github\" />;\n    case 'gitlab':\n      return <IconGitlab size=\"xs\" data-test-id=\"pull-request-gitlab\" />;\n    case 'bitbucket':\n      return <IconBitbucket size=\"xs\" />;\n    default:\n      return null;\n  }\n}\n\ntype Props = {\n  pullRequest: PullRequest;\n  repository: Repository;\n  inline?: boolean;\n};\n\nfunction PullRequestLink({pullRequest, repository, inline}: Props) {\n  const displayId = `${repository.name} #${pullRequest.id}: ${pullRequest.title}`;\n\n  if (!pullRequest.externalUrl) {\n    return <span>{displayId}</span>;\n  }\n\n  return !inline ? (\n    <Button\n      external\n      href={pullRequest.externalUrl}\n      size=\"sm\"\n      icon={renderIcon(repository)}\n    >\n      {displayId}\n    </Button>\n  ) : (\n    <ExternalPullLink href={pullRequest.externalUrl}>\n      {renderIcon(repository)}\n      {displayId}\n    </ExternalPullLink>\n  );\n}\n\nconst ExternalPullLink = styled(ExternalLink)`\n  display: inline-flex;\n  align-items: center;\n  gap: ${space(0.5)};\n`;\n\nexport default PullRequestLink;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\n\nimport Count from 'sentry/components/count';\nimport EventOrGroupTitle from 'sentry/components/eventOrGroupTitle';\nimport EventAnnotation from 'sentry/components/events/eventAnnotation';\nimport EventMessage from 'sentry/components/events/eventMessage';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport Link from 'sentry/components/links/link';\nimport TimeSince from 'sentry/components/timeSince';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\nimport {getMessage} from 'sentry/utils/events';\n\ntype Props = {\n  card: boolean;\n  children: React.ReactNode;\n  issue: Group;\n  orgId: string;\n  to: string;\n};\n\nconst IssueLink = ({children, orgId, issue, to, card = true}: Props) => {\n  if (!card) {\n    return <Link to={to}>{children}</Link>;\n  }\n\n  const message = getMessage(issue);\n\n  const className = classNames({\n    isBookmarked: issue.isBookmarked,\n    hasSeen: issue.hasSeen,\n    isResolved: issue.status === 'resolved',\n  });\n\n  const streamPath = `/organizations/${orgId}/issues/`;\n\n  const hovercardBody = (\n    <div className={className}>\n      <Section>\n        <Title>\n          <StyledEventOrGroupTitle data={issue} />\n        </Title>\n\n        <HovercardEventMessage\n          level={issue.level}\n          levelIndicatorSize=\"9px\"\n          message={message}\n          annotations={\n            <Fragment>\n              {issue.logger && (\n                <EventAnnotation>\n                  <Link\n                    to={{\n                      pathname: streamPath,\n                      query: {query: `logger:${issue.logger}`},\n                    }}\n                  >\n                    {issue.logger}\n                  </Link>\n                </EventAnnotation>\n              )}\n              {issue.annotations.map((annotation, i) => (\n                <EventAnnotation key={i} dangerouslySetInnerHTML={{__html: annotation}} />\n              ))}\n            </Fragment>\n          }\n        />\n      </Section>\n\n      <Grid>\n        <div>\n          <GridHeader>{t('First Seen')}</GridHeader>\n          <StyledTimeSince date={issue.firstSeen} />\n        </div>\n        <div>\n          <GridHeader>{t('Last Seen')}</GridHeader>\n          <StyledTimeSince date={issue.lastSeen} />\n        </div>\n        <div>\n          <GridHeader>{t('Occurrences')}</GridHeader>\n          <Count value={issue.count} />\n        </div>\n        <div>\n          <GridHeader>{t('Users Affected')}</GridHeader>\n          <Count value={issue.userCount} />\n        </div>\n      </Grid>\n    </div>\n  );\n\n  return (\n    <Hovercard body={hovercardBody} header={issue.shortId}>\n      <Link to={to}>{children}</Link>\n    </Hovercard>\n  );\n};\n\nexport default IssueLink;\n\nconst Title = styled('div')`\n  ${p => p.theme.overflowEllipsis};\n  margin: 0 0 ${space(0.5)};\n`;\n\nconst StyledEventOrGroupTitle = styled(EventOrGroupTitle)`\n  font-weight: 600;\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  em {\n    font-style: normal;\n    font-weight: 400;\n    font-size: ${p => p.theme.fontSizeSmall};\n  }\n`;\n\nconst Section = styled('section')`\n  margin-bottom: ${space(2)};\n`;\n\nconst Grid = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${space(2)};\n`;\nconst HovercardEventMessage = styled(EventMessage)`\n  font-size: 12px;\n`;\n\nconst GridHeader = styled('h5')`\n  color: ${p => p.theme.gray300};\n  font-size: 11px;\n  margin-bottom: ${space(0.5)};\n  text-transform: uppercase;\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: inherit;\n`;\n","import {Component, createRef} from 'react';\nimport styled from '@emotion/styled';\n\nimport ActivityAvatar from 'sentry/components/activity/item/avatar';\nimport CommitLink from 'sentry/components/commitLink';\nimport Duration from 'sentry/components/duration';\nimport IssueLink from 'sentry/components/issueLink';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport PullRequestLink from 'sentry/components/pullRequestLink';\nimport TimeSince from 'sentry/components/timeSince';\nimport Version from 'sentry/components/version';\nimport VersionHoverCard from 'sentry/components/versionHoverCard';\nimport {t, tct, tn} from 'sentry/locale';\nimport MemberListStore from 'sentry/stores/memberListStore';\nimport TeamStore from 'sentry/stores/teamStore';\nimport space from 'sentry/styles/space';\nimport {Activity, GroupActivity, Organization} from 'sentry/types';\nimport marked from 'sentry/utils/marked';\n\nconst defaultProps = {\n  defaultClipped: false,\n  clipHeight: 68,\n};\ntype DefaultProps = typeof defaultProps;\n\ntype Props = {\n  item: Activity;\n  organization: Organization;\n  className?: string;\n} & DefaultProps;\n\ntype State = {\n  clipped: Props['defaultClipped'];\n};\n\nclass ActivityItem extends Component<Props, State> {\n  static defaultProps = defaultProps;\n\n  state: State = {\n    clipped: this.props.defaultClipped,\n  };\n\n  componentDidMount() {\n    if (this.activityBubbleRef.current) {\n      const bubbleHeight = this.activityBubbleRef.current.offsetHeight;\n\n      if (bubbleHeight > this.props.clipHeight) {\n        // okay if this causes re-render; cannot determine until\n        // rendered first anyways\n        // eslint-disable-next-line react/no-did-mount-set-state\n        this.setState({clipped: true});\n      }\n    }\n  }\n\n  renderVersionLink(version: string, item: GroupActivity) {\n    const {organization} = this.props;\n    const {project} = item;\n    return version ? (\n      <VersionHoverCard\n        organization={organization}\n        projectSlug={project.slug}\n        releaseVersion={version}\n      >\n        <Version version={version} projectId={project.id} />\n      </VersionHoverCard>\n    ) : null;\n  }\n\n  activityBubbleRef = createRef<HTMLDivElement>();\n\n  formatProjectActivity = (author, item) => {\n    const data = item.data;\n    const {organization} = this.props;\n    const orgId = organization.slug;\n    const issue = item.issue;\n    const basePath = `/organizations/${orgId}/issues/`;\n\n    const issueLink = issue ? (\n      <IssueLink orgId={orgId} issue={issue} to={`${basePath}${issue.id}/`} card>\n        {issue.shortId}\n      </IssueLink>\n    ) : null;\n\n    const versionLink = this.renderVersionLink(data.version, item);\n\n    switch (item.type) {\n      case 'note':\n        return tct('[author] commented on [issue]', {\n          author,\n          issue: (\n            <IssueLink\n              card\n              orgId={orgId}\n              issue={issue}\n              to={`${basePath}${issue.id}/activity/#event_${item.id}`}\n            >\n              {issue.shortId}\n            </IssueLink>\n          ),\n        });\n      case 'set_resolved':\n        return tct('[author] marked [issue] as resolved', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_by_age':\n        return tct('[author] marked [issue] as resolved due to age', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_in_release':\n        const {current_release_version, version} = item.data;\n        if (current_release_version) {\n          return tct(\n            '[author] marked [issue] as resolved in releases greater than [version]',\n            {\n              author,\n              version: this.renderVersionLink(current_release_version, item),\n              issue: issueLink,\n            }\n          );\n        }\n        if (version) {\n          return tct('[author] marked [issue] as resolved in [version]', {\n            author,\n            version: versionLink,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] marked [issue] as resolved in the upcoming release', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_resolved_in_commit':\n        return tct('[author] marked [issue] as resolved in [version]', {\n          author,\n          version: (\n            <CommitLink\n              inline\n              commitId={data.commit && data.commit.id}\n              repository={data.commit && data.commit.repository}\n            />\n          ),\n          issue: issueLink,\n        });\n      case 'set_resolved_in_pull_request':\n        return tct('[author] marked [issue] as resolved in [version]', {\n          author,\n          version: (\n            <PullRequestLink\n              inline\n              pullRequest={data.pullRequest}\n              repository={data.pullRequest && data.pullRequest.repository}\n            />\n          ),\n          issue: issueLink,\n        });\n      case 'set_unresolved':\n        return tct('[author] marked [issue] as unresolved', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_ignored':\n        if (data.ignoreDuration) {\n          return tct('[author] ignored [issue] for [duration]', {\n            author,\n            duration: <Duration seconds={data.ignoreDuration * 60} />,\n            issue: issueLink,\n          });\n        }\n        if (data.ignoreCount && data.ignoreWindow) {\n          return tct(\n            '[author] ignored [issue] until it happens [count] time(s) in [duration]',\n            {\n              author,\n              count: data.ignoreCount,\n              duration: <Duration seconds={data.ignoreWindow * 60} />,\n              issue: issueLink,\n            }\n          );\n        }\n        if (data.ignoreCount) {\n          return tct('[author] ignored [issue] until it happens [count] time(s)', {\n            author,\n            count: data.ignoreCount,\n            issue: issueLink,\n          });\n        }\n        if (data.ignoreUserCount && data.ignoreUserWindow) {\n          return tct(\n            '[author] ignored [issue] until it affects [count] user(s) in [duration]',\n            {\n              author,\n              count: data.ignoreUserCount,\n              duration: <Duration seconds={data.ignoreUserWindow * 60} />,\n              issue: issueLink,\n            }\n          );\n        }\n        if (data.ignoreUserCount) {\n          return tct('[author] ignored [issue] until it affects [count] user(s)', {\n            author,\n            count: data.ignoreUserCount,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] ignored [issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_public':\n        return tct('[author] made [issue] public', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_private':\n        return tct('[author] made [issue] private', {\n          author,\n          issue: issueLink,\n        });\n      case 'set_regression':\n        if (data.version) {\n          return tct('[author] marked [issue] as a regression in [version]', {\n            author,\n            version: versionLink,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] marked [issue] as a regression', {\n          author,\n          issue: issueLink,\n        });\n      case 'create_issue':\n        return tct('[author] linked [issue] on [provider]', {\n          author,\n          provider: data.provider,\n          issue: issueLink,\n        });\n      case 'unmerge_destination':\n        return tn(\n          '%2$s migrated %1$s fingerprint from %3$s to %4$s',\n          '%2$s migrated %1$s fingerprints from %3$s to %4$s',\n          data.fingerprints.length,\n          author,\n          data.source ? (\n            <a href={`${basePath}${data.source.id}`}>{data.source.shortId}</a>\n          ) : (\n            t('a group')\n          ),\n          issueLink\n        );\n      case 'first_seen':\n        return tct('[author] saw [link:issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'assigned':\n        let assignee;\n\n        if (data.assigneeType === 'team') {\n          const team = TeamStore.getById(data.assignee);\n          assignee = team ? team.slug : '<unknown-team>';\n\n          return tct('[author] assigned [issue] to #[assignee]', {\n            author,\n            issue: issueLink,\n            assignee,\n          });\n        }\n\n        if (item.user && data.assignee === item.user.id) {\n          return tct('[author] assigned [issue] to themselves', {\n            author,\n            issue: issueLink,\n          });\n        }\n        assignee = MemberListStore.getById(data.assignee);\n        if (assignee && assignee.email) {\n          return tct('[author] assigned [issue] to [assignee]', {\n            author,\n            assignee: <span title={assignee.email}>{assignee.name}</span>,\n            issue: issueLink,\n          });\n        }\n        if (data.assigneeEmail) {\n          return tct('[author] assigned [issue] to [assignee]', {\n            author,\n            assignee: data.assigneeEmail,\n            issue: issueLink,\n          });\n        }\n        return tct('[author] assigned [issue] to an [help:unknown user]', {\n          author,\n          help: <span title={data.assignee} />,\n          issue: issueLink,\n        });\n      case 'unassigned':\n        return tct('[author] unassigned [issue]', {\n          author,\n          issue: issueLink,\n        });\n      case 'merge':\n        return tct('[author] merged [count] [link:issues]', {\n          author,\n          count: data.issues.length + 1,\n          link: <Link to={`${basePath}${issue.id}/`} />,\n        });\n      case 'release':\n        return tct('[author] released version [version]', {\n          author,\n          version: versionLink,\n        });\n      case 'deploy':\n        return tct('[author] deployed version [version] to [environment].', {\n          author,\n          version: versionLink,\n          environment: data.environment || 'Default Environment',\n        });\n      case 'mark_reviewed':\n        return tct('[author] marked [issue] as reviewed', {\n          author,\n          issue: issueLink,\n        });\n      default:\n        return ''; // should never hit (?)\n    }\n  };\n\n  render() {\n    const {className, item} = this.props;\n\n    const avatar = (\n      <ActivityAvatar\n        type={!item.user ? 'system' : 'user'}\n        user={item.user ?? undefined}\n        size={36}\n      />\n    );\n    const author = {\n      name: item.user ? item.user.name : 'Sentry',\n      avatar,\n    };\n\n    const hasBubble = ['note', 'create_issue'].includes(item.type);\n    const bubbleProps = {\n      ...(item.type === 'note'\n        ? {dangerouslySetInnerHTML: {__html: marked(item.data.text)}}\n        : {}),\n      ...(item.type === 'create_issue'\n        ? {\n            children: (\n              <ExternalLink href={item.data.location}>{item.data.title}</ExternalLink>\n            ),\n          }\n        : {}),\n    };\n\n    return (\n      <div data-test-id=\"activity-feed-item\" className={className}>\n        {author.avatar}\n        <div>\n          {this.formatProjectActivity(\n            <span>\n              <ActivityAuthor>{author.name}</ActivityAuthor>\n            </span>,\n            item\n          )}\n          {hasBubble && (\n            <Bubble\n              ref={this.activityBubbleRef}\n              clipped={this.state.clipped}\n              {...bubbleProps}\n            />\n          )}\n          <Meta>\n            <Project>{item.project.slug}</Project>\n            <StyledTimeSince date={item.dateCreated} />\n          </Meta>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default styled(ActivityItem)`\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: max-content auto;\n  position: relative;\n  margin: 0;\n  padding: ${space(1)};\n  border-bottom: 1px solid ${p => p.theme.innerBorder};\n  line-height: 1.4;\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst ActivityAuthor = styled('span')`\n  font-weight: 600;\n`;\n\nconst Meta = styled('div')`\n  color: ${p => p.theme.textColor};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n`;\nconst Project = styled('span')`\n  font-weight: bold;\n`;\n\nconst Bubble = styled('div')<{clipped: boolean}>`\n  background: ${p => p.theme.backgroundSecondary};\n  margin: ${space(0.5)} 0;\n  padding: ${space(1)} ${space(2)};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: 3px;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.04);\n  position: relative;\n  overflow: hidden;\n\n  a {\n    max-width: 100%;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n  }\n\n  p {\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  ${p =>\n    p.clipped &&\n    `\n    max-height: 68px;\n\n    &:after {\n      position: absolute;\n      content: '';\n      display: block;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      height: 36px;\n      background-image: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 1));\n      border-bottom: 6px solid #fff;\n      border-radius: 0 0 3px 3px;\n      pointer-events: none;\n    }\n  `}\n`;\n\nconst StyledTimeSince = styled(TimeSince)`\n  color: ${p => p.theme.gray300};\n  padding-left: ${space(1)};\n`;\n","import {RouteComponentProps} from 'react-router';\n\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport ErrorBoundary from 'sentry/components/errorBoundary';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport PageHeading from 'sentry/components/pageHeading';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {Activity, Organization} from 'sentry/types';\nimport routeTitle from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport ActivityFeedItem from './activityFeedItem';\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<{orgId: string}, {}> &\n  AsyncView['props'];\n\ntype State = {\n  activity: Activity[];\n} & AsyncView['state'];\n\nclass OrganizationActivity extends AsyncView<Props, State> {\n  getTitle() {\n    const {orgId} = this.props.params;\n    return routeTitle(t('Activity'), orgId, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['activity', `/organizations/${this.props.params.orgId}/activity/`]];\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderEmpty() {\n    return (\n      <EmptyStateWarning>\n        <p>{t('Nothing to show here, move along.')}</p>\n      </EmptyStateWarning>\n    );\n  }\n\n  renderError(error?: Error, disableLog = false): React.ReactNode {\n    const {errors} = this.state;\n    const notFound = Object.values(errors).find(resp => resp && resp.status === 404);\n    if (notFound) {\n      return this.renderBody();\n    }\n    return super.renderError(error, disableLog);\n  }\n\n  renderBody() {\n    const {loading, activity, activityPageLinks} = this.state;\n\n    return (\n      <PageContent>\n        <PageHeading withMargins>{t('Activity')}</PageHeading>\n        <Panel>\n          {loading && <LoadingIndicator />}\n          {!loading && !activity?.length && this.renderEmpty()}\n          {!loading && activity?.length > 0 && (\n            <div data-test-id=\"activity-feed-list\">\n              {activity.map(item => (\n                <ErrorBoundary\n                  mini\n                  css={{marginBottom: space(1), borderRadius: 0}}\n                  key={item.id}\n                >\n                  <ActivityFeedItem organization={this.props.organization} item={item} />\n                </ErrorBoundary>\n              ))}\n            </div>\n          )}\n        </Panel>\n        {activityPageLinks && (\n          <Pagination pageLinks={activityPageLinks} {...this.props} />\n        )}\n      </PageContent>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationActivity);\n"],"names":["ActivityAvatar","className","type","user","size","SystemAvatar","StyledIconSentry","width","height","shape","p","theme","textColor","background","IconSentry","SUPPORTED_PROVIDERS","icon","providerIds","commitUrl","baseUrl","commitId","inline","repository","showIcon","onClick","t","shortId","getShortCommitHash","providerData","find","provider","includes","id","undefined","url","href","external","DEFAULT_SIZE","level","error","EventMessage","levelIndicatorSize","message","annotations","Message","space","overflowEllipsis","renderIcon","repo","split","pop","ExternalPullLink","ExternalLink","pullRequest","displayId","name","title","externalUrl","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","this","renderComponent","IssueLink","children","orgId","issue","to","card","getMessage","classNames","isBookmarked","hasSeen","isResolved","status","streamPath","hovercardBody","Section","Title","StyledEventOrGroupTitle","data","HovercardEventMessage","Fragment","logger","pathname","query","map","annotation","i","dangerouslySetInnerHTML","__html","Grid","GridHeader","StyledTimeSince","date","firstSeen","lastSeen","value","count","userCount","body","header","EventOrGroupTitle","fontSizeMedium","fontSizeSmall","gray300","TimeSince","ActivityItem","Component","clipped","props","defaultClipped","createRef","author","item","organization","slug","basePath","issueLink","versionLink","renderVersionLink","version","tct","current_release_version","commit","ignoreDuration","duration","seconds","ignoreCount","ignoreWindow","ignoreUserCount","ignoreUserWindow","tn","fingerprints","length","source","assignee","assigneeType","team","TeamStore","MemberListStore","email","assigneeEmail","help","issues","link","environment","componentDidMount","activityBubbleRef","current","offsetHeight","clipHeight","setState","project","releaseVersion","projectId","avatar","hasBubble","bubbleProps","marked","text","location","formatProjectActivity","ActivityAuthor","Bubble","ref","state","Meta","Project","dateCreated","innerBorder","fontSizeRelativeSmall","backgroundSecondary","border","OrganizationActivity","params","routeTitle","getEndpoints","renderLoading","renderBody","renderEmpty","renderError","disableLog","errors","Object","values","resp","super","loading","activity","activityPageLinks","withMargins","mini","css","marginBottom","borderRadius","pageLinks","withOrganization"],"sourceRoot":""}