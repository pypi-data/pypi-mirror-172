{"version":3,"file":"chunks/app_views_eventsV2_homepage_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"uuBA8BA,MAAMA,UAAyBC,EAAAA,EAA0C,+DACxD,IADwD,6BAgCtDC,IACfC,KAAKC,SAAS,CAACC,WAAYH,GAA3B,GAjCqE,CAGvEI,eACE,MAAM,aAACC,EAAD,SAAeC,GAAYL,KAAKM,MAEhCC,EAAwD,GAgB9D,OAdEH,EAAaI,SAASC,SAAS,2CAC/BL,EAAaI,SAASC,SAAS,mBAE/BF,EAAUG,KAAK,CACb,aACC,kBAAiBN,EAAaO,4BAMX,KAApBN,EAASO,QAAiBZ,KAAKa,OACjCb,KAAKC,SAAS,CAACa,IAAKC,KAAKC,QAEpBT,CACR,CAEDU,iBAAiB,GAAkB,IAAlB,SAACC,EAAD,KAAWC,GAAO,EAEhB,eAAbD,GAAsC,KAATC,GAC/BnB,KAAKC,SAAS,CAACC,WAAY,MAE9B,CAMDkB,aACE,MAAM,WAAClB,EAAD,QAAamB,GAAWrB,KAAKa,MACnC,OACE,QAAC,EAAAS,QAAD,IACMtB,KAAKM,MACTJ,WAAYA,QAAcqB,EAC1BF,QAASA,EACTG,cAAexB,KAAKwB,cACpBC,YAAU,EACVX,IAAM,WAAUd,KAAKa,MAAMC,OAGhC,EAGH,SAASY,EAAkBpB,GACzB,OACE,QAAC,IAAD,CACEqB,iBACErB,EAAMF,aAAaI,SAASC,SAAS,mBAAqBH,EAAMJ,WAFpE,UAKE,QAACL,EAAD,IAAsBS,KAG3B,CAVQoB,EAAAA,YAAAA,oBAYT,SAAeE,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,EAAAA,GAAgBJ,I","sources":["webpack:///./app/views/eventsV2/homepage.tsx"],"sourcesContent":["import {InjectedRouter} from 'react-router';\nimport {Location} from 'history';\n\nimport {Client} from 'sentry/api';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport {Organization, PageFilters, SavedQuery} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withPageFilters from 'sentry/utils/withPageFilters';\n\nimport {Results} from './results';\n\ntype Props = {\n  api: Client;\n  loading: boolean;\n  location: Location;\n  organization: Organization;\n  router: InjectedRouter;\n  selection: PageFilters;\n  setSavedQuery: (savedQuery: SavedQuery) => void;\n  homepageQuery?: SavedQuery;\n  savedQuery?: SavedQuery;\n};\n\ntype HomepageQueryState = AsyncComponent['state'] & {\n  key: number;\n  savedQuery?: SavedQuery | null;\n};\n\nclass HomepageQueryAPI extends AsyncComponent<Props, HomepageQueryState> {\n  shouldReload = true;\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, location} = this.props;\n\n    const endpoints: ReturnType<AsyncComponent['getEndpoints']> = [];\n    if (\n      organization.features.includes('discover-query-builder-as-landing-page') &&\n      organization.features.includes('discover-query')\n    ) {\n      endpoints.push([\n        'savedQuery',\n        `/organizations/${organization.slug}/discover/homepage/`,\n      ]);\n    }\n    // HACK: We're using state here to manage a component key so we can force remounting the entire discover result\n    // This is because we need <Results> to rerun its constructor with the new homepage query to get it to display properly\n    // We're checking to see that location.search is empty because that is the only time we should be fetching the homepage query\n    if (location.search === '' && this.state) {\n      this.setState({key: Date.now()});\n    }\n    return endpoints;\n  }\n\n  onRequestSuccess({stateKey, data}) {\n    // No homepage query results in a 204, returning an empty string\n    if (stateKey === 'savedQuery' && data === '') {\n      this.setState({savedQuery: null});\n    }\n  }\n\n  setSavedQuery = (newSavedQuery?: SavedQuery) => {\n    this.setState({savedQuery: newSavedQuery});\n  };\n\n  renderBody(): React.ReactNode {\n    const {savedQuery, loading} = this.state;\n    return (\n      <Results\n        {...this.props}\n        savedQuery={savedQuery ?? undefined}\n        loading={loading}\n        setSavedQuery={this.setSavedQuery}\n        isHomepage\n        key={`results-${this.state.key}`}\n      />\n    );\n  }\n}\n\nfunction HomepageContainer(props: Props) {\n  return (\n    <PageFiltersContainer\n      skipLoadLastUsed={\n        props.organization.features.includes('global-views') && !!props.savedQuery\n      }\n    >\n      <HomepageQueryAPI {...props} />\n    </PageFiltersContainer>\n  );\n}\n\nexport default withApi(withOrganization(withPageFilters(HomepageContainer)));\n"],"names":["HomepageQueryAPI","AsyncComponent","newSavedQuery","this","setState","savedQuery","getEndpoints","organization","location","props","endpoints","features","includes","push","slug","search","state","key","Date","now","onRequestSuccess","stateKey","data","renderBody","loading","Results","undefined","setSavedQuery","isHomepage","HomepageContainer","skipLoadLastUsed","withApi","withOrganization","withPageFilters"],"sourceRoot":""}