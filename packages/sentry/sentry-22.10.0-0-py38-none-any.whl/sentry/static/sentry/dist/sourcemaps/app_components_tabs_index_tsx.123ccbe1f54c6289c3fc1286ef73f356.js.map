{"version":3,"file":"chunks/app_components_tabs_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"0+BAEO,MAAMA,EAAyBC,GACpB,iBAATA,IAAqBC,EAAAA,EAAAA,GAAYD,IAAkB,gBAATA,E,oGCyBnD,SAASE,EAAT,EAEEC,GACA,IAFA,KAACC,EAAD,MAAOC,EAAP,YAAcC,EAAd,YAA2BC,GAE3B,EACA,MAAMC,GAAMC,EAAAA,EAAAA,IAAaN,IAEnB,IAACO,EAAD,SAAMC,GAAYP,GAClB,SAACQ,EAAD,WAAWC,EAAX,WAAuBC,IAAcC,EAAAA,EAAAA,IAAO,CAACL,OAAML,EAAOG,GAEhE,OACE,QAACQ,EAAD,KACMC,EAAAA,EAAAA,IAAWL,GACfM,SAAUJ,EACVK,SAAUN,EACVN,YAAaA,EACbD,YAAaA,EACbE,IAAKA,EANP,WAQE,QAACY,EAAD,CAAYd,YAAaA,KACzB,QAACe,EAAD,CAAYf,YAAaA,IACxBK,GACD,QAACW,EAAD,CAAuBhB,YAAaA,EAAaa,SAAUN,MAGhE,CAxBQX,EAAAA,YAAAA,UA0BF,MAAMqB,GAAMC,EAAAA,EAAAA,YAAWtB,GAExBc,GAAU,OAAO,KAAP,CAAcS,kBAAmB1B,EAAjC,qBAAH,wEAUP2B,GAAKA,EAAEC,MAAMC,KAAKC,GAAGC,QAVd,gBAWLJ,GAAwB,eAAlBA,EAAEpB,aAA+ByB,EAAAA,EAAAA,GAAM,KAAQ,GAXhD,wBAaML,GAAKA,EAAEC,MAAMK,cAbnB,+BAgBTN,GACkB,eAAlBA,EAAEpB,YACG,kGAEUyB,EAAAA,EAAAA,GAAM,SAASA,EAAAA,EAAAA,GAAM,OAAMA,EAAAA,EAAAA,GAAM,iCAC5BA,EAAAA,EAAAA,GAAM,gCACLA,EAAAA,EAAAA,GAAM,cAEtB,aAAWA,EAAAA,EAAAA,GAAM,SAASA,EAAAA,EAAAA,GAAM,OAxB5B,WA0BFL,GAAMA,EAAEP,SAAWO,EAAEC,MAAMM,WAAaP,EAAEC,MAAMO,WA1B9C,qDA+BAR,GAAMA,EAAEP,SAAWO,EAAEC,MAAMM,WAAaP,EAAEC,MAAMQ,cA/BhD,4BAsCTT,GACAA,EAAER,UACD,wCAEYQ,EAAEC,MAAMS,0DA1CZ,KA+CTV,GACAA,EAAEnB,aACD,0DAjDQ,KAuDPa,GAAa,OAAO,MAAP,sBAAH,kDAKJM,GAAwB,eAAlBA,EAAEpB,aAA+ByB,EAAAA,EAAAA,GAAM,KAAQ,GALjD,+KAmBZL,GACkB,aAAlBA,EAAEpB,aACD,qGArBW,KA4BVe,GAAa,OAAO,MAAP,sBAAH,kDAKJK,GAAwB,eAAlBA,EAAEpB,aAA+ByB,EAAAA,EAAAA,GAAM,KAAQ,GALjD,2HAaEL,GAAKA,EAAEC,MAAMU,aAbf,qBAcFX,GAAKA,EAAEC,MAAMU,aAdX,gBAkBVf,GAAwB,OAAO,MAAP,sBAAH,uEAOXI,GAAMA,EAAEP,SAAWO,EAAEC,MAAMW,OAAS,eAPzB,+EAWTZ,GAAMA,EAAEP,SAAWO,EAAEC,MAAMS,QAAU,eAX5B,MAcvBV,GACkB,eAAlBA,EAAEpB,YACG,iCACoByB,EAAAA,EAAAA,GAAM,qHAO1B,oIAxBkB,KCrF3B,SAASQ,EAAT,GAA8E,IAAzD,WAACC,GAAa,EAAd,UAAqBC,KAAcC,GAAsB,EAC5E,MAAMC,GAAaC,EAAAA,EAAAA,QAAyB,OACtC,UAACC,EAAD,gBAAYC,IAAmBC,EAAAA,EAAAA,YAAWC,IAC1C,MAACC,EAAD,aAAQC,EAAR,SAAsBC,EAAtB,YAAgC7C,EAAhC,SAA6CY,KAAakC,GAC9DP,EAGIQ,EAAY,CAChBC,YAAaL,EACbM,mBAAoBL,EACpBM,kBAAmBL,EACnBrC,WAAYI,KACTkC,KACAV,GAECrC,GAAQoD,EAAAA,EAAAA,GAAgBJ,IACxB,aAACK,IAAgBC,EAAAA,EAAAA,IAAW,CAACrD,iBAAgB+C,GAAYhD,EAAOsC,IACtEiB,EAAAA,EAAAA,YAAU,KACRd,EAAgBzC,EAAhB,GAEC,CAACA,EAAMwD,aAAcxD,EAAMyD,aAAczD,EAAMiD,YAAaZ,EAAMqB,WAGrE,MAAMC,GAAcpB,EAAAA,EAAAA,QAAgD,CAAC,GAC/DqB,EA1ER,YAMG,IANsB,WACvBtB,EADuB,YAEvBqB,GAIC,EACD,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAsB,IAmC9D,OAjCAP,EAAAA,EAAAA,YAAU,KACR,MAAMQ,EAAU,CACdC,KAAM1B,EAAW2B,QAEjBC,WAAa,kBAAgBxC,EAAAA,EAAAA,GAAM,KACnCyC,UAAW,GAoBPC,EAAW,IAAIC,sBAjB0BC,IAC7CA,EAAQC,SAAQC,IACd,MAAM,OAACC,GAAUD,GACX,IAACnE,GAAQoE,EAAuBC,QACjCrE,IAIAmE,EAAMG,eAKXd,GAAgBe,GAAQA,EAAKC,QAAOC,GAAKA,IAAMzE,MAJ7CwD,GAAgBe,GAAQA,EAAKG,OAAO,CAAC1E,MAIvC,GAZF,GAgBkD0D,GAKpD,OAJAiB,OAAOC,OAAOtB,EAAYM,SAAW,CAAC,GAAGM,SACvCW,GAAWA,GAAWd,EAASe,QAAQD,KAGlC,IAAMd,EAASgB,YAAtB,GACC,CAAC9C,EAAYqB,IAETC,CACR,CA+BsByB,CAAgB,CAAC/C,aAAYqB,gBAC5C2B,GAAoBC,EAAAA,EAAAA,UAAQ,KAEhC,MAAMC,EAAa,IAAIxF,EAAMyF,YAAYC,KAAI3F,GAAQA,EAAKM,MAK1D,OAJ2BuD,EAAa+B,MACtC,CAACC,EAAGC,IAAML,EAAWM,QAAQF,GAAKJ,EAAWM,QAAQD,KAG7BH,KAAIrF,IAC5B,MAAMN,EAAOC,EAAMyF,WAAWM,QAAQ1F,GACtC,MAAO,CACLuC,MAAOvC,EACP2F,MAAOjG,EAAKsC,MAAMqB,SAClB7C,SAAUd,EAAKsC,MAAMxB,SAHvB,GAFF,GAQC,CAACb,EAAMyF,WAAY7B,IAEtB,OACE,QAACqC,EAAD,YACE,QAACC,EAAD,IACM7C,EACJpD,YAAaA,EACbkC,WAAYA,EACZC,UAAWA,EACXjC,IAAKmC,EALP,SAOG,IAAItC,EAAMyF,YAAYC,KAAI3F,IACzB,QAACmB,EAAD,CAEEnB,KAAMA,EACNC,MAAOA,EACPC,YAAaA,EACbC,YAA6B,eAAhBD,GAAgC2D,EAAauC,SAASpG,EAAKM,KACxEF,IAAK+E,GAAYvB,EAAYM,QAAQlE,EAAKM,KAAO6E,GAL5CnF,EAAKM,SAUC,eAAhBJ,GAAgCqF,EAAkBc,OAAS,IAC1D,QAAC,IAAD,CACErC,QAASuB,EACT1C,MAAO,IAAI5C,EAAMqG,iBAAiBC,cAAc,GAChDxD,SAAUyD,GAAOvG,EAAMwG,eAAeD,EAAI3D,OAC1CnC,WAAYI,EACZ4F,UAAU,aACVC,KAAK,KACLC,OAAQ,EACRC,QAAS,QAAEvE,MAAOwE,EAAc1G,IAAK2G,GAA5B,SACP,QAACC,EAAD,CACE5G,IAAK2G,KACDD,EACJG,YAAU,EACVC,aAAa,EACbC,MAAM,QAAC,KAAD,IACN,cAAYC,EAAAA,EAAAA,GAAE,cAPT,MAclB,CAtFQjF,EAAAA,YAAAA,cAwFT,MAAMkF,EAAqBC,GAA+B,IAAIC,EAAAA,GAAeD,GAMtE,SAASE,EAAT,GAAkD,IAAjC,MAACC,KAAUnF,GAAsB,EAIvD,MAAMoD,GAAagC,EAAAA,EAAAA,IAAc,CAACD,WAAUnF,GAAQ+E,GAO9CM,GAAcnC,EAAAA,EAAAA,UAClB,IACE,IAAIE,GACDZ,QAAO9E,IAASA,EAAKsC,MAAMsF,SAC3BjC,KAAI,QAAC,IAACrF,EAAKgC,MAAOuF,GAAd,QAA8B,CAACvH,SAAQuH,EAAvC,KACT,CAACnC,IAOGjC,GAAe+B,EAAAA,EAAAA,UACnB,IAAMmC,EAAY7C,QAAO9E,GAAQA,EAAKc,WAAU6E,KAAI3F,GAAQA,EAAKM,OACjE,CAACqH,IAGH,OACE,QAACxF,EAAD,CAAasF,MAAOE,EAAalE,aAAcA,KAAkBnB,EAAjE,SACGtC,IAAQ,QAAC,KAAD,IAAUA,KAGxB,CAjCewH,EAAAA,YAAAA,UAmChB,MAAMtB,GAAmB,OAAO,MAAP,qBAAH,4CAIhBC,GAAc,OAAO,KAAP,CAAc9E,kBAAmB1B,EAAjC,oBAAH,yFAWb2B,GACkB,eAAlBA,EAAEpB,YACG,qFAGMyB,EAAAA,EAAAA,GAAM,iBACVL,EAAEc,YAAe,4BAA2Bd,EAAEC,MAAMuG,oBAEtD,oIAKgBnG,EAAAA,EAAAA,GAAM,iBACpBL,EAAEc,YAAe,2BAA0Bd,EAAEC,MAAMuG,qBAzB7C,KA6BXd,GAAsB,OAAOe,EAAAA,EAAP,qBAAH,qCAGbpG,EAAAA,EAAAA,GAAM,KAHO,kBAIPA,EAAAA,EAAAA,GAAM,GAJC,mBAKNA,EAAAA,EAAAA,GAAM,GALA,K,4EC/NzB,MAAM0F,EAAqBC,GAA+B,IAAIC,EAAAA,GAAeD,GAUtE,SAASU,EAAU1F,GACxB,MACEG,WAAW,YAACvC,EAAD,MAAcuH,GADrB,aAEJQ,IACEtF,EAAAA,EAAAA,YAAWC,GAGT8C,GAAagC,EAAAA,EAAAA,IAAc,CAACD,WAAUnF,GAAQ+E,EAAmB,CACrEa,0BAA0B,IAEtBC,EAAgBF,EAClBvC,EAAWM,QAAQiC,EAAa/E,aAChC,KAEJ,OAAK+E,GAKH,QAACG,EAAD,IACM9F,EACJrC,MAAOgI,EACP/H,YAAaA,EACbI,IAAK2H,GAAc/E,aAElBiF,GAAe7F,MAAMqB,UAVjB,IAaV,CASD,SAASyE,EAAT,GAAsF,IAApE,MAACnI,EAAD,YAAQC,EAAR,UAAqBmC,EAArB,SAAgCsB,KAAarB,GAAuB,EACpF,MAAMlC,GAAMoC,EAAAA,EAAAA,QAAuB,OAC7B,cAAC6F,IAAiBC,EAAAA,EAAAA,IAAYhG,EAAOrC,EAAOG,GAElD,OACE,QAACmI,EAAD,IACMF,EACJnI,YAAaA,EACbmC,UAAWA,EACXjC,IAAKA,EAJP,SAMGuD,GAGN,CAnDeqE,EAAAA,YAAAA,YAqCPI,EAAAA,YAAAA,WAgBT,MAAMG,GAAe,OAAO,MAAP,CAAelH,kBAAmB1B,EAAlC,oBAAH,kBAGC2B,GAAKA,EAAEC,MAAMK,cAHd,KAKdN,GAAwB,eAAlBA,EAAEpB,YAAgC,gBAAkB,gBAL5C,mDASMoB,GAAKA,EAAEC,MAAMU,aATnB,eAUVX,GAAKA,EAAEC,MAAMU,aAVH,0BC7DZuG,EAAQC,EAAAA,GAiCD7F,GAAc8F,EAAAA,EAAAA,eAA0B,CACnDjG,UAAW,CAACvC,YAAa,aAAcyD,SAAU,IACjDjB,gBAAiB,SAQZ,SAASiG,EAAT,GAIU,IAJyB,YACxCzI,EAAc,aAD0B,UAExCmC,KACGC,GACY,EACf,MAAO2F,EAAcvF,IAAmBqB,EAAAA,EAAAA,YAExC,OACE,QAACnB,EAAYgG,SAAb,CACE/F,MAAO,CAACJ,UAAW,IAAIH,EAAOpC,eAAc+H,eAAcvF,mBAD5D,UAGE,QAACmG,EAAD,CAAU3I,YAAaA,EAAamC,UAAWA,EAA/C,SACGC,EAAMqB,YAId,CAhBegF,EAAAA,YAAAA,OAkBhB,MAAME,GAAW,OAAO,MAAP,CAAexH,kBAAmB1B,EAAlC,oBAAH,gCAIM2B,GAAwB,eAAlBA,EAAEpB,YAA+B,SAAW,OAJxD,iBAOVoB,GACkB,aAAlBA,EAAEpB,aACD,4DATS,I","sources":["webpack:///./app/components/tabs/utils.tsx","webpack:///./app/components/tabs/tab.tsx","webpack:///./app/components/tabs/tabList.tsx","webpack:///./app/components/tabs/tabPanels.tsx","webpack:///./app/components/tabs/index.tsx"],"sourcesContent":["import isPropValid from '@emotion/is-prop-valid';\n\nexport const tabsShouldForwardProp = (prop: string) =>\n  typeof prop === 'string' && isPropValid(prop) && prop !== 'orientation';\n","import {forwardRef} from 'react';\nimport styled from '@emotion/styled';\nimport {useTab} from '@react-aria/tabs';\nimport {mergeProps, useObjectRef} from '@react-aria/utils';\nimport {TabListState} from '@react-stately/tabs';\nimport {Node, Orientation} from '@react-types/shared';\n\nimport space from 'sentry/styles/space';\n\nimport {tabsShouldForwardProp} from './utils';\n\ninterface TabProps {\n  item: Node<any>;\n  orientation: Orientation;\n  /**\n   * Whether this tab is overflowing the TabList container. If so, the tab\n   * needs to be visually hidden. Users can instead select it via an overflow\n   * menu.\n   */\n  overflowing: boolean;\n  state: TabListState<any>;\n}\n\n/**\n * Renders a single tab item. This should not be imported directly into any\n * page/view â€“ it's only meant to be used by <TabsList />. See the correct\n * usage in tabs.stories.js\n */\nfunction BaseTab(\n  {item, state, orientation, overflowing}: TabProps,\n  forwardedRef: React.ForwardedRef<HTMLLIElement>\n) {\n  const ref = useObjectRef(forwardedRef);\n\n  const {key, rendered} = item;\n  const {tabProps, isSelected, isDisabled} = useTab({key}, state, ref);\n\n  return (\n    <TabWrap\n      {...mergeProps(tabProps)}\n      disabled={isDisabled}\n      selected={isSelected}\n      overflowing={overflowing}\n      orientation={orientation}\n      ref={ref}\n    >\n      <HoverLayer orientation={orientation} />\n      <FocusLayer orientation={orientation} />\n      {rendered}\n      <TabSelectionIndicator orientation={orientation} selected={isSelected} />\n    </TabWrap>\n  );\n}\n\nexport const Tab = forwardRef(BaseTab);\n\nconst TabWrap = styled('li', {shouldForwardProp: tabsShouldForwardProp})<{\n  disabled: boolean;\n  orientation: Orientation;\n  overflowing: boolean;\n  selected: boolean;\n}>`\n  display: flex;\n  align-items: center;\n  position: relative;\n  height: calc(\n    ${p => p.theme.form.sm.height}px +\n      ${p => (p.orientation === 'horizontal' ? space(0.75) : 0)}\n  );\n  border-radius: ${p => p.theme.borderRadius};\n  transform: translateY(1px);\n\n  ${p =>\n    p.orientation === 'horizontal'\n      ? `\n        /* Extra padding + negative margin trick, to expand click area */\n        padding: ${space(0.75)} ${space(1)} ${space(1.5)};\n        margin-left: -${space(1)};\n        margin-right: -${space(1)};\n      `\n      : `padding: ${space(0.75)} ${space(2)};`};\n\n  color: ${p => (p.selected ? p.theme.activeText : p.theme.textColor)};\n  white-space: nowrap;\n  cursor: pointer;\n\n  &:hover {\n    color: ${p => (p.selected ? p.theme.activeText : p.theme.headingColor)};\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  ${p =>\n    p.disabled &&\n    `\n      &, &:hover {\n        color: ${p.theme.subText};\n        pointer-events: none;\n      }\n    `}\n\n  ${p =>\n    p.overflowing &&\n    `\n      opacity: 0;\n      pointer-events: none;\n    `}\n`;\n\nconst HoverLayer = styled('div')<{orientation: Orientation}>`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: ${p => (p.orientation === 'horizontal' ? space(0.75) : 0)};\n\n  pointer-events: none;\n  background-color: currentcolor;\n  border-radius: inherit;\n  z-index: 0;\n\n  opacity: 0;\n  transition: opacity 0.1s ease-out;\n\n  li:hover:not(.focus-visible) > & {\n    opacity: 0.06;\n  }\n\n  ${p =>\n    p.orientation === 'vertical' &&\n    `\n      li[aria-selected='true']:not(.focus-visible) > & {\n        opacity: 0.06;\n      }\n    `}\n`;\n\nconst FocusLayer = styled('div')<{orientation: Orientation}>`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: ${p => (p.orientation === 'horizontal' ? space(0.75) : 0)};\n\n  pointer-events: none;\n  border-radius: inherit;\n  z-index: 0;\n  transition: box-shadow 0.1s ease-out;\n\n  li.focus-visible > & {\n    box-shadow: ${p => p.theme.focusBorder} 0 0 0 1px,\n      inset ${p => p.theme.focusBorder} 0 0 0 1px;\n  }\n`;\n\nconst TabSelectionIndicator = styled('div')<{\n  orientation: Orientation;\n  selected: boolean;\n}>`\n  position: absolute;\n  border-radius: 2px;\n  pointer-events: none;\n  background: ${p => (p.selected ? p.theme.active : 'transparent')};\n  transition: background 0.1s ease-out;\n\n  li[aria-disabled='true'] & {\n    background: ${p => (p.selected ? p.theme.subText : 'transparent')};\n  }\n\n  ${p =>\n    p.orientation === 'horizontal'\n      ? `\n        width: calc(100% - ${space(2)});\n        height: 3px;\n\n        bottom: 0;\n        left: 50%;\n        transform: translateX(-50%);\n      `\n      : `\n        width: 3px;\n        height: 50%;\n\n        left: 0;\n        top: 50%;\n        transform: translateY(-50%);\n      `};\n`;\n","import {useContext, useEffect, useMemo, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\nimport {AriaTabListProps, useTabList} from '@react-aria/tabs';\nimport {Item, useCollection} from '@react-stately/collections';\nimport {ListCollection} from '@react-stately/list';\nimport {TabListProps as TabListStateProps, useTabListState} from '@react-stately/tabs';\nimport {Node, Orientation} from '@react-types/shared';\n\nimport CompactSelect from 'sentry/components/compactSelect';\nimport DropdownButton from 'sentry/components/dropdownButton';\nimport {IconEllipsis} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nimport {TabsContext} from './index';\nimport {Tab} from './tab';\nimport {tabsShouldForwardProp} from './utils';\n\n/**\n * Uses IntersectionObserver API to detect overflowing tabs. Returns an array\n * containing of keys of overflowing tabs.\n */\nfunction useOverflowTabs({\n  tabListRef,\n  tabItemsRef,\n}: {\n  tabItemsRef: React.RefObject<Record<React.Key, HTMLLIElement | null>>;\n  tabListRef: React.RefObject<HTMLUListElement>;\n}) {\n  const [overflowTabs, setOverflowTabs] = useState<React.Key[]>([]);\n\n  useEffect(() => {\n    const options = {\n      root: tabListRef.current,\n      // Nagative right margin to account for overflow menu's trigger button\n      rootMargin: `0px -42px 1px ${space(1)}`,\n      threshold: 1,\n    };\n\n    const callback: IntersectionObserverCallback = entries => {\n      entries.forEach(entry => {\n        const {target} = entry;\n        const {key} = (target as HTMLElement).dataset;\n        if (!key) {\n          return;\n        }\n\n        if (!entry.isIntersecting) {\n          setOverflowTabs(prev => prev.concat([key]));\n          return;\n        }\n\n        setOverflowTabs(prev => prev.filter(k => k !== key));\n      });\n    };\n\n    const observer = new IntersectionObserver(callback, options);\n    Object.values(tabItemsRef.current ?? {}).forEach(\n      element => element && observer.observe(element)\n    );\n\n    return () => observer.disconnect();\n  }, [tabListRef, tabItemsRef]);\n\n  return overflowTabs;\n}\n\ninterface TabListProps extends TabListStateProps<any>, AriaTabListProps<any> {\n  className?: string;\n  hideBorder?: boolean;\n}\n\nfunction BaseTabList({hideBorder = false, className, ...props}: TabListProps) {\n  const tabListRef = useRef<HTMLUListElement>(null);\n  const {rootProps, setTabListState} = useContext(TabsContext);\n  const {value, defaultValue, onChange, orientation, disabled, ...otherRootProps} =\n    rootProps;\n\n  // Load up list state\n  const ariaProps = {\n    selectedKey: value,\n    defaultSelectedKey: defaultValue,\n    onSelectionChange: onChange,\n    isDisabled: disabled,\n    ...otherRootProps,\n    ...props,\n  };\n  const state = useTabListState(ariaProps);\n  const {tabListProps} = useTabList({orientation, ...ariaProps}, state, tabListRef);\n  useEffect(() => {\n    setTabListState(state);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.disabledKeys, state.selectedItem, state.selectedKey, props.children]);\n\n  // Detect tabs that overflow from the wrapper and put them in an overflow menu\n  const tabItemsRef = useRef<Record<React.Key, HTMLLIElement | null>>({});\n  const overflowTabs = useOverflowTabs({tabListRef, tabItemsRef});\n  const overflowMenuItems = useMemo(() => {\n    // Sort overflow items in the order that they appear in TabList\n    const sortedKeys = [...state.collection].map(item => item.key);\n    const sortedOverflowTabs = overflowTabs.sort(\n      (a, b) => sortedKeys.indexOf(a) - sortedKeys.indexOf(b)\n    );\n\n    return sortedOverflowTabs.map(key => {\n      const item = state.collection.getItem(key);\n      return {\n        value: key,\n        label: item.props.children,\n        disabled: item.props.disabled,\n      };\n    });\n  }, [state.collection, overflowTabs]);\n\n  return (\n    <TabListOuterWrap>\n      <TabListWrap\n        {...tabListProps}\n        orientation={orientation}\n        hideBorder={hideBorder}\n        className={className}\n        ref={tabListRef}\n      >\n        {[...state.collection].map(item => (\n          <Tab\n            key={item.key}\n            item={item}\n            state={state}\n            orientation={orientation}\n            overflowing={orientation === 'horizontal' && overflowTabs.includes(item.key)}\n            ref={element => (tabItemsRef.current[item.key] = element)}\n          />\n        ))}\n      </TabListWrap>\n\n      {orientation === 'horizontal' && overflowMenuItems.length > 0 && (\n        <CompactSelect\n          options={overflowMenuItems}\n          value={[...state.selectionManager.selectedKeys][0]}\n          onChange={opt => state.setSelectedKey(opt.value)}\n          isDisabled={disabled}\n          placement=\"bottom end\"\n          size=\"sm\"\n          offset={4}\n          trigger={({props: triggerProps, ref: triggerRef}) => (\n            <OverflowMenuTrigger\n              ref={triggerRef}\n              {...triggerProps}\n              borderless\n              showChevron={false}\n              icon={<IconEllipsis />}\n              aria-label={t('More tabs')}\n            />\n          )}\n        />\n      )}\n    </TabListOuterWrap>\n  );\n}\n\nconst collectionFactory = (nodes: Iterable<Node<any>>) => new ListCollection(nodes);\n\n/**\n * To be used as a direct child of the <Tabs /> component. See example usage\n * in tabs.stories.js\n */\nexport function TabList({items, ...props}: TabListProps) {\n  /**\n   * Initial, unfiltered list of tab items.\n   */\n  const collection = useCollection({items, ...props}, collectionFactory);\n\n  /**\n   * Filtered list of items with hidden items (those with a `disbled` prop)\n   * removed. The `hidden` prop is useful for hiding tabs based on some\n   * conditions.\n   */\n  const parsedItems = useMemo(\n    () =>\n      [...collection]\n        .filter(item => !item.props.hidden)\n        .map(({key, props: itemProps}) => ({key, ...itemProps})),\n    [collection]\n  );\n\n  /**\n   * List of keys of disabled items (those with a `disbled` prop) to be passed\n   * into `BaseTabList`.\n   */\n  const disabledKeys = useMemo(\n    () => parsedItems.filter(item => item.disabled).map(item => item.key),\n    [parsedItems]\n  );\n\n  return (\n    <BaseTabList items={parsedItems} disabledKeys={disabledKeys} {...props}>\n      {item => <Item {...item} />}\n    </BaseTabList>\n  );\n}\n\nconst TabListOuterWrap = styled('div')`\n  position: relative;\n`;\n\nconst TabListWrap = styled('ul', {shouldForwardProp: tabsShouldForwardProp})<{\n  hideBorder: boolean;\n  orientation: Orientation;\n}>`\n  position: relative;\n  display: grid;\n  padding: 0;\n  margin: 0;\n  list-style-type: none;\n  flex-shrink: 0;\n\n  ${p =>\n    p.orientation === 'horizontal'\n      ? `\n        grid-auto-flow: column;\n        justify-content: start;\n        gap: ${space(2)};\n        ${!p.hideBorder && `border-bottom: solid 1px ${p.theme.border};`}\n      `\n      : `\n        height: 100%;\n        grid-auto-flow: row;\n        align-content: start;\n        gap: 1px;\n        padding-right: ${space(2)};\n        ${!p.hideBorder && `border-right: solid 1px ${p.theme.border};`}\n      `};\n`;\n\nconst OverflowMenuTrigger = styled(DropdownButton)`\n  position: absolute;\n  right: 0;\n  bottom: ${space(0.75)};\n  padding-left: ${space(1)};\n  padding-right: ${space(1)};\n`;\n","import {useContext, useRef} from 'react';\nimport styled from '@emotion/styled';\nimport {AriaTabPanelProps, useTabPanel} from '@react-aria/tabs';\nimport {useCollection} from '@react-stately/collections';\nimport {ListCollection} from '@react-stately/list';\nimport {TabListState} from '@react-stately/tabs';\nimport {CollectionBase, Node, Orientation} from '@react-types/shared';\n\nimport {TabsContext} from './index';\nimport {tabsShouldForwardProp} from './utils';\n\nconst collectionFactory = (nodes: Iterable<Node<any>>) => new ListCollection(nodes);\n\ninterface TabPanelsProps extends AriaTabPanelProps, CollectionBase<any> {\n  className?: string;\n}\n\n/**\n * To be used as a direct child of the <Tabs /> component. See example usage\n * in tabs.stories.js\n */\nexport function TabPanels(props: TabPanelsProps) {\n  const {\n    rootProps: {orientation, items},\n    tabListState,\n  } = useContext(TabsContext);\n\n  // Parse child tab panels from props and identify the selected panel\n  const collection = useCollection({items, ...props}, collectionFactory, {\n    suppressTextValueWarning: true,\n  });\n  const selectedPanel = tabListState\n    ? collection.getItem(tabListState.selectedKey)\n    : null;\n\n  if (!tabListState) {\n    return null;\n  }\n\n  return (\n    <TabPanel\n      {...props}\n      state={tabListState}\n      orientation={orientation}\n      key={tabListState?.selectedKey}\n    >\n      {selectedPanel?.props.children}\n    </TabPanel>\n  );\n}\n\ninterface TabPanelProps extends AriaTabPanelProps {\n  orientation: Orientation;\n  state: TabListState<any>;\n  children?: React.ReactNode;\n  className?: string;\n}\n\nfunction TabPanel({state, orientation, className, children, ...props}: TabPanelProps) {\n  const ref = useRef<HTMLDivElement>(null);\n  const {tabPanelProps} = useTabPanel(props, state, ref);\n\n  return (\n    <TabPanelWrap\n      {...tabPanelProps}\n      orientation={orientation}\n      className={className}\n      ref={ref}\n    >\n      {children}\n    </TabPanelWrap>\n  );\n}\n\nconst TabPanelWrap = styled('div', {shouldForwardProp: tabsShouldForwardProp})<{\n  orientation: Orientation;\n}>`\n  border-radius: ${p => p.theme.borderRadius};\n\n  ${p => (p.orientation === 'horizontal' ? `height: 100%;` : `width: 100%;`)};\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: inset ${p => p.theme.focusBorder} 0 0 0 1px,\n      ${p => p.theme.focusBorder} 0 0 0 1px;\n    z-index: 1;\n  }\n`;\n","import 'intersection-observer'; // polyfill\n\nimport {createContext, useState} from 'react';\nimport styled from '@emotion/styled';\nimport {AriaTabListProps} from '@react-aria/tabs';\nimport {Item} from '@react-stately/collections';\nimport {TabListProps, TabListState} from '@react-stately/tabs';\nimport {ItemProps, Orientation} from '@react-types/shared';\n\nimport {TabList} from './tabList';\nimport {TabPanels} from './tabPanels';\nimport {tabsShouldForwardProp} from './utils';\n\nconst _Item = Item as (\n  props: ItemProps<any> & {disabled?: boolean; hidden?: boolean}\n) => JSX.Element;\nexport {_Item as Item, TabList, TabPanels};\n\nexport interface TabsProps<T>\n  extends Omit<TabListProps<any>, 'children'>,\n    Omit<AriaTabListProps<any>, 'children'> {\n  children?: React.ReactNode;\n  className?: string;\n  /**\n   * [Uncontrolled] Default selected tab. Must match the `key` prop on the\n   * selected tab item.\n   */\n  defaultValue?: T;\n  disabled?: boolean;\n  /**\n   * Callback when the selected tab changes.\n   */\n  onChange?: (key: T) => void;\n  /**\n   * [Controlled] Selected tab . Must match the `key` prop on the selected tab\n   * item.\n   */\n  value?: T;\n}\n\ninterface TabContext {\n  rootProps: TabsProps<any> & {orientation: Orientation};\n  setTabListState: (state: TabListState<any>) => void;\n  tabListState?: TabListState<any>;\n}\n\nexport const TabsContext = createContext<TabContext>({\n  rootProps: {orientation: 'horizontal', children: []},\n  setTabListState: () => {},\n});\n\n/**\n * Root tabs component. Provides the necessary data (via React context) for\n * child components (TabList and TabPanels) to work together. See example\n * usage in tabs.stories.js\n */\nexport function Tabs<T extends React.Key>({\n  orientation = 'horizontal',\n  className,\n  ...props\n}: TabsProps<T>) {\n  const [tabListState, setTabListState] = useState<TabListState<any>>();\n\n  return (\n    <TabsContext.Provider\n      value={{rootProps: {...props, orientation}, tabListState, setTabListState}}\n    >\n      <TabsWrap orientation={orientation} className={className}>\n        {props.children}\n      </TabsWrap>\n    </TabsContext.Provider>\n  );\n}\n\nconst TabsWrap = styled('div', {shouldForwardProp: tabsShouldForwardProp})<{\n  orientation: Orientation;\n}>`\n  display: flex;\n  flex-direction: ${p => (p.orientation === 'horizontal' ? 'column' : 'row')};\n  flex-grow: 1;\n\n  ${p =>\n    p.orientation === 'vertical' &&\n    `\n      height: 100%;\n      align-items: stretch;\n    `};\n`;\n"],"names":["tabsShouldForwardProp","prop","isPropValid","BaseTab","forwardedRef","item","state","orientation","overflowing","ref","useObjectRef","key","rendered","tabProps","isSelected","isDisabled","useTab","TabWrap","mergeProps","disabled","selected","HoverLayer","FocusLayer","TabSelectionIndicator","Tab","forwardRef","shouldForwardProp","p","theme","form","sm","height","space","borderRadius","activeText","textColor","headingColor","subText","focusBorder","active","BaseTabList","hideBorder","className","props","tabListRef","useRef","rootProps","setTabListState","useContext","TabsContext","value","defaultValue","onChange","otherRootProps","ariaProps","selectedKey","defaultSelectedKey","onSelectionChange","useTabListState","tabListProps","useTabList","useEffect","disabledKeys","selectedItem","children","tabItemsRef","overflowTabs","setOverflowTabs","useState","options","root","current","rootMargin","threshold","observer","IntersectionObserver","entries","forEach","entry","target","dataset","isIntersecting","prev","filter","k","concat","Object","values","element","observe","disconnect","useOverflowTabs","overflowMenuItems","useMemo","sortedKeys","collection","map","sort","a","b","indexOf","getItem","label","TabListOuterWrap","TabListWrap","includes","length","selectionManager","selectedKeys","opt","setSelectedKey","placement","size","offset","trigger","triggerProps","triggerRef","OverflowMenuTrigger","borderless","showChevron","icon","t","collectionFactory","nodes","ListCollection","TabList","items","useCollection","parsedItems","hidden","itemProps","border","DropdownButton","TabPanels","tabListState","suppressTextValueWarning","selectedPanel","TabPanel","tabPanelProps","useTabPanel","TabPanelWrap","_Item","Item","createContext","Tabs","Provider","TabsWrap"],"sourceRoot":""}