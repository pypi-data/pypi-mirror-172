{"version":3,"file":"chunks/app_data_forms_accountEmails_tsx-app_views_settings_components_settingsLayout_tsx-node_module-f8cead.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/breadcrumbDropdown.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/crumb.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/divider.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/findFirstRouteWithoutRouteParam.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/menuItem.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/organizationCrumb.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/projectCrumb.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/teamCrumb.tsx","webpack:///./app/views/settings/components/settingsBreadcrumb/index.tsx","webpack:///./app/views/settings/components/settingsSearch/index.tsx","webpack:///./app/views/settings/components/settingsLayout.tsx","webpack:///../node_modules/lodash/flattenDepth.js"],"sourcesContent":["import {JsonFormObject} from 'sentry/components/forms/types';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Add Secondary Emails',\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: 'Additional Email',\n        placeholder: 'e.g. secondary@example.com',\n        help: 'Designate an alternative email for this account',\n        showReturnButton: true,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import {PlainRoute} from 'react-router';\nimport {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: PlainRoute[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import {Component} from 'react';\n\nimport DropdownAutoCompleteMenu from 'sentry/components/dropdownAutoComplete/menu';\nimport {Item} from 'sentry/components/dropdownAutoComplete/types';\nimport Crumb from 'sentry/views/settings/components/settingsBreadcrumb/crumb';\nimport Divider from 'sentry/views/settings/components/settingsBreadcrumb/divider';\n\nimport {RouteWithName} from './types';\n\nconst EXIT_DELAY = 0;\n\ninterface AdditionalDropdownProps\n  extends Pick<\n    React.ComponentProps<typeof DropdownAutoCompleteMenu>,\n    'onChange' | 'busyItemsStillVisible'\n  > {}\n\nexport interface BreadcrumbDropdownProps extends AdditionalDropdownProps {\n  items: Item[];\n  name: React.ReactNode;\n  onSelect: (item: Item) => void;\n  route: RouteWithName;\n  enterDelay?: number;\n  hasMenu?: boolean;\n  isLast?: boolean;\n}\n\ntype State = {\n  isOpen: boolean;\n};\n\nclass BreadcrumbDropdown extends Component<BreadcrumbDropdownProps, State> {\n  state: State = {\n    isOpen: false,\n  };\n\n  componentWillUnmount() {\n    window.clearTimeout(this.enteringTimeout);\n    window.clearTimeout(this.leavingTimeout);\n  }\n\n  enteringTimeout: number | undefined = undefined;\n  leavingTimeout: number | undefined = undefined;\n\n  open = () => {\n    this.setState({isOpen: true});\n  };\n\n  close = () => {\n    this.setState({isOpen: false});\n  };\n\n  handleStateChange = () => {};\n\n  // Adds a delay when mouse hovers on actor (in this case the breadcrumb)\n  handleMouseEnterActor = () => {\n    window.clearTimeout(this.leavingTimeout);\n    window.clearTimeout(this.enteringTimeout);\n\n    this.enteringTimeout = window.setTimeout(\n      () => this.open(),\n      this.props.enterDelay ?? 0\n    );\n  };\n\n  // handles mouseEnter event on actor and menu, should clear the leaving timeout and keep menu open\n  handleMouseEnter = () => {\n    window.clearTimeout(this.leavingTimeout);\n    window.clearTimeout(this.enteringTimeout);\n    this.open();\n  };\n\n  // handles mouseLeave event on actor and menu, adds a timeout before updating state to account for\n  // mouseLeave into\n  handleMouseLeave = () => {\n    window.clearTimeout(this.enteringTimeout);\n    this.leavingTimeout = window.setTimeout(() => this.close(), EXIT_DELAY);\n  };\n\n  // Close immediately when actor is clicked clicked\n  handleClickActor = () => {\n    this.close();\n  };\n\n  // Close immediately when clicked outside\n  handleClose = () => {\n    this.close();\n  };\n\n  render() {\n    const {hasMenu, route, isLast, name, items, onSelect, ...dropdownProps} = this.props;\n\n    return (\n      <DropdownAutoCompleteMenu\n        blendCorner={false}\n        onOpen={this.handleMouseEnter}\n        onClose={this.close}\n        isOpen={this.state.isOpen}\n        menuProps={{\n          onMouseEnter: this.handleMouseEnter,\n          onMouseLeave: this.handleMouseLeave,\n        }}\n        items={items}\n        onSelect={onSelect}\n        virtualizedHeight={41}\n        {...dropdownProps}\n      >\n        {({getActorProps, actions, isOpen}) => (\n          <Crumb\n            {...getActorProps({\n              onClick: this.handleClickActor.bind(this, actions),\n              onMouseEnter: this.handleMouseEnterActor.bind(this, actions),\n              onMouseLeave: this.handleMouseLeave.bind(this, actions),\n            })}\n          >\n            <span>{name || route.name} </span>\n            <Divider isHover={hasMenu && isOpen} isLast={isLast} />\n          </Crumb>\n        )}\n      </DropdownAutoCompleteMenu>\n    );\n  }\n}\n\nexport default BreadcrumbDropdown;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\nconst Crumb = styled('div')`\n  display: flex;\n  align-items: center;\n  position: relative;\n  font-size: 18px;\n  color: ${p => p.theme.subText};\n  padding-right: ${space(1)};\n  cursor: pointer;\n  white-space: nowrap;\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport default Crumb;\n","import styled from '@emotion/styled';\n\nimport {IconChevron} from 'sentry/icons';\n\ntype Props = {\n  isHover?: boolean;\n  isLast?: boolean;\n};\n\nconst Divider = ({isHover, isLast}: Props) =>\n  isLast ? null : (\n    <StyledDivider>\n      <StyledIconChevron direction={isHover ? 'down' : 'right'} size=\"14px\" />\n    </StyledDivider>\n  );\n\nconst StyledIconChevron = styled(IconChevron)`\n  display: block;\n`;\n\nconst StyledDivider = styled('span')`\n  display: inline-block;\n  margin-left: 6px;\n  color: ${p => p.theme.gray200};\n  position: relative;\n`;\n\nexport default Divider;\n","import {PlainRoute} from 'react-router';\n\n/**\n * For all routes with a `path`, find the first route without a route param (e.g. :apiKey)\n *\n * @param routes A list of react-router route objects\n * @param route If given, will only take into account routes between `route` and end of the routes list\n * @return Object Returns a react-router route object\n */\nexport default function findFirstRouteWithoutRouteParam(\n  routes: PlainRoute[],\n  route?: PlainRoute\n) {\n  const routeIndex = route !== undefined ? routes.indexOf(route) : -1;\n  const routesToSearch = route && routeIndex > -1 ? routes.slice(routeIndex) : routes;\n\n  return (\n    routesToSearch.filter(({path}) => !!path).find(({path}) => !path?.includes(':')) ||\n    route\n  );\n}\n","import styled from '@emotion/styled';\n\nconst MenuItem = styled('div')`\n  font-size: 14px;\n  ${p => p.theme.overflowEllipsis};\n`;\n\nexport default MenuItem;\n","import {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport IdBadge from 'sentry/components/idBadge';\nimport {Organization} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport withLatestContext from 'sentry/utils/withLatestContext';\nimport BreadcrumbDropdown from 'sentry/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';\nimport findFirstRouteWithoutRouteParam from 'sentry/views/settings/components/settingsBreadcrumb/findFirstRouteWithoutRouteParam';\nimport MenuItem from 'sentry/views/settings/components/settingsBreadcrumb/menuItem';\n\nimport {CrumbLink} from '.';\n\ntype Props = RouteComponentProps<{projectId?: string}, {}> & {\n  organization: Organization;\n  organizations: Organization[];\n};\n\nconst OrganizationCrumb = ({\n  organization,\n  organizations,\n  params,\n  routes,\n  route,\n  ...props\n}: Props) => {\n  const handleSelect = (item: {value: string}) => {\n    // If we are currently in a project context, and we're attempting to switch organizations,\n    // then we need to default to index route (e.g. `route`)\n    //\n    // Otherwise, find the last route without a router param\n    // e.g. if you are on API details, we want the API listing\n    // This fails if our route tree is not nested\n    const hasProjectParam = !!params.projectId;\n    let destination = hasProjectParam\n      ? route\n      : findFirstRouteWithoutRouteParam(routes.slice(routes.indexOf(route)));\n\n    // It's possible there is no route without route params (e.g. organization settings index),\n    // in which case, we can use the org settings index route (e.g. `route`)\n    if (!hasProjectParam && typeof destination === 'undefined') {\n      destination = route;\n    }\n\n    if (destination === undefined) {\n      return;\n    }\n\n    browserHistory.push(\n      recreateRoute(destination, {\n        routes,\n        params: {...params, orgId: item.value},\n      })\n    );\n  };\n\n  if (!organization) {\n    return null;\n  }\n\n  const hasMenu = organizations.length > 1;\n\n  return (\n    <BreadcrumbDropdown\n      name={\n        <CrumbLink\n          to={recreateRoute(route, {\n            routes,\n            params: {...params, orgId: organization.slug},\n          })}\n        >\n          <BadgeWrapper>\n            <IdBadge avatarSize={18} organization={organization} />\n          </BadgeWrapper>\n        </CrumbLink>\n      }\n      onSelect={handleSelect}\n      hasMenu={hasMenu}\n      route={route}\n      items={organizations.map((org, index) => ({\n        index,\n        value: org.slug,\n        label: (\n          <MenuItem>\n            <IdBadge organization={org} />\n          </MenuItem>\n        ),\n      }))}\n      {...props}\n    />\n  );\n};\n\nconst BadgeWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nexport {OrganizationCrumb};\nexport default withLatestContext(OrganizationCrumb);\n","import {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport IdBadge from 'sentry/components/idBadge';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\nimport withLatestContext from 'sentry/utils/withLatestContext';\nimport withProjects from 'sentry/utils/withProjects';\nimport BreadcrumbDropdown from 'sentry/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';\nimport findFirstRouteWithoutRouteParam from 'sentry/views/settings/components/settingsBreadcrumb/findFirstRouteWithoutRouteParam';\nimport MenuItem from 'sentry/views/settings/components/settingsBreadcrumb/menuItem';\n\nimport {CrumbLink} from '.';\n\ntype Props = RouteComponentProps<{projectId?: string}, {}> & {\n  organization: Organization;\n  project: Project;\n  projects: Project[];\n};\n\nconst ProjectCrumb = ({\n  organization: latestOrganization,\n  project: latestProject,\n  projects,\n  params,\n  routes,\n  route,\n  ...props\n}: Props) => {\n  const handleSelect = (item: {value: string}) => {\n    // We have to make exceptions for routes like \"Project Alerts Rule Edit\" or \"Client Key Details\"\n    // Since these models are project specific, we need to traverse up a route when switching projects\n    //\n    // we manipulate `routes` so that it doesn't include the current project's route\n    // which, unlike the org version, does not start with a route param\n    const returnTo = findFirstRouteWithoutRouteParam(\n      routes.slice(routes.indexOf(route) + 1),\n      route\n    );\n\n    if (returnTo === undefined) {\n      return;\n    }\n\n    browserHistory.push(\n      recreateRoute(returnTo, {routes, params: {...params, projectId: item.value}})\n    );\n  };\n\n  if (!latestOrganization) {\n    return null;\n  }\n  if (!projects) {\n    return null;\n  }\n\n  const hasMenu = projects && projects.length > 1;\n\n  return (\n    <BreadcrumbDropdown\n      hasMenu={hasMenu}\n      route={route}\n      name={\n        <ProjectName>\n          {!latestProject ? (\n            <LoadingIndicator mini />\n          ) : (\n            <CrumbLink\n              to={replaceRouterParams('/settings/:orgId/projects/:projectId/', {\n                orgId: latestOrganization.slug,\n                projectId: latestProject.slug,\n              })}\n            >\n              <IdBadge project={latestProject} avatarSize={18} disableLink />\n            </CrumbLink>\n          )}\n        </ProjectName>\n      }\n      onSelect={handleSelect}\n      items={projects.map((project, index) => ({\n        index,\n        value: project.slug,\n        label: (\n          <MenuItem>\n            <IdBadge\n              project={project}\n              avatarProps={{consistentWidth: true}}\n              avatarSize={18}\n              disableLink\n            />\n          </MenuItem>\n        ),\n      }))}\n      {...props}\n    />\n  );\n};\n\nexport {ProjectCrumb};\nexport default withProjects(withLatestContext(ProjectCrumb));\n\n// Set height of crumb because of spinner\nconst SPINNER_SIZE = '24px';\n\nconst ProjectName = styled('div')`\n  display: flex;\n\n  .loading {\n    width: ${SPINNER_SIZE};\n    height: ${SPINNER_SIZE};\n    margin: 0 ${space(0.25)} 0 0;\n  }\n`;\n","import {browserHistory, RouteComponentProps} from 'react-router';\nimport debounce from 'lodash/debounce';\n\nimport IdBadge from 'sentry/components/idBadge';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport useTeams from 'sentry/utils/useTeams';\nimport BreadcrumbDropdown from 'sentry/views/settings/components/settingsBreadcrumb/breadcrumbDropdown';\nimport MenuItem from 'sentry/views/settings/components/settingsBreadcrumb/menuItem';\n\nimport {CrumbLink} from '.';\n\ntype Props = RouteComponentProps<{teamId: string}, {}>;\n\nconst TeamCrumb = ({params, routes, route, ...props}: Props) => {\n  const {teams, onSearch, fetching} = useTeams();\n\n  const team = teams.find(({slug}) => slug === params.teamId);\n  const hasMenu = teams.length > 1;\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearch(e.target.value);\n  };\n  const debouncedHandleSearch = debounce(handleSearchChange, DEFAULT_DEBOUNCE_DURATION);\n\n  if (!team) {\n    return null;\n  }\n\n  return (\n    <BreadcrumbDropdown\n      name={\n        <CrumbLink\n          to={recreateRoute(route, {\n            routes,\n            params: {...params, teamId: team.slug},\n          })}\n        >\n          <IdBadge avatarSize={18} team={team} />\n        </CrumbLink>\n      }\n      onSelect={item => {\n        browserHistory.push(\n          recreateRoute('', {\n            routes,\n            params: {...params, teamId: item.value},\n          })\n        );\n      }}\n      hasMenu={hasMenu}\n      route={route}\n      items={teams.map((teamItem, index) => ({\n        index,\n        value: teamItem.slug,\n        label: (\n          <MenuItem>\n            <IdBadge team={teamItem} />\n          </MenuItem>\n        ),\n      }))}\n      onChange={debouncedHandleSearch}\n      busyItemsStillVisible={fetching}\n      {...props}\n    />\n  );\n};\n\nexport default TeamCrumb;\n","import styled from '@emotion/styled';\n\nimport Link from 'sentry/components/links/link';\nimport getRouteStringFromRoutes from 'sentry/utils/getRouteStringFromRoutes';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport Crumb from 'sentry/views/settings/components/settingsBreadcrumb/crumb';\nimport Divider from 'sentry/views/settings/components/settingsBreadcrumb/divider';\nimport OrganizationCrumb from 'sentry/views/settings/components/settingsBreadcrumb/organizationCrumb';\nimport ProjectCrumb from 'sentry/views/settings/components/settingsBreadcrumb/projectCrumb';\nimport TeamCrumb from 'sentry/views/settings/components/settingsBreadcrumb/teamCrumb';\n\nimport {useBreadcrumbsPathmap} from './context';\nimport {RouteWithName} from './types';\n\nconst MENUS = {\n  Organization: OrganizationCrumb,\n  Project: ProjectCrumb,\n  Team: TeamCrumb,\n} as const;\n\ntype Props = {\n  params: {[param: string]: string | undefined};\n  route: any;\n  routes: RouteWithName[];\n  className?: string;\n};\n\nfunction SettingsBreadcrumb({className, routes, params}: Props) {\n  const pathMap = useBreadcrumbsPathmap();\n\n  const lastRouteIndex = routes.map(r => !!r.name).lastIndexOf(true);\n\n  return (\n    <Breadcrumbs className={className}>\n      {routes.map((route, i) => {\n        if (!route.name) {\n          return null;\n        }\n        const pathTitle = pathMap[getRouteStringFromRoutes(routes.slice(0, i + 1))];\n        const isLast = i === lastRouteIndex;\n        const createMenu = MENUS[route.name];\n        const Menu = typeof createMenu === 'function' && createMenu;\n        const hasMenu = !!Menu;\n\n        const CrumbItem = hasMenu\n          ? Menu\n          : () => (\n              <Crumb>\n                <CrumbLink to={recreateRoute(route, {routes, params})}>\n                  {pathTitle || route.name}{' '}\n                </CrumbLink>\n                <Divider isLast={isLast} />\n              </Crumb>\n            );\n\n        return (\n          <CrumbItem\n            key={`${route.name}:${route.path}`}\n            routes={routes}\n            params={params}\n            route={route}\n            isLast={isLast}\n          />\n        );\n      })}\n    </Breadcrumbs>\n  );\n}\n\nexport default SettingsBreadcrumb;\n\nconst CrumbLink = styled(Link)`\n  display: block;\n\n  color: ${p => p.theme.subText};\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport {CrumbLink};\n\nconst Breadcrumbs = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n","import {useRef} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Search} from 'sentry/components/search';\nimport {IconSearch} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {useHotkeys} from 'sentry/utils/useHotkeys';\n\nconst MIN_SEARCH_LENGTH = 1;\nconst MAX_RESULTS = 10;\n\nfunction SettingsSearch() {\n  const searchInput = useRef<HTMLInputElement>(null);\n\n  useHotkeys([{match: '/', callback: () => searchInput.current?.focus()}], []);\n\n  return (\n    <Search\n      entryPoint=\"settings_search\"\n      minSearch={MIN_SEARCH_LENGTH}\n      maxResults={MAX_RESULTS}\n      renderInput={({getInputProps}) => (\n        <SearchInputWrapper>\n          <SearchInputIcon size=\"14px\" />\n          <SearchInput\n            {...getInputProps({type: 'text', placeholder: t('Search')})}\n            ref={searchInput}\n          />\n        </SearchInputWrapper>\n      )}\n    />\n  );\n}\n\nexport default SettingsSearch;\n\nconst SearchInputWrapper = styled('div')`\n  position: relative;\n`;\n\nconst SearchInputIcon = styled(IconSearch)`\n  color: ${p => p.theme.gray300};\n  position: absolute;\n  left: 10px;\n  top: 8px;\n`;\n\nconst SearchInput = styled('input')`\n  color: ${p => p.theme.formText};\n  background-color: ${p => p.theme.background};\n  transition: border-color 0.15s ease;\n  font-size: 14px;\n  width: 260px;\n  line-height: 1;\n  padding: 5px 8px 4px 28px;\n  border: 1px solid ${p => p.theme.border};\n  border-radius: 30px;\n  height: 28px;\n\n  box-shadow: inset ${p => p.theme.dropShadowLight};\n\n  &:focus {\n    outline: none;\n    border: 1px solid ${p => p.theme.border};\n  }\n\n  &::placeholder {\n    color: ${p => p.theme.formPlaceholder};\n  }\n`;\n","import {isValidElement, useEffect, useRef, useState} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {IconClose, IconMenu} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {fadeIn, slideInLeft} from 'sentry/styles/animations';\nimport {PageContent} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\n\nimport SettingsBreadcrumb from './settingsBreadcrumb';\nimport SettingsHeader from './settingsHeader';\nimport SettingsSearch from './settingsSearch';\n\ntype Props = {\n  children: React.ReactNode;\n  renderNavigation?: (opts: {isMobileNavVisible: boolean}) => React.ReactNode;\n} & RouteComponentProps<{}, {}>;\n\nfunction SettingsLayout(props: Props) {\n  // This is used when the screen is small enough that the navigation should be\n  // hidden. This state is only used when the media query matches.\n  //\n  // [!!] On large screens this state is totally unused!\n  const [isMobileNavVisible, setMobileNavVisible] = useState(false);\n\n  // Offset mobile settings navigation by the height of main navigation,\n  // settings breadcrumbs and optional warnings.\n  const [navOffsetTop, setNavOffsetTop] = useState(0);\n\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  function toggleNav(visible: boolean) {\n    const bodyElement = document.getElementsByTagName('body')[0];\n\n    window.scrollTo?.(0, 0);\n    bodyElement.classList[visible ? 'add' : 'remove']('scroll-lock');\n\n    setMobileNavVisible(visible);\n    setNavOffsetTop(headerRef.current?.getBoundingClientRect().bottom ?? 0);\n  }\n\n  // Close menu when navigating away\n  useEffect(() => browserHistory.listen(() => toggleNav(false)), []);\n\n  const {renderNavigation, children, params, routes, route} = props;\n\n  // We want child's view's props\n  const childProps = children && isValidElement(children) ? children.props : props;\n  const childRoutes = childProps.routes || routes || [];\n  const childRoute = childProps.route || route || {};\n  const shouldRenderNavigation = typeof renderNavigation === 'function';\n\n  return (\n    <SettingsColumn>\n      <SettingsHeader ref={headerRef}>\n        <HeaderContent>\n          {shouldRenderNavigation && (\n            <NavMenuToggle\n              priority=\"link\"\n              aria-label={isMobileNavVisible ? t('Close the menu') : t('Open the menu')}\n              icon={\n                isMobileNavVisible ? <IconClose aria-hidden /> : <IconMenu aria-hidden />\n              }\n              onClick={() => toggleNav(!isMobileNavVisible)}\n            />\n          )}\n          <StyledSettingsBreadcrumb\n            params={params}\n            routes={childRoutes}\n            route={childRoute}\n          />\n          <SettingsSearch />\n        </HeaderContent>\n      </SettingsHeader>\n\n      <MaxWidthContainer>\n        {shouldRenderNavigation && (\n          <SidebarWrapper isVisible={isMobileNavVisible} offsetTop={navOffsetTop}>\n            {renderNavigation({isMobileNavVisible})}\n          </SidebarWrapper>\n        )}\n        <NavMask isVisible={isMobileNavVisible} onClick={() => toggleNav(false)} />\n        <Content>{children}</Content>\n      </MaxWidthContainer>\n    </SettingsColumn>\n  );\n}\n\nconst SettingsColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  flex: 1; /* so this stretches vertically so that footer is fixed at bottom */\n  min-width: 0; /* fixes problem when child content stretches beyond layout width */\n  footer {\n    margin-top: 0;\n  }\n`;\n\nconst HeaderContent = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst NavMenuToggle = styled(Button)`\n  display: none;\n  margin: -${space(1)} ${space(1)} -${space(1)} -${space(1)};\n  padding: ${space(1)};\n  color: ${p => p.theme.subText};\n  &:hover,\n  &:focus,\n  &:active {\n    color: ${p => p.theme.textColor};\n  }\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    display: block;\n  }\n`;\n\nconst StyledSettingsBreadcrumb = styled(SettingsBreadcrumb)`\n  flex: 1;\n`;\n\nconst MaxWidthContainer = styled('div')`\n  display: flex;\n  max-width: ${p => p.theme.settings.containerWidth};\n  flex: 1;\n`;\n\nconst SidebarWrapper = styled('div')<{isVisible: boolean; offsetTop: number}>`\n  flex-shrink: 0;\n  width: ${p => p.theme.settings.sidebarWidth};\n  background: ${p => p.theme.background};\n  border-right: 1px solid ${p => p.theme.border};\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    display: ${p => (p.isVisible ? 'block' : 'none')};\n    position: fixed;\n    top: ${p => p.offsetTop}px;\n    bottom: 0;\n    overflow-y: auto;\n    animation: ${slideInLeft} 100ms ease-in-out;\n    z-index: ${p => p.theme.zIndex.settingsSidebarNav};\n    box-shadow: ${p => p.theme.dropShadowHeavy};\n  }\n`;\n\nconst NavMask = styled('div')<{isVisible: boolean}>`\n  display: none;\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    display: ${p => (p.isVisible ? 'block' : 'none')};\n    background: rgba(0, 0, 0, 0.35);\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    z-index: ${p => p.theme.zIndex.settingsSidebarNavMask};\n    animation: ${fadeIn} 250ms ease-in-out;\n  }\n`;\n\n/**\n * Note: `overflow: hidden` will cause some buttons in `SettingsPageHeader` to be cut off because it has negative margin.\n * Will also cut off tooltips.\n */\nconst Content = styled('div')`\n  flex: 1;\n  padding: ${space(4)};\n  min-width: 0; /* keep children from stretching container */\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    padding: ${space(2)};\n  }\n\n  /**\n   * PageContent is not normally used in settings but <PermissionDenied /> uses it under the hood.\n   * This prevents double padding.\n   */\n  ${PageContent} {\n    padding: 0;\n  }\n`;\n\nexport default SettingsLayout;\n","var baseFlatten = require('./_baseFlatten'),\n    toInteger = require('./toInteger');\n\n/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */\nfunction flattenDepth(array, depth) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(array, depth);\n}\n\nmodule.exports = flattenDepth;\n"],"names":["route","title","fields","name","type","label","placeholder","help","showReturnButton","recreateRoute","to","options","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","BreadcrumbDropdown","Component","isOpen","undefined","this","setState","window","clearTimeout","leavingTimeout","enteringTimeout","setTimeout","open","props","enterDelay","close","componentWillUnmount","render","hasMenu","isLast","items","onSelect","dropdownProps","blendCorner","onOpen","handleMouseEnter","onClose","state","menuProps","onMouseEnter","onMouseLeave","handleMouseLeave","virtualizedHeight","getActorProps","actions","onClick","handleClickActor","bind","handleMouseEnterActor","isHover","p","theme","subText","space","textColor","StyledIconChevron","IconChevron","StyledDivider","gray200","direction","size","findFirstRouteWithoutRouteParam","filter","find","includes","overflowEllipsis","OrganizationCrumb","organization","organizations","length","CrumbLink","orgId","slug","BadgeWrapper","avatarSize","item","hasProjectParam","projectId","destination","browserHistory","value","org","index","withLatestContext","ProjectCrumb","latestOrganization","project","latestProject","projects","ProjectName","disableLink","mini","returnTo","avatarProps","consistentWidth","withProjects","SPINNER_SIZE","TeamCrumb","teams","onSearch","fetching","useTeams","team","teamId","debouncedHandleSearch","debounce","e","target","DEFAULT_DEBOUNCE_DURATION","teamItem","onChange","busyItemsStillVisible","MENUS","Organization","Project","Team","SettingsBreadcrumb","className","pathMap","useBreadcrumbsPathmap","lastRouteIndex","r","lastIndexOf","Breadcrumbs","i","pathTitle","getRouteStringFromRoutes","createMenu","Menu","CrumbItem","Link","SettingsSearch","searchInput","useRef","useHotkeys","match","callback","current","focus","entryPoint","minSearch","maxResults","renderInput","getInputProps","SearchInputWrapper","SearchInputIcon","SearchInput","t","ref","IconSearch","gray300","formText","background","border","dropShadowLight","formPlaceholder","SettingsLayout","isMobileNavVisible","setMobileNavVisible","useState","navOffsetTop","setNavOffsetTop","headerRef","toggleNav","visible","bodyElement","document","getElementsByTagName","scrollTo","classList","getBoundingClientRect","bottom","useEffect","renderNavigation","children","childProps","isValidElement","childRoutes","childRoute","shouldRenderNavigation","SettingsColumn","HeaderContent","NavMenuToggle","priority","icon","StyledSettingsBreadcrumb","MaxWidthContainer","SidebarWrapper","isVisible","offsetTop","NavMask","Content","Button","breakpoints","medium","settings","containerWidth","sidebarWidth","slideInLeft","zIndex","settingsSidebarNav","dropShadowHeavy","settingsSidebarNavMask","fadeIn","PageContent","baseFlatten","toInteger","module","exports","array","depth"],"sourceRoot":""}