{"version":3,"file":"chunks/app_views_settings_projectAlerts_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"iYAYA,MAAMA,EAAgB,QAAC,SAACC,EAAD,aAAWC,GAAZ,SACpB,QAAC,IAAD,CAAQA,aAAcA,EAAcC,OAAQ,CAAC,iBAA7C,SACG,QAAC,UAACC,GAAF,SACC,QAAC,EAAAC,SAAD,WACGC,EAAAA,EAAAA,gBAAeL,KACdM,EAAAA,EAAAA,cAAkBN,EAAU,CAC1BC,eACAM,YAAaJ,KALpB,GAFiB,EAAhBJ,EAAAA,YAAAA,gBAcN,S","sources":["webpack:///./app/views/settings/projectAlerts/index.tsx"],"sourcesContent":["import {cloneElement, Fragment, isValidElement} from 'react';\nimport type {RouteComponentProps} from 'react-router';\n\nimport Access from 'sentry/components/acl/access';\nimport {Organization} from 'sentry/types';\n\ninterface Props\n  extends RouteComponentProps<{organizationId: string; projectId: string}, {}> {\n  children: React.ReactNode;\n  organization: Organization;\n}\n\nconst ProjectAlerts = ({children, organization}: Props) => (\n  <Access organization={organization} access={['project:write']}>\n    {({hasAccess}) => (\n      <Fragment>\n        {isValidElement(children) &&\n          cloneElement<any>(children, {\n            organization,\n            canEditRule: hasAccess,\n          })}\n      </Fragment>\n    )}\n  </Access>\n);\n\nexport default ProjectAlerts;\n"],"names":["ProjectAlerts","children","organization","access","hasAccess","Fragment","isValidElement","cloneElement","canEditRule"],"sourceRoot":""}