{"version":3,"file":"chunks/app_views_acceptOrganizationInvite_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"6gBAcA,SAASA,EAAT,GAA+D,IAAzC,SAACC,EAAD,WAAWC,EAAX,SAAuBC,GAAkB,EAC7D,MAAMC,GAAMC,EAAAA,EAAAA,KAaZ,OAXAC,EAAAA,EAAAA,YAAU,KACRC,SAASC,KAAKC,UAAUC,IAAI,UAErB,IAAMH,SAASC,KAAKC,UAAUE,OAAO,YAC3C,KAQD,eAAKC,UAAU,MAAf,WACE,eAAKA,UAAU,gBACf,eAAKA,UAAU,YAAYC,MAAO,CAACZ,YAAnC,UACE,eAAKW,UAAU,gBAAf,WACE,eAAKA,UAAU,aAAf,WACE,aAAGE,KAAK,IAAR,UACE,QAAC,KAAD,CAAYC,KAAK,SAElBb,IACC,aAAGU,UAAU,oBAAoBI,QAf7CC,uBACQC,EAAAA,EAAAA,IAAOd,GACbe,OAAOC,SAASC,OAAO,cACxB,EAYW,UACE,QAACC,EAAD,WAASC,EAAAA,EAAAA,GAAE,oBAIjB,eAAKX,UAAU,2BAAf,SAA2CT,WAKpD,CAlCQH,EAAAA,YAAAA,eAoCT,MAAMsB,GAAS,OAAO,OAAP,qBAAH,cACGE,GAAKA,EAAEC,MAAMC,eADhB,KAIZ,G,+3BClBA,MAAMC,UAAiCC,EAAAA,EAAwB,qEACxC,IADwC,4BAgB9CX,UACbY,EAAEC,uBACIZ,EAAAA,EAAAA,IAAOa,KAAK3B,KAClBe,OAAOC,SAASY,QAAQD,KAAKE,YAAY,gBAAzC,KAnB2D,kCAsBxChB,UACnB,MAAM,SAACiB,EAAD,MAAWC,GAASJ,KAAKK,MAAMC,OAErCN,KAAKO,SAAS,CAACC,WAAW,IAC1B,UACQR,KAAK3B,IAAIoC,eAAgB,kBAAiBN,KAAYC,KAAU,CACpEM,OAAQ,SAEVC,EAAAA,eAAAA,QAAwB,IAAGX,KAAKY,MAAMC,cAAcC,WAGrD,CAFC,MACAd,KAAKO,SAAS,CAACQ,aAAa,GAC7B,CACDf,KAAKO,SAAS,CAACC,WAAW,GAA1B,GAlC2D,CAG7DQ,eACE,MAAM,SAACb,EAAD,MAAWC,GAASJ,KAAKK,MAAMC,OACrC,MAAO,CAAC,CAAC,gBAAkB,kBAAiBH,KAAYC,MACzD,CAEDa,WACE,OAAOzB,EAAAA,EAAAA,GAAE,6BACV,CAEDU,YAAYgB,GACV,MAAQ,GAAEA,MAAQC,EAAAA,EAAAA,IAAU,CAACC,KAAMhC,OAAOC,SAASgC,YACpD,CAuBGC,0BACF,MAAMC,EAAOC,EAAAA,EAAAA,IAAgB,QAE7B,OACE,QAAC,IAAD,CAAOC,KAAK,UAAU,eAAa,kBAAnC,UACGC,EAAAA,EAAAA,IACC,iGACA,CACEC,MAAOJ,EAAKI,MACZC,YACE,QAAC,IAAD,CACEC,GAAG,GACH,eAAa,uBACb5C,QAASe,KAAK8B,kBAO3B,CAEGC,4BACF,MAAM,cAAClB,GAAiBb,KAAKY,MAE7B,OACE,QAAC,EAAAoB,SAAD,YACInB,EAAcoB,aACd,aAAG,eAAa,sBAAhB,UACGzC,EAAAA,EAAAA,GACE,+GAMNqB,EAAcqB,kBACb,aAAG,eAAa,kBAAhB,SACGrB,EAAcoB,YACXP,EAAAA,EAAAA,IACG,gMAGD,CACEZ,SAAS,2BAASD,EAAcC,UAChCqB,aAActB,EAAcuB,eAGhCV,EAAAA,EAAAA,IACG,+LAGD,CACEZ,SAAS,2BAASD,EAAcC,UAChCqB,aAActB,EAAcuB,iBAMxC,QAACC,EAAD,YACE,QAACC,EAAD,WACGzB,EAAcqB,kBACb,QAAC,KAAD,CACE,eAAa,YACbK,SAAS,UACTxD,KAAMiB,KAAKE,YAAa,eAAcW,EAAcC,YAHtD,UAKGtB,EAAAA,EAAAA,GAAE,eAAgBqB,EAAcuB,gBAGnCvB,EAAcoB,aACd,QAAC,KAAD,CACE,eAAa,iBACbM,SAAS,UACTxD,KAAMiB,KAAKE,YAAY,mBAHzB,UAKGV,EAAAA,EAAAA,GAAE,8BAIPqB,EAAcoB,aACd,QAAC,IAAD,CACElD,KAAMiB,KAAKE,YAAY,gBACvBsC,cAAc,EACd,eAAa,qBAHf,UAKGhD,EAAAA,EAAAA,GAAE,0CAMd,CAEGiD,iBACF,MAAM,cAAC5B,GAAiBb,KAAKY,MAE7B,OACE,QAAC,EAAAoB,SAAD,YACE,aAAG,eAAa,cAAhB,UACGN,EAAAA,EAAAA,IACC,sFACA,CAACZ,QAASD,EAAcC,aAG5B,QAACuB,EAAD,WACE,QAAC,KAAD,CAAQE,SAAS,UAAUV,GAAG,8BAA9B,UACGrC,EAAAA,EAAAA,GAAE,mCAKZ,CAEGkD,+BACF,MAAM,cAAC7B,GAAiBb,KAAKY,MAE7B,OACE,QAAC,EAAAoB,SAAD,YACE,aAAG,eAAa,6BAAhB,UACGN,EAAAA,EAAAA,IACC,6EACA,CAACZ,QAASD,EAAcC,aAG5B,QAACuB,EAAD,WACE,QAAC,KAAD,CAAQE,SAAS,UAAUV,GAAG,4BAA9B,UACGrC,EAAAA,EAAAA,GAAE,8BAKZ,CAEGmD,oBACF,MAAM,cAAC9B,EAAD,UAAgBL,GAAaR,KAAKY,MAExC,OACE,QAAC,EAAAoB,SAAD,WACGnB,EAAcqB,kBAAoBrB,EAAcoB,aAC/C,aAAG,eAAa,kBAAhB,UACGP,EAAAA,EAAAA,IACE,+OAGD,CACEZ,SAAS,2BAASD,EAAcC,UAChCqB,aAActB,EAAcuB,iBAKpC,QAACC,EAAD,WACE,QAACC,EAAD,WACGzB,EAAcqB,kBAAoBrB,EAAcoB,aAC/C,QAAC,KAAD,CACE,eAAa,YACbM,SAAS,UACTxD,KAAMiB,KAAKE,YAAa,eAAcW,EAAcC,YAHtD,UAKGtB,EAAAA,EAAAA,GAAE,eAAgBqB,EAAcuB,gBAIrC,QAAC,KAAD,CACE,eAAa,oBACbG,SAAS,UACTK,SAAUpC,EACVvB,QAASe,KAAK6C,mBAJhB,UAMGrD,EAAAA,EAAAA,GAAE,2BAA4BqB,EAAcC,kBAMxD,CAEDgC,cACE,OACE,QAAC,IAAD,WACE,QAAC,IAAD,CAAOrB,KAAK,UAAZ,UACGjC,EAAAA,EAAAA,GAAE,wDAIV,CAEDuD,aACE,MAAM,cAAClC,EAAD,YAAgBE,GAAef,KAAKY,MAE1C,OACE,QAAC,IAAD,YACE,QAAC,IAAD,CAAoBoC,OAAOxD,EAAAA,EAAAA,GAAE,gCAC5BuB,IACC,QAAC,IAAD,CAAOU,KAAK,QAAZ,UACGjC,EAAAA,EAAAA,GAAE,yDAGP,QAACyD,EAAD,CAAmB,eAAa,gBAAhC,UACGvB,EAAAA,EAAAA,IAAI,uDAAwD,CAC3DZ,SAAS,2BAASD,EAAcC,cAGnCD,EAAcqC,oBACXlD,KAAK+B,sBACLlB,EAAcsC,eACdnD,KAAKsB,oBACLT,EAAcuC,SACdpD,KAAKyC,WACL5B,EAAcwC,uBACdrD,KAAK0C,yBACL7B,EAAcoB,WACdjC,KAAK+B,sBACL/B,KAAK2C,gBAGd,EAGH,MAAMN,GAAU,OAAO,MAAP,sBAAH,gFAIMiB,EAAAA,EAAAA,GAAM,GAJZ,KAMPhB,GAAc,OAAO,OAAP,sBAAH,oBAEGgB,EAAAA,EAAAA,GAAM,GAFT,MAMXL,GAAoB,OAAO,IAAP,sBAAH,2CAGvB,G,wPC/Se,MAAMpD,UAGX0D,EAAAA,EACRtC,WACE,MAAO,EACR,CAEDuC,SACE,OACE,QAAC,IAAD,CAAqBR,MAAOhD,KAAKiB,WAAjC,SACGjB,KAAKyD,mBAGX,EAdkB5D,EAAAA,YAAAA,W","sources":["webpack:///./app/components/narrowLayout.tsx","webpack:///./app/views/acceptOrganizationInvite.tsx","webpack:///./app/views/asyncView.tsx"],"sourcesContent":["import {useEffect} from 'react';\nimport styled from '@emotion/styled';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport {IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  children: React.ReactNode;\n  maxWidth?: string;\n  showLogout?: boolean;\n};\n\nfunction NarrowLayout({maxWidth, showLogout, children}: Props) {\n  const api = useApi();\n\n  useEffect(() => {\n    document.body.classList.add('narrow');\n\n    return () => document.body.classList.remove('narrow');\n  }, []);\n\n  async function handleLogout() {\n    await logout(api);\n    window.location.assign('/auth/login');\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"pattern-bg\" />\n      <div className=\"container\" style={{maxWidth}}>\n        <div className=\"box box-modal\">\n          <div className=\"box-header\">\n            <a href=\"/\">\n              <IconSentry size=\"lg\" />\n            </a>\n            {showLogout && (\n              <a className=\"logout pull-right\" onClick={handleLogout}>\n                <Logout>{t('Sign out')}</Logout>\n              </a>\n            )}\n          </div>\n          <div className=\"box-content with-padding\">{children}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Logout = styled('span')`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nexport default NarrowLayout;\n","import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {urlEncode} from '@sentry/utils';\n\nimport {logout} from 'sentry/actionCreators/account';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport NarrowLayout from 'sentry/components/narrowLayout';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\ntype InviteDetails = {\n  existingMember: boolean;\n  hasAuthProvider: boolean;\n  needs2fa: boolean;\n  needsAuthentication: boolean;\n  needsEmailVerification: boolean;\n  orgSlug: string;\n  requireSso: boolean;\n  ssoProvider?: string;\n};\n\ntype Props = RouteComponentProps<{memberId: string; token: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  acceptError: boolean | undefined;\n  accepting: boolean | undefined;\n  inviteDetails: InviteDetails;\n};\n\nclass AcceptOrganizationInvite extends AsyncView<Props, State> {\n  disableErrorReport = false;\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {memberId, token} = this.props.params;\n    return [['inviteDetails', `/accept-invite/${memberId}/${token}/`]];\n  }\n\n  getTitle() {\n    return t('Accept Organization Invite');\n  }\n\n  makeNextUrl(path: string) {\n    return `${path}?${urlEncode({next: window.location.pathname})}`;\n  }\n\n  handleLogout = async (e: React.MouseEvent) => {\n    e.preventDefault();\n    await logout(this.api);\n    window.location.replace(this.makeNextUrl('/auth/login/'));\n  };\n\n  handleAcceptInvite = async () => {\n    const {memberId, token} = this.props.params;\n\n    this.setState({accepting: true});\n    try {\n      await this.api.requestPromise(`/accept-invite/${memberId}/${token}/`, {\n        method: 'POST',\n      });\n      browserHistory.replace(`/${this.state.inviteDetails.orgSlug}/`);\n    } catch {\n      this.setState({acceptError: true});\n    }\n    this.setState({accepting: false});\n  };\n\n  get existingMemberAlert() {\n    const user = ConfigStore.get('user');\n\n    return (\n      <Alert type=\"warning\" data-test-id=\"existing-member\">\n        {tct(\n          'Your account ([email]) is already a member of this organization. [switchLink:Switch accounts]?',\n          {\n            email: user.email,\n            switchLink: (\n              <Link\n                to=\"\"\n                data-test-id=\"existing-member-link\"\n                onClick={this.handleLogout}\n              />\n            ),\n          }\n        )}\n      </Alert>\n    );\n  }\n\n  get authenticationActions() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <Fragment>\n        {!inviteDetails.requireSso && (\n          <p data-test-id=\"action-info-general\">\n            {t(\n              `To continue, you must either create a new account, or login to an\n              existing Sentry account.`\n            )}\n          </p>\n        )}\n\n        {inviteDetails.hasAuthProvider && (\n          <p data-test-id=\"action-info-sso\">\n            {inviteDetails.requireSso\n              ? tct(\n                  `Note that [orgSlug] has required Single Sign-On (SSO) using\n               [authProvider]. You may create an account by authenticating with\n               the organization's SSO provider.`,\n                  {\n                    orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n                    authProvider: inviteDetails.ssoProvider,\n                  }\n                )\n              : tct(\n                  `Note that [orgSlug] has enabled Single Sign-On (SSO) using\n               [authProvider]. You may create an account by authenticating with\n               the organization's SSO provider.`,\n                  {\n                    orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n                    authProvider: inviteDetails.ssoProvider,\n                  }\n                )}\n          </p>\n        )}\n\n        <Actions>\n          <ActionsLeft>\n            {inviteDetails.hasAuthProvider && (\n              <Button\n                data-test-id=\"sso-login\"\n                priority=\"primary\"\n                href={this.makeNextUrl(`/auth/login/${inviteDetails.orgSlug}/`)}\n              >\n                {t('Join with %s', inviteDetails.ssoProvider)}\n              </Button>\n            )}\n            {!inviteDetails.requireSso && (\n              <Button\n                data-test-id=\"create-account\"\n                priority=\"primary\"\n                href={this.makeNextUrl('/auth/register/')}\n              >\n                {t('Create a new account')}\n              </Button>\n            )}\n          </ActionsLeft>\n          {!inviteDetails.requireSso && (\n            <ExternalLink\n              href={this.makeNextUrl('/auth/login/')}\n              openInNewTab={false}\n              data-test-id=\"link-with-existing\"\n            >\n              {t('Login using an existing account')}\n            </ExternalLink>\n          )}\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  get warning2fa() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <Fragment>\n        <p data-test-id=\"2fa-warning\">\n          {tct(\n            'To continue, [orgSlug] requires all members to configure two-factor authentication.',\n            {orgSlug: inviteDetails.orgSlug}\n          )}\n        </p>\n        <Actions>\n          <Button priority=\"primary\" to=\"/settings/account/security/\">\n            {t('Configure Two-Factor Auth')}\n          </Button>\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  get warningEmailVerification() {\n    const {inviteDetails} = this.state;\n\n    return (\n      <Fragment>\n        <p data-test-id=\"email-verification-warning\">\n          {tct(\n            'To continue, [orgSlug] requires all members to verify their email address.',\n            {orgSlug: inviteDetails.orgSlug}\n          )}\n        </p>\n        <Actions>\n          <Button priority=\"primary\" to=\"/settings/account/emails/\">\n            {t('Verify Email Address')}\n          </Button>\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  get acceptActions() {\n    const {inviteDetails, accepting} = this.state;\n\n    return (\n      <Fragment>\n        {inviteDetails.hasAuthProvider && !inviteDetails.requireSso && (\n          <p data-test-id=\"action-info-sso\">\n            {tct(\n              `Note that [orgSlug] has enabled Single Sign-On (SSO) using\n               [authProvider]. You may join the organization by authenticating with\n               the organization's SSO provider or via your standard account authentication.`,\n              {\n                orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n                authProvider: inviteDetails.ssoProvider,\n              }\n            )}\n          </p>\n        )}\n        <Actions>\n          <ActionsLeft>\n            {inviteDetails.hasAuthProvider && !inviteDetails.requireSso && (\n              <Button\n                data-test-id=\"sso-login\"\n                priority=\"primary\"\n                href={this.makeNextUrl(`/auth/login/${inviteDetails.orgSlug}/`)}\n              >\n                {t('Join with %s', inviteDetails.ssoProvider)}\n              </Button>\n            )}\n\n            <Button\n              data-test-id=\"join-organization\"\n              priority=\"primary\"\n              disabled={accepting}\n              onClick={this.handleAcceptInvite}\n            >\n              {t('Join the %s organization', inviteDetails.orgSlug)}\n            </Button>\n          </ActionsLeft>\n        </Actions>\n      </Fragment>\n    );\n  }\n\n  renderError() {\n    return (\n      <NarrowLayout>\n        <Alert type=\"warning\">\n          {t('This organization invite link is no longer valid.')}\n        </Alert>\n      </NarrowLayout>\n    );\n  }\n\n  renderBody() {\n    const {inviteDetails, acceptError} = this.state;\n\n    return (\n      <NarrowLayout>\n        <SettingsPageHeader title={t('Accept organization invite')} />\n        {acceptError && (\n          <Alert type=\"error\">\n            {t('Failed to join this organization. Please try again')}\n          </Alert>\n        )}\n        <InviteDescription data-test-id=\"accept-invite\">\n          {tct('[orgSlug] is using Sentry to track and debug errors.', {\n            orgSlug: <strong>{inviteDetails.orgSlug}</strong>,\n          })}\n        </InviteDescription>\n        {inviteDetails.needsAuthentication\n          ? this.authenticationActions\n          : inviteDetails.existingMember\n          ? this.existingMemberAlert\n          : inviteDetails.needs2fa\n          ? this.warning2fa\n          : inviteDetails.needsEmailVerification\n          ? this.warningEmailVerification\n          : inviteDetails.requireSso\n          ? this.authenticationActions\n          : this.acceptActions}\n      </NarrowLayout>\n    );\n  }\n}\n\nconst Actions = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(3)};\n`;\nconst ActionsLeft = styled('span')`\n  > a {\n    margin-right: ${space(1)};\n  }\n`;\n\nconst InviteDescription = styled('p')`\n  font-size: 1.2em;\n`;\nexport default AcceptOrganizationInvite;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["NarrowLayout","maxWidth","showLogout","children","api","useApi","useEffect","document","body","classList","add","remove","className","style","href","size","onClick","async","logout","window","location","assign","Logout","t","p","theme","fontSizeLarge","AcceptOrganizationInvite","AsyncView","e","preventDefault","this","replace","makeNextUrl","memberId","token","props","params","setState","accepting","requestPromise","method","browserHistory","state","inviteDetails","orgSlug","acceptError","getEndpoints","getTitle","path","urlEncode","next","pathname","existingMemberAlert","user","ConfigStore","type","tct","email","switchLink","to","handleLogout","authenticationActions","Fragment","requireSso","hasAuthProvider","authProvider","ssoProvider","Actions","ActionsLeft","priority","openInNewTab","warning2fa","warningEmailVerification","acceptActions","disabled","handleAcceptInvite","renderError","renderBody","title","InviteDescription","needsAuthentication","existingMember","needs2fa","needsEmailVerification","space","AsyncComponent","render","renderComponent"],"sourceRoot":""}