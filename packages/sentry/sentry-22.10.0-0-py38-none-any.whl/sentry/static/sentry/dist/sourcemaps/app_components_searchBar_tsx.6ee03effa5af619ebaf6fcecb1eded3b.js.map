{"version":3,"file":"chunks/app_components_searchBar_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"gnBAkBA,SAASA,EAAT,GASmB,IARjBC,MAAOC,EADU,aAEjBC,EAAe,GAFE,SAGjBC,EAHiB,SAIjBC,EAJiB,MAKjBC,EALiB,KAMjBC,EANiB,UAOjBC,KACGC,GACc,EACjB,MAAMC,GAAWC,EAAAA,EAAAA,QAAyB,OAEnCV,EAAOW,IAAYC,EAAAA,EAAAA,UAASX,GAAaC,GAE1CW,GAAgBC,EAAAA,EAAAA,cACnBC,IACC,MAAM,MAACC,GAASD,EAAEE,OAClBN,EAASK,GACTb,IAAWa,EAAX,GAEF,CAACb,IAGGe,GAAWJ,EAAAA,EAAAA,cACdC,IACCA,EAAEI,iBACFV,EAASW,SAASC,OAClBjB,IAAWJ,EAAX,GAEF,CAACI,EAAUJ,IAGPsB,GAAcR,EAAAA,EAAAA,cAAY,KAC9BH,EAAS,IACTR,IAAW,IACXC,IAAW,GAAX,GACC,CAACD,EAAUC,IAEd,OACE,QAACmB,EAAD,CAAUL,SAAUA,EAAUX,UAAWA,EAAzC,WACE,QAACiB,EAAD,IACMhB,EACJiB,IAAKhB,EACLiB,KAAK,OACLC,KAAK,QACLC,aAAa,MACbZ,MAAOhB,EACPG,SAAUU,EACVR,MAAOA,EACPC,KAAMA,EACNuB,kBAAmB7B,KAErB,QAAC8B,EAAD,CACEC,MAAM,UACNzB,KAAe,OAATA,EAAgB,KAAO,KAC7B0B,UAAW1B,MAEVN,IACD,QAACiC,EAAD,CACEP,KAAK,SACLQ,SAAS,OACTC,QAASb,EACThB,KAAK,KACL8B,MAAM,QAAC,IAAD,CAAW9B,KAAK,OACtB,cAAY+B,EAAAA,EAAAA,GAAE,SACdL,UAAW1B,MAKpB,CAtEQP,EAAAA,YAAAA,YAwET,MAAMwB,GAAW,OAAO,OAAP,qBAAH,0DAKRC,GAAc,OAAOc,EAAAA,EAAP,qBAAH,UACNC,GAAMA,EAAElC,MAAQkC,EAAElC,WAAQmC,GADpB,kBAECD,GAAM,cAClBA,EAAEE,MAAMC,YAAYH,EAAEjC,MAAQ,MAAMqC,8BACpCJ,EAAEE,MAAMG,UAAUC,WAJP,KAObN,GACAA,EAAEV,iBACD,yCAEKU,EAAEE,MAAMC,YAAYH,EAAEjC,MAAQ,MAAMwC,mCACpCP,EAAEE,MAAMG,UAAUG,sBAZX,KAiBXjB,GAAmB,OAAOkB,EAAAA,GAAP,CACvBC,kBAAmBC,GAAwB,iBAATA,IAAqBC,EAAAA,EAAAA,GAAYD,GAD5C,oBAAH,mCAKZX,GAAKA,EAAEE,MAAMC,YAAYH,EAAEP,WAAa,MAAMW,aALlC,sDAUhBV,GAAoB,OAAOmB,EAAAA,GAAP,qBAAH,+DAIZb,GAAKA,EAAEE,MAAMC,YAAYH,EAAEP,WAAa,MAAMc,cAJlC,iBAKRP,GAAKA,EAAEE,MAAMY,eALL,WAMZd,GAAKA,EAAEE,MAAMa,SAND,mBASVf,GAAKA,EAAEE,MAAMc,WATH,MAavB,G","sources":["webpack:///./app/components/searchBar.tsx"],"sourcesContent":["import {useCallback, useRef, useState} from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport Input, {InputProps} from 'sentry/components/input';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <StyledInput\n        {...inputProps}\n        ref={inputRef}\n        type=\"text\"\n        name=\"query\"\n        autoComplete=\"off\"\n        value={query}\n        onChange={onQueryChange}\n        width={width}\n        size={size}\n        showClearButton={!!query}\n      />\n      <StyledIconSearch\n        color=\"subText\"\n        size={size === 'xs' ? 'xs' : 'sm'}\n        inputSize={size}\n      />\n      {!!query && (\n        <SearchClearButton\n          type=\"button\"\n          priority=\"link\"\n          onClick={clearSearch}\n          size=\"xs\"\n          icon={<IconClose size=\"xs\" />}\n          aria-label={t('Clear')}\n          inputSize={size}\n        />\n      )}\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(Input)<{showClearButton: boolean}>`\n  width: ${p => (p.width ? p.width : undefined)};\n  padding-left: ${p => `calc(\n    ${p.theme.formPadding[p.size ?? 'md'].paddingLeft}px * 1.5 +\n    ${p.theme.iconSizes.sm}\n  )`};\n\n  ${p =>\n    p.showClearButton &&\n    `\n      padding-right: calc(\n        ${p.theme.formPadding[p.size ?? 'md'].paddingRight}px * 1.5 +\n        ${p.theme.iconSizes.xs}\n      );\n    `}\n`;\n\nconst StyledIconSearch = styled(IconSearch, {\n  shouldForwardProp: prop => typeof prop === 'string' && isPropValid(prop),\n})<{inputSize: InputProps['size']}>`\n  position: absolute;\n  top: 50%;\n  left: ${p => p.theme.formPadding[p.inputSize ?? 'md'].paddingLeft}px;\n  transform: translateY(-50%);\n  pointer-events: none;\n`;\n\nconst SearchClearButton = styled(Button)<{inputSize: InputProps['size']}>`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: ${p => p.theme.formPadding[p.inputSize ?? 'md'].paddingRight}px;\n  font-size: ${p => p.theme.fontSizeLarge};\n  color: ${p => p.theme.subText};\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nexport default SearchBar;\n"],"names":["SearchBar","query","queryProp","defaultQuery","onChange","onSearch","width","size","className","inputProps","inputRef","useRef","setQuery","useState","onQueryChange","useCallback","e","value","target","onSubmit","preventDefault","current","blur","clearSearch","FormWrap","StyledInput","ref","type","name","autoComplete","showClearButton","StyledIconSearch","color","inputSize","SearchClearButton","priority","onClick","icon","t","Input","p","undefined","theme","formPadding","paddingLeft","iconSizes","sm","paddingRight","xs","IconSearch","shouldForwardProp","prop","isPropValid","Button","fontSizeLarge","subText","textColor"],"sourceRoot":""}