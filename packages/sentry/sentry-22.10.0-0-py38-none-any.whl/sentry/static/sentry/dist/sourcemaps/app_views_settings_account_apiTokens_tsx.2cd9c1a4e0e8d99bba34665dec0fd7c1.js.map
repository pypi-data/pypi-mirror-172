{"version":3,"file":"chunks/app_views_settings_account_apiTokens_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"6WAMe,MAAMA,UAGXC,EAAAA,EACRC,WACE,MAAO,EACR,CAEDC,SACE,OACE,QAAC,IAAD,CAAqBC,MAAOC,KAAKH,WAAjC,SACGG,KAAKC,mBAGX,EAdkBN,EAAAA,YAAAA,W,w2BCWrB,SAASO,EAAT,GAA+C,IAA1B,MAACC,EAAD,SAAQC,GAAkB,EAC7C,OACE,QAACC,EAAD,YACE,QAACC,EAAD,YACE,QAACC,EAAD,WACE,QAAC,KAAD,WACGC,EAAAA,EAAAA,GAAe,CAACC,MAAON,EAAMA,MAAOO,MAAO,uBAGhD,QAAC,KAAD,CACEC,KAAK,KACLC,QAAS,IAAMR,EAASD,GACxBU,MAAM,QAAC,KAAD,CAAcC,WAAS,EAACH,KAAK,OAHrC,UAKGI,EAAAA,EAAAA,GAAE,gBAIP,QAACC,EAAD,YACE,QAACC,EAAD,YACE,QAACC,EAAD,WAAUH,EAAAA,EAAAA,GAAE,aACZ,QAACI,EAAD,UAAYhB,EAAMiB,OAAOC,KAAK,YAEhC,0BACE,QAACH,EAAD,WAAUH,EAAAA,EAAAA,GAAE,cACZ,QAACO,EAAD,WACE,QAAC,IAAD,CACEC,MAAMf,EAAAA,EAAAA,GAAe,CACnBC,MAAON,EAAMqB,YACbd,MAAO,IAAIe,KAAK,2BAQ/B,CArCQvB,EAAAA,YAAAA,cAuCT,MAAMG,GAAkB,OAAOqB,EAAAA,GAAP,qBAAH,kCAERC,EAAAA,EAAAA,GAAM,GAFE,KAKfrB,GAAW,OAAO,MAAP,qBAAH,kDAGKqB,EAAAA,EAAAA,GAAM,GAHX,KAMRpB,GAAe,OAAO,MAAP,qBAAH,cACHqB,GAAKA,EAAEC,MAAMC,uBADV,yBAGAH,EAAAA,EAAAA,GAAM,GAHN,KAMZX,GAAU,OAAO,MAAP,qBAAH,4BAEGW,EAAAA,EAAAA,GAAM,GAFT,KAKPV,GAAgB,OAAO,MAAP,qBAAH,iCAIbE,GAAY,OAAO,MAAP,qBAAH,cACAS,GAAKA,EAAEC,MAAMC,uBADb,qBAKTR,GAAO,OAAO,OAAP,qBAAH,cACKM,GAAKA,EAAEC,MAAMC,uBADlB,qBAKJZ,GAAU,OAAO,MAAP,qBAAH,cACEU,GAAKA,EAAEC,MAAME,gBADf,oCAGFH,GAAKA,EAAEC,MAAMG,SAHX,mBAIML,EAAAA,EAAAA,GAAM,GAJZ,KAOb,I,4HCzEO,MAAMM,UAAkBtC,EAAAA,EAAwB,oEAgBhCQ,KACnB+B,EAAAA,EAAAA,MACA,MAAMC,EAAenC,KAAKoC,MAAMC,UAEhCrC,KAAKsC,UACHF,IAAS,CACPC,UAAWD,EAAMC,WAAWE,QAAOC,GAAMA,EAAGrC,QAAUA,EAAMA,SAAU,OAExEsC,UACE,UACQzC,KAAK0C,IAAIC,eAAe,eAAgB,CAC5CC,OAAQ,SACRC,KAAM,CAAC1C,MAAOA,EAAMA,UAGtB2C,EAAAA,EAAAA,KAAkB/B,EAAAA,EAAAA,GAAE,iBAMrB,CALC,MAAOgC,IACPC,EAAAA,EAAAA,KAAgBjC,EAAAA,EAAAA,GAAE,8CAClBf,KAAKsC,SAAS,CACZD,UAAWF,GAEd,IAjBL,GApBmD,CACrDtC,WACE,OAAOkB,EAAAA,EAAAA,GAAE,aACV,CAEDkC,kBACE,MAAO,IACFC,MAAMD,kBACTZ,UAAW,GAEd,CAEDc,eACE,MAAO,CAAC,CAAC,YAAa,gBACvB,CA4BDC,aACE,MAAM,aAACC,GAAgBrD,KAAKsD,OACtB,UAACjB,GAAarC,KAAKoC,MAEnBmB,GAAWC,MAAMC,QAAQpB,IAAmC,IAArBA,EAAUqB,OAEjDC,GACJ,QAAC,KAAD,CACEC,SAAS,UACTjD,KAAK,KACLkD,GAAG,+CACH,eAAa,eAJf,UAMG9C,EAAAA,EAAAA,GAAE,sBAIP,OACE,0BACE,QAAC,IAAD,CAAoBhB,MAAM,cAAc4D,OAAQA,KAChD,QAAC,IAAD,CACEE,GAAK,aAAYR,GAAcS,MAAQ,qCADzC,UAGG/C,EAAAA,EAAAA,GACC,qNAGJ,QAAC,IAAD,WACGA,EAAAA,EAAAA,GACC,iKAGJ,QAAC,IAAD,WACGgD,EAAAA,EAAAA,IACC,gFACA,CACEC,MAAM,QAAC,IAAD,CAAcC,KAAK,qCAI/B,QAAC,KAAD,YACE,QAAC,KAAD,WAAclD,EAAAA,EAAAA,GAAE,iBAEhB,QAAC,IAAD,WACGwC,IACC,QAAC,IAAD,WACGxC,EAAAA,EAAAA,GAAE,wDAINsB,GAAW6B,KAAI/D,IACd,QAAC,EAAD,CAEEA,MAAOA,EACPC,SAAUJ,KAAKmE,mBAFVhE,EAAMA,iBASxB,EAGH,SAAeiE,EAAAA,EAAAA,GAAiBnC,E","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/apiTokenRow.tsx","webpack:///./app/views/settings/account/apiTokens.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport DateTime from 'sentry/components/dateTime';\nimport {PanelItem} from 'sentry/components/panels';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {IconSubtract} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {InternalAppApiToken} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\ntype Props = {\n  onRemove: (token: InternalAppApiToken) => void;\n  token: InternalAppApiToken;\n};\n\nfunction ApiTokenRow({token, onRemove}: Props) {\n  return (\n    <StyledPanelItem>\n      <Controls>\n        <InputWrapper>\n          <TextCopyInput>\n            {getDynamicText({value: token.token, fixed: 'CI_AUTH_TOKEN'})}\n          </TextCopyInput>\n        </InputWrapper>\n        <Button\n          size=\"sm\"\n          onClick={() => onRemove(token)}\n          icon={<IconSubtract isCircled size=\"xs\" />}\n        >\n          {t('Remove')}\n        </Button>\n      </Controls>\n\n      <Details>\n        <ScopesWrapper>\n          <Heading>{t('Scopes')}</Heading>\n          <ScopeList>{token.scopes.join(', ')}</ScopeList>\n        </ScopesWrapper>\n        <div>\n          <Heading>{t('Created')}</Heading>\n          <Time>\n            <DateTime\n              date={getDynamicText({\n                value: token.dateCreated,\n                fixed: new Date(1508208080000), // National Pasta Day\n              })}\n            />\n          </Time>\n        </div>\n      </Details>\n    </StyledPanelItem>\n  );\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  flex-direction: column;\n  padding: ${space(2)};\n`;\n\nconst Controls = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${space(1)};\n`;\n\nconst InputWrapper = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nconst Details = styled('div')`\n  display: flex;\n  margin-top: ${space(1)};\n`;\n\nconst ScopesWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst ScopeList = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4;\n`;\n\nconst Time = styled('time')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4;\n`;\n\nconst Heading = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-transform: uppercase;\n  color: ${p => p.theme.subText};\n  margin-bottom: ${space(1)};\n`;\n\nexport default ApiTokenRow;\n","import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport AlertLink from 'sentry/components/alertLink';\nimport Button from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {InternalAppApiToken, Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport ApiTokenRow from 'sentry/views/settings/account/apiTokenRow';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype Props = {\n  organization: Organization;\n} & AsyncView['props'];\n\ntype State = {\n  tokenList: InternalAppApiToken[] | null;\n} & AsyncView['state'];\n\nexport class ApiTokens extends AsyncView<Props, State> {\n  getTitle() {\n    return t('API Tokens');\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      tokenList: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['tokenList', '/api-tokens/']];\n  }\n\n  handleRemoveToken = (token: InternalAppApiToken) => {\n    addLoadingMessage();\n    const oldTokenList = this.state.tokenList;\n\n    this.setState(\n      state => ({\n        tokenList: state.tokenList?.filter(tk => tk.token !== token.token) ?? [],\n      }),\n      async () => {\n        try {\n          await this.api.requestPromise('/api-tokens/', {\n            method: 'DELETE',\n            data: {token: token.token},\n          });\n\n          addSuccessMessage(t('Removed token'));\n        } catch (_err) {\n          addErrorMessage(t('Unable to remove token. Please try again.'));\n          this.setState({\n            tokenList: oldTokenList,\n          });\n        }\n      }\n    );\n  };\n\n  renderBody() {\n    const {organization} = this.props;\n    const {tokenList} = this.state;\n\n    const isEmpty = !Array.isArray(tokenList) || tokenList.length === 0;\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"sm\"\n        to=\"/settings/account/api/auth-tokens/new-token/\"\n        data-test-id=\"create-token\"\n      >\n        {t('Create New Token')}\n      </Button>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title=\"Auth Tokens\" action={action} />\n        <AlertLink\n          to={`/settings/${organization?.slug ?? ''}/developer-settings/new-internal`}\n        >\n          {t(\n            \"Auth Tokens are tied to the logged in user, meaning they'll stop working if the user leaves the organization! We suggest using internal integrations to create/manage tokens tied to the organization instead.\"\n          )}\n        </AlertLink>\n        <TextBlock>\n          {t(\n            \"Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.\"\n          )}\n        </TextBlock>\n        <TextBlock>\n          {tct(\n            'For more information on how to use the web API, see our [link:documentation].',\n            {\n              link: <ExternalLink href=\"https://docs.sentry.io/api/\" />,\n            }\n          )}\n        </TextBlock>\n        <Panel>\n          <PanelHeader>{t('Auth Token')}</PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't created any authentication tokens yet.\")}\n              </EmptyMessage>\n            )}\n\n            {tokenList?.map(token => (\n              <ApiTokenRow\n                key={token.token}\n                token={token}\n                onRemove={this.handleRemoveToken}\n              />\n            ))}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ApiTokens);\n"],"names":["AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","ApiTokenRow","token","onRemove","StyledPanelItem","Controls","InputWrapper","getDynamicText","value","fixed","size","onClick","icon","isCircled","t","Details","ScopesWrapper","Heading","ScopeList","scopes","join","Time","date","dateCreated","Date","PanelItem","space","p","theme","fontSizeRelativeSmall","fontSizeMedium","subText","ApiTokens","addLoadingMessage","oldTokenList","state","tokenList","setState","filter","tk","async","api","requestPromise","method","data","addSuccessMessage","_err","addErrorMessage","getDefaultState","super","getEndpoints","renderBody","organization","props","isEmpty","Array","isArray","length","action","priority","to","slug","tct","link","href","map","handleRemoveToken","withOrganization"],"sourceRoot":""}