{"version":3,"file":"chunks/app_utils_performance_vitals_constants_tsx-app_views_replays_replays_tsx-node_modules_lodash_-a1fc64.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/searchBar.tsx","webpack:///./app/components/replays/replaysFeatureBadge.tsx","webpack:///./app/utils/performance/vitals/constants.tsx","webpack:///./app/utils/replays/hooks/useReplayList.tsx","webpack:///./app/utils/withTags.tsx","webpack:///./app/views/replays/filters.tsx","webpack:///./app/views/replays/replays.tsx","webpack:///../node_modules/lodash/_charsStartIndex.js","webpack:///../node_modules/lodash/assign.js","webpack:///../node_modules/lodash/trimStart.js"],"sourcesContent":["import {useEffect} from 'react';\nimport assign from 'lodash/assign';\nimport flatten from 'lodash/flatten';\nimport memoize from 'lodash/memoize';\nimport omit from 'lodash/omit';\n\nimport {fetchTagValues} from 'sentry/actionCreators/tags';\nimport SmartSearchBar from 'sentry/components/smartSearchBar';\nimport {NEGATION_OPERATOR, SEARCH_WILDCARD} from 'sentry/constants';\nimport {Organization, SavedSearchType, TagCollection} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {CustomMeasurementCollection} from 'sentry/utils/customMeasurements/customMeasurements';\nimport {\n  Field,\n  FIELD_TAGS,\n  isAggregateField,\n  isEquation,\n  isMeasurement,\n  SEMVER_TAGS,\n  SPAN_OP_BREAKDOWN_FIELDS,\n  TRACING_FIELDS,\n} from 'sentry/utils/discover/fields';\nimport {FieldKey, FieldKind} from 'sentry/utils/fields';\nimport Measurements from 'sentry/utils/measurements/measurements';\nimport useApi from 'sentry/utils/useApi';\nimport withTags from 'sentry/utils/withTags';\nimport {isCustomMeasurement} from 'sentry/views/dashboardsV2/utils';\n\nconst SEARCH_SPECIAL_CHARS_REGEXP = new RegExp(\n  `^${NEGATION_OPERATOR}|\\\\${SEARCH_WILDCARD}`,\n  'g'\n);\n\nconst getFunctionTags = (fields: Readonly<Field[]>) =>\n  Object.fromEntries(\n    fields\n      .filter(\n        item =>\n          !Object.keys(FIELD_TAGS).includes(item.field) &&\n          !isEquation(item.field) &&\n          !isCustomMeasurement(item.field)\n      )\n      .map(item => [\n        item.field,\n        {key: item.field, name: item.field, kind: FieldKind.FUNCTION},\n      ])\n  );\n\nconst getFieldTags = () =>\n  Object.fromEntries(\n    Object.keys(FIELD_TAGS).map(key => [\n      key,\n      {\n        ...FIELD_TAGS[key],\n        kind: FieldKind.FIELD,\n      },\n    ])\n  );\n\nconst getMeasurementTags = (\n  measurements: Parameters<\n    React.ComponentProps<typeof Measurements>['children']\n  >[0]['measurements']\n) =>\n  Object.fromEntries(\n    Object.keys(measurements).map(key => [\n      key,\n      {\n        ...measurements[key],\n        kind: FieldKind.MEASUREMENT,\n      },\n    ])\n  );\n\nconst getSpanTags = () => {\n  return Object.fromEntries(\n    SPAN_OP_BREAKDOWN_FIELDS.map(key => [key, {key, name: key, kind: FieldKind.METRICS}])\n  );\n};\n\nconst getSemverTags = () =>\n  Object.fromEntries(\n    Object.keys(SEMVER_TAGS).map(key => [\n      key,\n      {\n        ...SEMVER_TAGS[key],\n        kind: FieldKind.FIELD,\n      },\n    ])\n  );\n\nexport type SearchBarProps = Omit<React.ComponentProps<typeof SmartSearchBar>, 'tags'> & {\n  organization: Organization;\n  tags: TagCollection;\n  customMeasurements?: CustomMeasurementCollection;\n  fields?: Readonly<Field[]>;\n  includeSessionTagsValues?: boolean;\n  /**\n   * Used to define the max height of the menu in px.\n   */\n  maxMenuHeight?: number;\n  maxSearchItems?: React.ComponentProps<typeof SmartSearchBar>['maxSearchItems'];\n  omitTags?: string[];\n  projectIds?: number[] | Readonly<number[]>;\n};\n\nfunction SearchBar(props: SearchBarProps) {\n  const {\n    maxSearchItems,\n    organization,\n    tags,\n    omitTags,\n    fields,\n    projectIds,\n    includeSessionTagsValues,\n    maxMenuHeight,\n    customMeasurements,\n  } = props;\n\n  const api = useApi();\n\n  useEffect(() => {\n    // Clear memoized data on mount to make tests more consistent.\n    getEventFieldValues.cache.clear?.();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [projectIds]);\n\n  // Returns array of tag values that substring match `query`; invokes `callback`\n  // with data when ready\n  const getEventFieldValues = memoize(\n    (tag, query, endpointParams): Promise<string[]> => {\n      const projectIdStrings = (projectIds as Readonly<number>[])?.map(String);\n\n      if (isAggregateField(tag.key) || isMeasurement(tag.key)) {\n        // We can't really auto suggest values for aggregate fields\n        // or measurements, so we simply don't\n        return Promise.resolve([]);\n      }\n\n      return fetchTagValues(\n        api,\n        organization.slug,\n        tag.key,\n        query,\n        projectIdStrings,\n        endpointParams,\n\n        // allows searching for tags on transactions as well\n        true,\n\n        // allows searching for tags on sessions as well\n        includeSessionTagsValues\n      ).then(\n        results =>\n          flatten(results.filter(({name}) => defined(name)).map(({name}) => name)),\n        () => {\n          throw new Error('Unable to fetch event field values');\n        }\n      );\n    },\n    ({key}, query) => `${key}-${query}`\n  );\n\n  const getTagList = (\n    measurements: Parameters<\n      React.ComponentProps<typeof Measurements>['children']\n    >[0]['measurements']\n  ) => {\n    const functionTags = getFunctionTags(fields ?? []);\n    const fieldTags = getFieldTags();\n    const measurementsWithKind = getMeasurementTags(measurements);\n    const spanTags = getSpanTags();\n    const semverTags = getSemverTags();\n\n    const orgHasPerformanceView = organization.features.includes('performance-view');\n\n    const combinedTags: TagCollection = orgHasPerformanceView\n      ? Object.assign({}, measurementsWithKind, spanTags, fieldTags, functionTags)\n      : omit(fieldTags, TRACING_FIELDS);\n\n    const tagsWithKind = Object.fromEntries(\n      Object.keys(tags).map(key => [\n        key,\n        {\n          ...tags[key],\n          kind: FieldKind.TAG,\n        },\n      ])\n    );\n\n    assign(combinedTags, tagsWithKind, fieldTags, semverTags);\n\n    const sortedTagKeys = Object.keys(combinedTags);\n    sortedTagKeys.sort((a, b) => {\n      return a.toLowerCase().localeCompare(b.toLowerCase());\n    });\n\n    combinedTags.has = {\n      key: FieldKey.HAS,\n      name: 'Has property',\n      values: sortedTagKeys,\n      predefined: true,\n      kind: FieldKind.FIELD,\n    };\n\n    return omit(combinedTags, omitTags ?? []);\n  };\n\n  return (\n    <Measurements>\n      {({measurements}) => (\n        <SmartSearchBar\n          hasRecentSearches\n          savedSearchType={SavedSearchType.EVENT}\n          onGetTagValues={getEventFieldValues}\n          supportedTags={getTagList({...measurements, ...(customMeasurements ?? {})})}\n          prepareQuery={query => {\n            // Prepare query string (e.g. strip special characters like negation operator)\n            return query.replace(SEARCH_SPECIAL_CHARS_REGEXP, '');\n          }}\n          maxSearchItems={maxSearchItems}\n          excludedTags={['environment']}\n          maxMenuHeight={maxMenuHeight ?? 300}\n          customPerformanceMetrics={customMeasurements}\n          {...props}\n        />\n      )}\n    </Measurements>\n  );\n}\n\nexport default withTags(SearchBar);\n","import FeatureBadge from 'sentry/components/featureBadge';\n\nfunction ReplaysFeatureBadge(\n  props: Omit<React.ComponentProps<typeof FeatureBadge>, 'type'>\n) {\n  return <FeatureBadge {...props} type=\"alpha\" />;\n}\n\nexport default ReplaysFeatureBadge;\n","import {t} from 'sentry/locale';\nimport {measurementType} from 'sentry/utils/discover/fields';\nimport {MobileVital, WebVital} from 'sentry/utils/fields';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\n\nexport const WEB_VITAL_DETAILS: Record<WebVital, Vital> = {\n  [WebVital.FP]: {\n    slug: 'fp',\n    name: t('First Paint'),\n    acronym: 'FP',\n    description: t(\n      'Render time of the first pixel loaded in the viewport (may overlap with FCP).'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FP),\n  },\n  [WebVital.FCP]: {\n    slug: 'fcp',\n    name: t('First Contentful Paint'),\n    acronym: 'FCP',\n    description: t(\n      'Render time of the first image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FCP),\n  },\n  [WebVital.LCP]: {\n    slug: 'lcp',\n    name: t('Largest Contentful Paint'),\n    acronym: 'LCP',\n    description: t(\n      'Render time of the largest image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 4000,\n    type: measurementType(WebVital.LCP),\n  },\n  [WebVital.FID]: {\n    slug: 'fid',\n    name: t('First Input Delay'),\n    acronym: 'FID',\n    description: t(\n      'Response time of the browser to a user interaction (clicking, tapping, etc).'\n    ),\n    poorThreshold: 300,\n    type: measurementType(WebVital.FID),\n  },\n  [WebVital.CLS]: {\n    slug: 'cls',\n    name: t('Cumulative Layout Shift'),\n    acronym: 'CLS',\n    description: t(\n      'Sum of layout shift scores that measure the visual stability of the page.'\n    ),\n    poorThreshold: 0.25,\n    type: measurementType(WebVital.CLS),\n  },\n  [WebVital.TTFB]: {\n    slug: 'ttfb',\n    name: t('Time to First Byte'),\n    acronym: 'TTFB',\n    description: t(\n      \"The time that it takes for a user's browser to receive the first byte of page content.\"\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.TTFB),\n  },\n  [WebVital.RequestTime]: {\n    slug: 'ttfb.requesttime',\n    name: t('Request Time'),\n    acronym: 'RT',\n    description: t(\n      'Captures the time spent making the request and receiving the first byte of the response.'\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.RequestTime),\n  },\n};\n\nexport const MOBILE_VITAL_DETAILS: Record<MobileVital, Vital> = {\n  [MobileVital.AppStartCold]: {\n    slug: 'app_start_cold',\n    name: t('App Start Cold'),\n    description: t(\n      'Cold start is a measure of the application start up time from scratch.'\n    ),\n    type: measurementType(MobileVital.AppStartCold),\n  },\n  [MobileVital.AppStartWarm]: {\n    slug: 'app_start_warm',\n    name: t('App Start Warm'),\n    description: t(\n      'Warm start is a measure of the application start up time while still in memory.'\n    ),\n    type: measurementType(MobileVital.AppStartWarm),\n  },\n  [MobileVital.FramesTotal]: {\n    slug: 'frames_total',\n    name: t('Total Frames'),\n    description: t(\n      'Total frames is a count of the number of frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesTotal),\n  },\n  [MobileVital.FramesSlow]: {\n    slug: 'frames_slow',\n    name: t('Slow Frames'),\n    description: t(\n      'Slow frames is a count of the number of slow frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesSlow),\n  },\n  [MobileVital.FramesFrozen]: {\n    slug: 'frames_frozen',\n    name: t('Frozen Frames'),\n    description: t(\n      'Frozen frames is a count of the number of frozen frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesFrozen),\n  },\n  [MobileVital.FramesSlowRate]: {\n    slug: 'frames_slow_rate',\n    name: t('Slow Frames Rate'),\n    description: t(\n      'Slow Frames Rate is the percentage of frames recorded within a transaction that is considered slow.'\n    ),\n    type: measurementType(MobileVital.FramesSlowRate),\n  },\n  [MobileVital.FramesFrozenRate]: {\n    slug: 'frames_frozen_rate',\n    name: t('Frozen Frames Rate'),\n    description: t(\n      'Frozen Frames Rate is the percentage of frames recorded within a transaction that is considered frozen.'\n    ),\n    type: measurementType(MobileVital.FramesFrozenRate),\n  },\n  [MobileVital.StallCount]: {\n    slug: 'stall_count',\n    name: t('Stalls'),\n    description: t(\n      'Stalls is the number of times the application stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallCount),\n  },\n  [MobileVital.StallTotalTime]: {\n    slug: 'stall_total_time',\n    name: t('Total Stall Time'),\n    description: t(\n      'Stall Total Time is the total amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallTotalTime),\n  },\n  [MobileVital.StallLongestTime]: {\n    slug: 'stall_longest_time',\n    name: t('Longest Stall Time'),\n    description: t(\n      'Stall Longest Time is the longest amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallLongestTime),\n  },\n  [MobileVital.StallPercentage]: {\n    slug: 'stall_percentage',\n    name: t('Stall Percentage'),\n    description: t(\n      'Stall Percentage is the percentage of the transaction duration the application was stalled.'\n    ),\n    type: measurementType(MobileVital.StallPercentage),\n  },\n};\n\nexport enum Browser {\n  CHROME = 'Chrome',\n  EDGE = 'Edge',\n  OPERA = 'Opera',\n  FIREFOX = 'Firefox',\n  SAFARI = 'Safari',\n  IE = 'IE',\n}\n","import {useCallback, useEffect, useRef, useState} from 'react';\n\nimport type {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport fetchReplayList from 'sentry/utils/replays/fetchReplayList';\nimport useApi from 'sentry/utils/useApi';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport type {ReplayListLocationQuery} from 'sentry/views/replays/types';\n\ntype Options = {\n  eventView: EventView;\n  organization: Organization;\n};\n\ntype State = Awaited<ReturnType<typeof fetchReplayList>>;\n\ntype Result = State;\n\nfunction useReplayList({eventView, organization}: Options): Result {\n  const api = useApi();\n  const location = useLocation<ReplayListLocationQuery>();\n  const querySearchRef = useRef<string>();\n\n  const [data, setData] = useState<State>({\n    fetchError: undefined,\n    isFetching: true,\n    pageLinks: null,\n    replays: [],\n  });\n\n  const loadReplays = useCallback(async () => {\n    setData(prev => ({\n      ...prev,\n      isFetching: true,\n    }));\n    const response = await fetchReplayList({\n      api,\n      organization,\n      location,\n      eventView,\n    });\n    setData(response);\n  }, [api, organization, location, eventView]);\n\n  useEffect(() => {\n    if (!querySearchRef.current || querySearchRef.current !== location.search) {\n      querySearchRef.current = location.search;\n      loadReplays();\n    }\n  }, [loadReplays, location.search]);\n\n  return data;\n}\n\nexport default useReplayList;\n","import {Component} from 'react';\n\nimport TagStore from 'sentry/stores/tagStore';\nimport {TagCollection} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedTagsProps = {\n  tags: TagCollection;\n};\n\ntype State = {\n  tags: TagCollection;\n};\n\n/**\n * HOC for getting *only* tags from the TagStore.\n */\nfunction withTags<P extends InjectedTagsProps>(WrappedComponent: React.ComponentType<P>) {\n  class WithTags extends Component<Omit<P, keyof InjectedTagsProps>, State> {\n    static displayName = `withTags(${getDisplayName(WrappedComponent)})`;\n\n    state: State = {\n      tags: TagStore.getState(),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    unsubscribe = TagStore.listen(\n      (tags: TagCollection) => this.setState({tags}),\n      undefined\n    );\n\n    render() {\n      const {tags, ...props} = this.props as P;\n      return <WrappedComponent {...({tags: tags ?? this.state.tags, ...props} as P)} />;\n    }\n  }\n\n  return WithTags;\n}\n\nexport default withTags;\n","import styled from '@emotion/styled';\n\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\n\ntype Props = {\n  handleSearchQuery: (query: string) => void;\n  organization: Organization;\n  query: string;\n};\n\nfunction ReplaysFilters({organization, handleSearchQuery, query}: Props) {\n  return (\n    <FilterContainer>\n      <PageFilterBar condensed>\n        <ProjectPageFilter resetParamsOnChange={['cursor']} />\n        <EnvironmentPageFilter resetParamsOnChange={['cursor']} />\n        <DatePageFilter alignDropdown=\"left\" resetParamsOnChange={['cursor']} />\n      </PageFilterBar>\n      <SearchBar\n        organization={organization}\n        defaultQuery=\"\"\n        query={query}\n        placeholder={t('Search')}\n        onSearch={handleSearchQuery}\n      />\n    </FilterContainer>\n  );\n}\n\nconst FilterContainer = styled('div')`\n  display: inline-grid;\n  grid-template-columns: minmax(0, max-content) minmax(20rem, 1fr);\n  gap: ${space(2)};\n  width: 100%;\n  margin-bottom: ${space(2)};\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nexport default ReplaysFilters;\n","import {Fragment, useMemo} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport PageHeading from 'sentry/components/pageHeading';\nimport Pagination from 'sentry/components/pagination';\nimport ReplaysFeatureBadge from 'sentry/components/replays/replaysFeatureBadge';\nimport {t} from 'sentry/locale';\nimport {PageContent, PageHeader} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport {DEFAULT_SORT, REPLAY_LIST_FIELDS} from 'sentry/utils/replays/fetchReplayList';\nimport useReplayList from 'sentry/utils/replays/hooks/useReplayList';\nimport {MutableSearch} from 'sentry/utils/tokenizeSearch';\nimport useMedia from 'sentry/utils/useMedia';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport ReplaysFilters from 'sentry/views/replays/filters';\nimport ReplayTable from 'sentry/views/replays/replayTable';\nimport type {ReplayListLocationQuery} from 'sentry/views/replays/types';\n\ntype Props = RouteComponentProps<{orgId: string}, {}, any, ReplayListLocationQuery>;\n\nfunction Replays({location}: Props) {\n  const organization = useOrganization();\n  const theme = useTheme();\n  const minWidthIsSmall = useMedia(`(min-width: ${theme.breakpoints.small})`);\n\n  const eventView = useMemo(() => {\n    const query = decodeScalar(location.query.query, '');\n    const conditions = new MutableSearch(query);\n\n    return EventView.fromNewQueryWithLocation(\n      {\n        id: '',\n        name: '',\n        version: 2,\n        fields: REPLAY_LIST_FIELDS,\n        projects: [],\n        query: conditions.formatString(),\n        orderby: decodeScalar(location.query.sort, DEFAULT_SORT),\n      },\n      location\n    );\n  }, [location]);\n\n  const {pathname, query} = location;\n  const {replays, pageLinks, isFetching, fetchError} = useReplayList({\n    organization,\n    eventView,\n  });\n\n  return (\n    <Fragment>\n      <StyledPageHeader>\n        <HeaderTitle>\n          <div>\n            {t('Replays')} <ReplaysFeatureBadge />\n          </div>\n        </HeaderTitle>\n      </StyledPageHeader>\n      <PageFiltersContainer>\n        <StyledPageContent>\n          <ReplaysFilters\n            query={query.query || ''}\n            organization={organization}\n            handleSearchQuery={searchQuery => {\n              browserHistory.push({\n                pathname,\n                query: {\n                  ...query,\n                  cursor: undefined,\n                  query: searchQuery.trim(),\n                },\n              });\n            }}\n          />\n          <ReplayTable\n            isFetching={isFetching}\n            fetchError={fetchError}\n            replays={replays}\n            showProjectColumn={minWidthIsSmall}\n            sort={eventView.sorts[0]}\n          />\n          <Pagination\n            pageLinks={pageLinks}\n            onCursor={(cursor, path, searchQuery) => {\n              browserHistory.push({\n                pathname: path,\n                query: {...searchQuery, cursor},\n              });\n            }}\n          />\n        </StyledPageContent>\n      </PageFiltersContainer>\n    </Fragment>\n  );\n}\n\nconst StyledPageHeader = styled(PageHeader)`\n  background-color: ${p => p.theme.surface100};\n  min-width: max-content;\n  margin: ${space(3)} ${space(0)} ${space(4)} ${space(4)};\n`;\n\nconst StyledPageContent = styled(PageContent)`\n  box-shadow: 0px 0px 1px ${p => p.theme.gray200};\n  background-color: ${p => p.theme.background};\n`;\n\nconst HeaderTitle = styled(PageHeading)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1;\n`;\n\nexport default Replays;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nmodule.exports = charsStartIndex;\n","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n","var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      start = charsStartIndex(strSymbols, stringToArray(chars));\n\n  return castSlice(strSymbols, start).join('');\n}\n\nmodule.exports = trimStart;\n"],"names":["SEARCH_SPECIAL_CHARS_REGEXP","RegExp","NEGATION_OPERATOR","SEARCH_WILDCARD","SearchBar","props","maxSearchItems","organization","tags","omitTags","fields","projectIds","includeSessionTagsValues","maxMenuHeight","customMeasurements","api","useApi","useEffect","getEventFieldValues","cache","clear","memoize","tag","query","endpointParams","projectIdStrings","map","String","isAggregateField","key","isMeasurement","Promise","resolve","fetchTagValues","slug","then","results","flatten","filter","name","defined","Error","getTagList","measurements","functionTags","Object","fromEntries","item","keys","FIELD_TAGS","includes","field","isEquation","isCustomMeasurement","kind","FieldKind","getFunctionTags","fieldTags","measurementsWithKind","getMeasurementTags","spanTags","SPAN_OP_BREAKDOWN_FIELDS","semverTags","SEMVER_TAGS","combinedTags","features","assign","omit","TRACING_FIELDS","tagsWithKind","sortedTagKeys","sort","a","b","toLowerCase","localeCompare","has","FieldKey","values","predefined","hasRecentSearches","savedSearchType","SavedSearchType","onGetTagValues","supportedTags","prepareQuery","replace","excludedTags","customPerformanceMetrics","withTags","ReplaysFeatureBadge","type","WEB_VITAL_DETAILS","WebVital","t","acronym","description","poorThreshold","measurementType","MOBILE_VITAL_DETAILS","MobileVital","Browser","eventView","location","useLocation","querySearchRef","useRef","data","setData","useState","fetchError","undefined","isFetching","pageLinks","replays","loadReplays","useCallback","async","prev","response","fetchReplayList","current","search","WrappedComponent","WithTags","Component","TagStore","this","setState","componentWillUnmount","unsubscribe","render","state","getDisplayName","ReplaysFilters","handleSearchQuery","FilterContainer","condensed","resetParamsOnChange","alignDropdown","defaultQuery","placeholder","onSearch","space","p","theme","breakpoints","small","Replays","useOrganization","useTheme","minWidthIsSmall","useMedia","useMemo","decodeScalar","conditions","MutableSearch","EventView","id","version","REPLAY_LIST_FIELDS","projects","formatString","orderby","DEFAULT_SORT","pathname","useReplayList","Fragment","StyledPageHeader","HeaderTitle","StyledPageContent","searchQuery","browserHistory","cursor","trim","showProjectColumn","sorts","onCursor","path","PageHeader","surface100","PageContent","gray200","background","PageHeading","baseIndexOf","module","exports","strSymbols","chrSymbols","index","length","assignValue","copyObject","createAssigner","isArrayLike","isPrototype","hasOwnProperty","prototype","object","source","call","baseToString","castSlice","charsStartIndex","stringToArray","toString","reTrimStart","string","chars","guard","start","join"],"sourceRoot":""}