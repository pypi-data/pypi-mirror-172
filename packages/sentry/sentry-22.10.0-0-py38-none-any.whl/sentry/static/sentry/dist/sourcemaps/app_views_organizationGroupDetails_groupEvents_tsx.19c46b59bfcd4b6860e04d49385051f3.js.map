{"version":3,"file":"chunks/app_views_organizationGroupDetails_groupEvents_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"iZAyEA,MAAMA,GAAuBC,E,sCAAAA,IAhB7B,YAAoF,IAAtE,KAACC,EAAD,aAAOC,EAAP,SAAqBC,GAAiD,EAClF,MAAMC,EAAOC,EAAAA,EAAAA,IAAgB,QAEvBC,GAAUC,EAAAA,EAAAA,UACd,IA/CJ,SAAuBH,EAAYF,EAA4BD,GAC7D,IAAKG,EACH,OAAO,EAGT,IAAII,EAAAA,EAAAA,KACF,OAAO,EAGT,IAAKC,MAAMC,QAAQR,EAAaS,aAC9B,OAAO,EAGT,MAAMC,EAAUV,EAAaS,YAAYE,KAAIC,GAAKA,EAAEC,KAEpD,IAAKH,EAAQI,SAASf,KAAUW,EAAQI,SAASd,EAAaD,MAAQ,IACpE,OAAO,EAGT,MAAMgB,EAAgBL,EAAQM,QAAQjB,GAEtC,OADqBW,EAAQM,QAAQhB,EAAaD,MAAQ,KACnCgB,CACxB,CAyBSE,CAAcf,EAAMF,EAAcD,IAExC,CAACC,EAAcD,EAAMG,IAGvB,OAAIgB,EAAAA,EAAAA,GAA+BjB,GAC1BA,EAAS,CAACG,YAGZA,EAAUH,EAAW,IAC7B,G,yRCzDD,SAASkB,EAAT,GAAwF,IAAjE,WAACC,EAAD,aAAapB,EAAb,QAA2BqB,EAA3B,UAAoCC,EAApC,SAA+CrB,GAAkB,EAKtF,OACE,QAAC,IAAD,CAAMF,KAAMC,EAAauB,gBAAzB,SACG,QAAC,QAACnB,GAAF,SAAeH,EAASG,EALnB,mBAAkBJ,EAAawB,QAAQF,YAAoBD,iBAAuBD,EAAWP,MAK7C,KAArD,GAGN,CAVQM,EAAAA,YAAAA,gBAYT,SAAerB,EAAAA,EAAAA,IAAiB2B,EAAAA,EAAAA,MAAKN,G,iHCrBrC,MAAMO,EAA2C,CAC/C,UAAW,aACX,UAAW,8BACX,UAAW,8BACX,UAAW,8BACX,UAAW,8BACX,UAAW,8BACX,UAAW,8BACX,YAAa,SACb,YAAa,YACb,YAAa,aACb,YAAa,WACb,YAAa,WACb,YAAa,WACb,YAAa,YACb,YAAa,WACb,YAAa,WACb,YAAa,YACb,YAAa,YACb,YAAa,YACb,YAAa,YACb,YAAa,6BACb,YAAa,WACb,YAAa,gBACb,YAAa,YACb,YAAa,iBACb,YAAa,WACb,YAAa,WACb,YAAa,gBACb,YAAa,gBACb,aAAc,WACd,aAAc,WACd,aAAc,gBACd,aAAc,gBACd,aAAc,WACd,aAAc,WACd,aAAc,YACd,aAAc,YACd,aAAc,gBACd,aAAc,gBACd,aAAc,YACd,aAAc,gBACd,aAAc,oBACd,aAAc,6BACd,aAAc,iBACd,aAAc,YACd,aAAc,gBACd,aAAc,oBACd,UAAW,uBACX,UAAW,uBACX,UAAW,sBACX,UAAW,sBACX,UAAW,uCACX,UAAW,uCACX,UAAW,uBACX,UAAW,uBACX,UAAW,qBACX,UAAW,qBACX,UAAW,qBACX,UAAW,qBACX,UAAW,wCACX,UAAW,wCACX,UAAW,wCACX,UAAW,wCACX,UAAW,sCACX,WAAY,sCACZ,WAAY,wCACZ,WAAY,wCACZ,UAAW,YACX,UAAW,YACX,UAAW,YACX,UAAW,cACX,UAAW,cACX,UAAW,cACX,UAAW,cACX,UAAW,cACX,UAAW,cACX,UAAW,cACX,UAAW,cACX,WAAY,6BACZ,WAAY,6BACZ,UAAW,WACX,UAAW,WACX,UAAW,WACX,UAAW,aACX,UAAW,aACX,WAAY,4BACZ,WAAY,4BACZ,WAAY,4BACZ,WAAY,4BACZ,UAAW,OACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,SACX,UAAW,wBACX,UAAW,wBACX,UAAW,wBACX,UAAW,wBACX,UAAW,wBACX,UAAW,wBACX,WAAY,wBACZ,WAAY,wBACZ,UAAW,wBACX,UAAW,wBACX,WAAY,wBACZ,WAAY,wBACZ,WAAY,wBACZ,WAAY,wBACZ,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,eACrB,WAAY,+BACZ,WAAY,+BACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,iBACZ,YAAa,iBACb,YAAa,iBACb,YAAa,iBACb,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,WAAY,uBACZ,aAAc,4BACd,aAAc,4BACd,aAAc,4BACd,aAAc,4BACd,aAAc,4BACd,aAAc,cACd,aAAc,2BACd,aAAc,2BACd,WAAY,e,oGCnJP,SAASC,EAAiBC,GAE/B,GAAqB,iBAAVA,EACT,OAAO,KAIT,GAAe,OAAXC,EACF,OAAOD,EAGT,MAAOE,KAAeC,GAAQH,EAAMI,MAAM,KAEpCC,EAAYP,EAAiBI,GACnC,YAAqBI,IAAdD,EAA0BL,EAAS,GAAEK,KAAaF,EAAKI,KAAK,MACpE,CAWD,SAASC,EAAT,GAAmF,IAA/D,MAACC,EAAD,SAAQpC,GAAuD,EACjF,MAAMqC,GAAajC,EAAAA,EAAAA,UAAQ,IAAMsB,EAAiBU,IAAQ,CAACA,IAE3D,OAAOC,GACL,gBAAM,eAAa,qBAAnB,SACGrC,EAAWA,EAASqC,GAAcA,IAEnC,IACL,C,45BCVD,MAAMC,EAA8B,IAAIC,OACrC,IAAGC,EAAAA,QAAuBC,EAAAA,KAC3B,KA4EF,SAASC,EAAUC,GACjB,MAAM,eACJC,EADI,aAEJ7C,EAFI,KAGJ8C,EAHI,SAIJC,EAJI,OAKJC,EALI,WAMJC,EANI,yBAOJC,EAPI,cAQJC,EARI,mBASJC,GACER,EAEES,GAAMC,EAAAA,EAAAA,MAEZC,EAAAA,EAAAA,YAAU,KAERC,EAAoBC,MAAMC,SAA1B,GAEC,CAACT,IAIJ,MAAMO,EAAsBG,KAC1B,CAACC,EAAKC,EAAOC,KACX,MAAMC,EAAoBd,GAAmCtC,IAAIqD,QAEjE,OAAIC,EAAAA,EAAAA,IAAiBL,EAAIM,OAAQC,EAAAA,EAAAA,IAAcP,EAAIM,KAG1CE,QAAQC,QAAQ,KAGlBC,EAAAA,EAAAA,IACLjB,EACArD,EAAawB,KACboC,EAAIM,IACJL,EACAE,EACAD,GAGA,EAGAZ,GACAqB,MACAC,GACEC,IAAQD,EAAQE,QAAO,QAAC,KAACC,GAAF,SAAYC,EAAAA,EAAAA,IAAQD,EAApB,IAA2BhE,KAAI,QAAC,KAACgE,GAAF,SAAYA,CAAZ,OACxD,KACE,MAAM,IAAIE,MAAM,qCAAhB,GAjBJ,IAqBF,CAAC,EAAOhB,KAAR,IAAC,IAACK,GAAF,QAAmB,GAAEA,KAAOL,GAA5B,IAGIiB,EACJC,IAIA,MAAMC,EAvIehC,IACvBiC,OAAOC,YACLlC,EACG0B,QACCS,IACGF,OAAOG,KAAKC,EAAAA,IAAYvE,SAASqE,EAAKG,UACtCC,EAAAA,EAAAA,IAAWJ,EAAKG,UAChBE,EAAAA,EAAAA,IAAoBL,EAAKG,SAE7B3E,KAAIwE,GAAQ,CACXA,EAAKG,MACL,CAACpB,IAAKiB,EAAKG,MAAOX,KAAMQ,EAAKG,MAAOG,KAAMC,EAAAA,GAAAA,cA4HzBC,CAAgB3C,GAAU,IACzC4C,EAxHRX,OAAOC,YACLD,OAAOG,KAAKC,EAAAA,IAAY1E,KAAIuD,GAAO,CACjCA,EACA,IACKmB,EAAAA,GAAWnB,GACduB,KAAMC,EAAAA,GAAAA,WAoHJG,EA9GRd,IAIAE,OAAOC,YACLD,OAAOG,KAAKL,GAAcpE,KAAIuD,GAAO,CACnCA,EACA,IACKa,EAAab,GAChBuB,KAAMC,EAAAA,GAAAA,iBAqGmBI,CAAmBf,GAC1CgB,EAhGDd,OAAOC,YACZc,EAAAA,GAAAA,KAA6B9B,GAAO,CAACA,EAAK,CAACA,MAAKS,KAAMT,EAAKuB,KAAMC,EAAAA,GAAAA,aAgG3DO,EA3FRhB,OAAOC,YACLD,OAAOG,KAAKc,EAAAA,IAAavF,KAAIuD,GAAO,CAClCA,EACA,IACKgC,EAAAA,GAAYhC,GACfuB,KAAMC,EAAAA,GAAAA,WA0FJS,EAFwBnG,EAAaoG,SAAStF,SAAS,oBAGzDmE,OAAOoB,OAAO,CAAC,EAAGR,EAAsBE,EAAUH,EAAWZ,GAC7DsB,IAAKV,EAAWW,EAAAA,IAEdC,EAAevB,OAAOC,YAC1BD,OAAOG,KAAKtC,GAAMnC,KAAIuD,GAAO,CAC3BA,EACA,IACKpB,EAAKoB,GACRuB,KAAMC,EAAAA,GAAAA,SAKZW,IAAOF,EAAcK,EAAcZ,EAAWK,GAE9C,MAAMQ,EAAgBxB,OAAOG,KAAKe,GAalC,OAZAM,EAAcC,MAAK,CAACC,EAAGC,IACdD,EAAEE,cAAcC,cAAcF,EAAEC,iBAGzCV,EAAaY,IAAM,CACjB7C,IAAK8C,EAAAA,GAAAA,IACLrC,KAAM,eACNsC,OAAQR,EACRS,YAAY,EACZzB,KAAMC,EAAAA,GAAAA,OAGDY,IAAKH,EAAcpD,GAAY,GAAtC,EAGF,OACE,QAAC,IAAD,UACG,QAAC,aAACgC,GAAF,SACC,QAAC,IAAD,CACEoC,mBAAiB,EACjBC,gBAAiBC,EAAAA,GAAAA,MACjBC,eAAgB9D,EAChB+D,cAAezC,EAAW,IAAIC,KAAkB3B,GAAsB,CAAC,IACvEoE,aAAc3D,GAELA,EAAM4D,QAAQlF,EAA6B,IAEpDM,eAAgBA,EAChB6E,aAAc,CAAC,eACfvE,cAAeA,GAAiB,IAChCwE,yBAA0BvE,KACtBR,GAdP,GAmBN,CA3HQD,EAAAA,YAAAA,YA6HT,SAAeiF,EAAAA,EAAAA,GAASjF,E,6UC5LxB,QA1BA,SAA+CkF,GAC7C,MAAMC,UAAiBC,EAAAA,UAAmD,uDAGzD,CACbjF,KAAMkF,EAAAA,EAAAA,cAJgE,0BAW1DA,EAAAA,EAAAA,QACXlF,GAAwBmF,KAAKC,SAAS,CAACpF,eACxCZ,GAbsE,CAOxEiG,uBACEF,KAAKG,aACN,CAODC,SACE,MAAM,KAACvF,KAASF,GAASqF,KAAKrF,MAC9B,OAAO,QAACiF,EAAD,CAAwB/E,KAAMA,GAAQmF,KAAKK,MAAMxF,QAASF,GAClE,EAGH,OAtBMkF,EADiF,+BACjFA,EADiF,cAE/D,aAAWS,EAAAA,EAAAA,GAAeV,OAqB3CC,CACR,C,89BCpBD,SAASU,EAAT,GAQU,IARc,UACtBC,EADsB,MAEtBC,EAFsB,UAGtBpH,EAHsB,MAItBqH,EAJsB,QAKtBC,EALsB,QAMtBC,EANsB,QAOtBC,GACQ,EACR,MAAMC,EAAiBL,EAAMM,WAC3B,QAAC,IAAD,CAAe1H,UAAWA,EAAWD,QAASqH,EAAM7H,GAAIO,WAAYsH,EAAMM,UAA1E,SACGC,GACCA,GACE,2BAC6B,mBAA1BP,EAAMM,WAAWE,KAA4B,WAAa,aAD7D,IAC4E,KAC1E,aAAGC,KAAO,GAAEF,eAAZ,SAA+BP,EAAMM,WAAWrE,OAFlD,MAGE,QAAC,IAAD,CAAUyE,MAAOV,EAAMM,WAAWK,MAAQ,IAH5C,OAKE,OAT+B,KAcnCC,EAASrE,OAAOC,YAAYwD,EAAM5F,KAAKnC,KAAIiD,GAAO,CAACA,EAAIM,IAAKN,EAAIvB,UAEtE,OACE,cAAmBoG,UAAWA,EAA9B,WACE,wBACE,yBACE,QAAC,IAAD,CACEc,GAAK,kBAAiBZ,YAAgBC,YAAkBF,EAAM7H,MADhE,UAGE,QAAC,IAAD,CAAU2I,KAAMd,EAAMe,YAAaC,MAAI,EAACC,SAAO,EAACC,UAAQ,OAE1D,0BAAQlB,EAAMmB,MAAMC,OAAO,EAAG,OAC7Bf,OAIJD,IACC,cAAIL,UAAU,6BAAd,SACGC,EAAMxI,MACL,0BACE,QAAC,IAAD,CAGEA,KAAMwI,EAAMxI,KACZmJ,KAAM,GACNZ,UAAU,SACVsB,UAAU,IAEXrB,EAAMxI,KAAK8J,UAGd,iCAKLnB,EAAQlI,KAAIiD,IACX,wBACE,wBACe,WAAZA,EAAIM,KACH,QAAC,IAAD,CAAY7B,MAAOiH,EAAO1F,EAAIM,OAE9BoF,EAAO1F,EAAIM,QALRN,EAAIM,SAlCRwE,EAAM7H,GA8ClB,CAxEQ2H,EAAAA,YAAAA,iBA0ET,SAAe1I,EAAAA,EAAAA,GAAiB0I,G,4BCjFhC,MAAMyB,UAAoBlC,EAAAA,UACxBM,SACE,MAAM,OAAC6B,EAAD,QAASrB,EAAT,MAAkBF,EAAlB,UAAyBrH,EAAzB,QAAoCsH,GAAWX,KAAKrF,MAEpDkG,IAAYoB,EAAOC,MAAKzB,GAASA,EAAMxI,OAE7C,OACE,iBAAOuI,UAAU,qBAAjB,WACE,2BACE,yBACE,wBAAK2B,EAAAA,EAAAA,GAAE,QACNtB,IAAW,wBAAKsB,EAAAA,EAAAA,GAAE,UAElBvB,EAAQlI,KAAIiD,IACX,uBAAmBA,EAAIe,MAAdf,EAAIM,aAInB,0BACGgG,EAAOvJ,KAAI+H,IACV,QAAC,EAAD,CAEEA,MAAOA,EACPC,MAAOA,EACPrH,UAAWA,EACXsH,QAASA,EACTC,QAASA,EACTC,QAASA,GANJJ,EAAM7H,UAYtB,EAjCGoJ,EAAAA,YAAAA,cAoCN,U,wfC/BA,MAAMI,EAAkBzH,IACtB,MAAM,SACJ0H,EADI,aAEJtK,EAFI,QAGJuK,EAHI,YAIJC,EAJI,aAKJ9C,EALI,UAMJpG,EANI,gBAOJmJ,GACE7H,GACG8H,EAAOC,IAAYC,EAAAA,EAAAA,UAAiB,IAErC5H,EAAmB,CACvB,KACA,cACA,QACA,UACA,cACA,kBACIwH,EAAc,CAAC,wBAA0B,GAC7C,YACA,cACA,YAGIK,EAAuBC,EAAAA,GAAAA,aAAuBlI,EAAM0H,UAC1DO,EAAU7H,OAASA,EAAOrC,KAAIoK,IAAa,CAAEzF,MAAOyF,MAEpDF,EAAUG,OAAQC,EAAAA,EAAAA,IAAYX,GAAU5F,QAAOgC,GAAQ1D,EAAOlC,SAAS4F,EAAKpB,SAEvEuF,EAAUG,MAAME,SACnBL,EAAUG,MAAQ,CAAC,CAAC1F,MAAO,YAAaG,KAAM,UAGhD,MAAM0F,EAAUX,EACX,yBAAwBD,IACxB,YAAWA,IAChBM,EAAUhH,MAAS,GAAEsH,KAAWvI,EAAM0H,SAASzG,MAAMA,OAAS,KAC9DgH,EAAUO,YAAc,MAExB,MAAMC,EAAmC,EACvCjB,EAAAA,EAAAA,GAAE,aACFA,EAAAA,EAAAA,GAAE,gBACFA,EAAAA,EAAAA,GAAE,aACFA,EAAAA,EAAAA,GAAE,YACFA,EAAAA,EAAAA,GAAE,gBACFA,EAAAA,EAAAA,GAAE,WACEI,EAAc,EAACJ,EAAAA,EAAAA,GAAE,mBAAqB,IAC1CA,EAAAA,EAAAA,GAAE,cACFA,EAAAA,EAAAA,GAAE,gBACFA,EAAAA,EAAAA,GAAE,aAGJ,OAAIM,GACK,QAAC,IAAD,CAAcY,QAASZ,KAI9B,QAAC,IAAD,CACEG,UAAWA,EACXP,SAAUA,EACVC,QAASA,EACTvK,aAAcA,EACd0H,aAAcA,EACdpG,UAAWA,EACXmJ,gBAAiBA,EACjBE,SAAU,KACR,EAEFY,gBAAgB,GAChBF,aAAcA,EAAaG,SAb/B,EAzDInB,EAAAA,YAAAA,iBA2EN,UCrDM3C,EAAe,CAAC,cAAe,QAAS,WAAY,0BAE1D,MAAM+D,UAAoB1D,EAAAA,UACxB2D,YAAY9I,GACV+I,MAAM/I,IADkB,4BAmCViB,IACd,MAAM+H,EAAoB,IAAI3D,KAAKrF,MAAM0H,SAASzG,OAClD+H,EAAkB/H,MAAQA,EAC1B,MAAM,QAAC+E,EAAD,MAAUD,GAASV,KAAKrF,MAAMiJ,OAEpCC,EAAAA,eAAAA,KAAoB,CAClBC,SAAW,kBAAiBpD,YAAgBC,YAC5C/E,MAAO+H,GAFT,KAxCwB,yBA8Cd,KACV3D,KAAKC,SAAS,CACZ8D,SAAS,EACTtB,OAAO,IAGT,MAAM7G,EAAQ,IACToI,IAAKhE,KAAKrF,MAAM0H,SAASzG,MAAO,CAAC,SAAU,gBAC9CqI,MAAO,GACPrI,MAAOoE,KAAKK,MAAMzE,OAGfoE,KAAKK,MAAM6D,uBACdlE,KAAKrF,MAAMS,IAAI+I,QAAS,WAAUnE,KAAKrF,MAAMiJ,OAAOjD,kBAAmB,CACrE/E,QACAwI,OAAQ,MACRC,QAAS,CAACC,EAAMC,EAAGC,KACjBxE,KAAKC,SAAS,CACZwE,UAAWH,EACX7B,OAAO,EACPsB,SAAS,EACTW,UAAWF,GAAMG,kBAAkB,SAAW,IAJhD,EAOFlC,MAAOmC,IACL5E,KAAKC,SAAS,CACZwC,OAAOoC,EAAAA,EAAAA,GAAcD,GACrBb,SAAS,GAFX,GAML,IA1ED,MAAMe,EAAc9E,KAAKrF,MAAM0H,SAASzG,MAClCsI,IACFlE,KAAKrF,MAAMoK,MAAMnM,IACnBoH,KAAKrF,MAAM5C,aAAaoG,SAAStF,SAAS,qCAE5CmH,KAAKK,MAAQ,CACXoE,UAAW,GACXV,SAAS,EACTtB,OAAO,EACPiC,UAAW,GACX9I,MAAOkJ,EAAYlJ,OAAS,GAC5BsI,wBAEH,CAEDc,4BACEhF,KAAKiF,WACN,CAEDC,iCAAiCC,GAC/B,GAAInF,KAAKrF,MAAM0H,SAAS+C,SAAWD,EAAU9C,SAAS+C,OAAQ,CAC5D,MAAMN,EAAcK,EAAU9C,SAASzG,MAEvCoE,KAAKC,SACH,CACErE,MAAOkJ,EAAYlJ,OAErBoE,KAAKiF,UAER,CACF,CA+CDI,uBACE,OACE,QAAC,IAAD,WACE,uBAAIlD,EAAAA,EAAAA,GAAE,gDAGX,CAEDmD,cACE,OACE,QAAC,IAAD,WACE,uBAAInD,EAAAA,EAAAA,GAAE,6CAGX,CAED+B,wBACE,OACE,QAAC,EAAD,CACE5B,QAAStC,KAAKrF,MAAMoK,MAAMnM,GAC1B2J,YAAavC,KAAKrF,MAAMoK,MAAMQ,gBAAkBC,EAAAA,GAAAA,YAChDnD,SAAUrC,KAAKrF,MAAM0H,SACrBtK,aAAciI,KAAKrF,MAAM5C,aACzBsB,UAAW2G,KAAKrF,MAAMoK,MAAMU,QAAQlM,KACpCiJ,gBAAiBxC,KAAKrF,MAAMoK,MAAMW,MAClCjG,aAAcA,GAGnB,CAEDkG,kBACE,MAAOzB,sBAAuB0B,GAAyB5F,KAAKK,MAE5D,OAAIuF,GAEA,QAAC,IAAD,CACE7N,aAAciI,KAAKrF,MAAM5C,aACzB8N,aAAa,GACbC,SAAU9F,KAAK+F,aACftG,aAAcA,EACd7D,MAAOoE,KAAKK,MAAMzE,MAClBsD,mBAAmB,KAKvB,QAAC,IAAD,CACE2G,aAAa,GACbG,aAAa7D,EAAAA,EAAAA,GAAE,yCACfvG,MAAOoE,KAAKK,MAAMzE,MAClBkK,SAAU9F,KAAK+F,cAGpB,CAEDE,gBACE,MAAM,MAAClB,EAAD,OAAQnB,GAAU5D,KAAKrF,MACvBiG,EAAUmE,EAAMlK,KAAK4B,QAAOd,GAAmB,SAAZA,EAAIM,OAAmB,GAEhE,OACE,QAAC,EAAD,CACE2E,QAASA,EACTqB,OAAQjC,KAAKK,MAAMoE,UACnB/D,MAAOkD,EAAOlD,MACdrH,UAAW0L,EAAMU,QAAQlM,KACzBoH,QAASiD,EAAOjD,SAGrB,CAEDuF,aACE,MAAM,sBAAChC,GAAyBlE,KAAKK,MAErC,IAAI8F,EAEJ,OAAIjC,EACKlE,KAAKkE,yBAGZiC,EADEnG,KAAKK,MAAM0D,SACN,QAAC,IAAD,IACE/D,KAAKK,MAAMoC,OACb,QAAC,IAAD,CAAcY,QAASrD,KAAKK,MAAMoC,MAAO2D,QAASpG,KAAKiF,YACrDjF,KAAKK,MAAMoE,UAAUxB,OAAS,EAChCjD,KAAKiG,gBACHjG,KAAKK,MAAMzE,OAA8B,KAArBoE,KAAKK,MAAMzE,MACjCoE,KAAKqF,uBAELrF,KAAKsF,eAIZ,QAAC,EAAAe,SAAD,YACE,QAAC,KAAD,CAAO7F,UAAU,aAAjB,UACE,QAAC,IAAD,UAAY2F,OAEd,QAAC,IAAD,CAAYzB,UAAW1E,KAAKK,MAAMqE,eAGvC,CAEDtE,SACE,OACE,QAAC,KAAD,WACE,QAAC,KAAD,CAAakG,WAAS,EAAtB,UACE,QAACC,EAAD,YACE,QAACC,EAAD,YACE,QAAC,IAAD,IACCxG,KAAK2F,qBAEP3F,KAAKkG,mBAKf,EAnMG1C,EAAAA,YAAAA,cAsMN,MAAMgD,GAAgB,OAAO,MAAP,qBAAH,qBAEVC,EAAAA,EAAAA,GAAM,GAFI,2CAMbF,GAAU,OAAO,MAAP,qBAAH,qBAEJE,EAAAA,EAAAA,GAAM,GAFF,KAOb,GAAe5O,EAAAA,EAAAA,IAAiB6O,EAAAA,EAAAA,GAAQlD,G","sources":["webpack:///./app/components/acl/role.tsx","webpack:///./app/components/attachmentUrl.tsx","webpack:///./app/constants/ios-device-list.tsx","webpack:///./app/components/deviceName.tsx","webpack:///./app/components/events/searchBar.tsx","webpack:///./app/utils/withTags.tsx","webpack:///./app/components/eventsTable/eventsTableRow.tsx","webpack:///./app/components/eventsTable/eventsTable.tsx","webpack:///./app/views/organizationGroupDetails/allEventsTable.tsx","webpack:///./app/views/organizationGroupDetails/groupEvents.tsx"],"sourcesContent":["import {useMemo} from 'react';\n\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Organization, User} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactElement | null;\n\nfunction checkUserRole(user: User, organization: Organization, role: RoleProps['role']) {\n  if (!user) {\n    return false;\n  }\n\n  if (isActiveSuperuser()) {\n    return true;\n  }\n\n  if (!Array.isArray(organization.orgRoleList)) {\n    return false;\n  }\n\n  const roleIds = organization.orgRoleList.map(r => r.id);\n\n  if (!roleIds.includes(role) || !roleIds.includes(organization.role ?? '')) {\n    return false;\n  }\n\n  const requiredIndex = roleIds.indexOf(role);\n  const currentIndex = roleIds.indexOf(organization.role ?? '');\n  return currentIndex >= requiredIndex;\n}\n\ninterface RoleProps {\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactElement | ChildrenRenderFn;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * Minimum required role\n   */\n  role: string;\n}\n\nfunction Role({role, organization, children}: RoleProps): React.ReactElement | null {\n  const user = ConfigStore.get('user');\n\n  const hasRole = useMemo(\n    () => checkUserRole(user, organization, role),\n    // It seems that this returns a stable reference, but\n    [organization, role, user]\n  );\n\n  if (isRenderFunc<ChildrenRenderFn>(children)) {\n    return children({hasRole});\n  }\n\n  return hasRole ? children : null;\n}\n\nconst withOrganizationRole = withOrganization(Role);\n\nexport {withOrganizationRole as Role};\n","import {memo} from 'react';\n\nimport {Role} from 'sentry/components/acl/role';\nimport {IssueAttachment, Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = {\n  attachment: IssueAttachment;\n  children: (downloadUrl: string | null) => React.ReactElement | null;\n  eventId: string;\n  organization: Organization;\n  projectId: string;\n};\n\nfunction AttachmentUrl({attachment, organization, eventId, projectId, children}: Props) {\n  function getDownloadUrl() {\n    return `/api/0/projects/${organization.slug}/${projectId}/events/${eventId}/attachments/${attachment.id}/`;\n  }\n\n  return (\n    <Role role={organization.attachmentsRole}>\n      {({hasRole}) => children(hasRole ? getDownloadUrl() : null)}\n    </Role>\n  );\n}\n\nexport default withOrganization(memo(AttachmentUrl));\n","// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n// generated using scripts/extract-ios-device-names.ts as part of build step.\n// the purpose of the script is to extract only the iOS information that Sentry cares about\n// and discard the rest of the JSON so we do not end up bloating bundle size.\n\nconst iOSDeviceMapping: Record<string, string> = {\n  'iPod1,1': 'iPod touch',\n  'iPod2,1': 'iPod touch (2nd generation)',\n  'iPod3,1': 'iPod touch (3rd generation)',\n  'iPod4,1': 'iPod touch (4th generation)',\n  'iPod5,1': 'iPod touch (5th generation)',\n  'iPod7,1': 'iPod touch (6th generation)',\n  'iPod9,1': 'iPod touch (7th generation)',\n  'iPhone1,1': 'iPhone',\n  'iPhone1,2': 'iPhone 3G',\n  'iPhone2,1': 'iPhone 3GS',\n  'iPhone3,1': 'iPhone 4',\n  'iPhone3,2': 'iPhone 4',\n  'iPhone3,3': 'iPhone 4',\n  'iPhone4,1': 'iPhone 4S',\n  'iPhone5,1': 'iPhone 5',\n  'iPhone5,2': 'iPhone 5',\n  'iPhone5,3': 'iPhone 5c',\n  'iPhone5,4': 'iPhone 5c',\n  'iPhone6,1': 'iPhone 5s',\n  'iPhone6,2': 'iPhone 5s',\n  'iPhone8,4': 'iPhone SE (1st generation)',\n  'iPhone7,2': 'iPhone 6',\n  'iPhone7,1': 'iPhone 6 Plus',\n  'iPhone8,1': 'iPhone 6s',\n  'iPhone8,2': 'iPhone 6s Plus',\n  'iPhone9,1': 'iPhone 7',\n  'iPhone9,3': 'iPhone 7',\n  'iPhone9,2': 'iPhone 7 Plus',\n  'iPhone9,4': 'iPhone 7 Plus',\n  'iPhone10,1': 'iPhone 8',\n  'iPhone10,4': 'iPhone 8',\n  'iPhone10,2': 'iPhone 8 Plus',\n  'iPhone10,5': 'iPhone 8 Plus',\n  'iPhone10,3': 'iPhone X',\n  'iPhone10,6': 'iPhone X',\n  'iPhone11,8': 'iPhone XR',\n  'iPhone11,2': 'iPhone XS',\n  'iPhone11,4': 'iPhone XS Max',\n  'iPhone11,6': 'iPhone XS Max',\n  'iPhone12,1': 'iPhone 11',\n  'iPhone12,3': 'iPhone 11 Pro',\n  'iPhone12,5': 'iPhone 11 Pro Max',\n  'iPhone12,8': 'iPhone SE (2nd generation)',\n  'iPhone13,1': 'iPhone 12 mini',\n  'iPhone13,2': 'iPhone 12',\n  'iPhone13,3': 'iPhone 12 Pro',\n  'iPhone13,4': 'iPhone 12 Pro Max',\n  'iPad6,7': 'iPad Pro (12.9-inch)',\n  'iPad6,8': 'iPad Pro (12.9-inch)',\n  'iPad6,3': 'iPad Pro (9.7-inch)',\n  'iPad6,4': 'iPad Pro (9.7-inch)',\n  'iPad7,1': 'iPad Pro (12.9-inch, 2nd generation)',\n  'iPad7,2': 'iPad Pro (12.9-inch, 2nd generation)',\n  'iPad7,3': 'iPad Pro (10.5-inch)',\n  'iPad7,4': 'iPad Pro (10.5-inch)',\n  'iPad8,1': 'iPad Pro (11-inch)',\n  'iPad8,2': 'iPad Pro (11-inch)',\n  'iPad8,3': 'iPad Pro (11-inch)',\n  'iPad8,4': 'iPad Pro (11-inch)',\n  'iPad8,5': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,6': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,7': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,8': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,9': 'iPad Pro (11-inch) (2nd generation)',\n  'iPad8,10': 'iPad Pro (11-inch) (2nd generation)',\n  'iPad8,11': 'iPad Pro (12.9-inch) (4th generation)',\n  'iPad8,12': 'iPad Pro (12.9-inch) (4th generation)',\n  'iPad2,5': 'iPad mini',\n  'iPad2,6': 'iPad mini',\n  'iPad2,7': 'iPad mini',\n  'iPad4,4': 'iPad mini 2',\n  'iPad4,5': 'iPad mini 2',\n  'iPad4,6': 'iPad mini 2',\n  'iPad4,7': 'iPad mini 3',\n  'iPad4,8': 'iPad mini 3',\n  'iPad4,9': 'iPad mini 3',\n  'iPad5,1': 'iPad mini 4',\n  'iPad5,2': 'iPad mini 4',\n  'iPad11,1': 'iPad mini (5th generation)',\n  'iPad11,2': 'iPad mini (5th generation)',\n  'iPad4,1': 'iPad Air',\n  'iPad4,2': 'iPad Air',\n  'iPad4,3': 'iPad Air',\n  'iPad5,3': 'iPad Air 2',\n  'iPad5,4': 'iPad Air 2',\n  'iPad11,3': 'iPad Air (3rd generation)',\n  'iPad11,4': 'iPad Air (3rd generation)',\n  'iPad13,1': 'iPad Air (4th generation)',\n  'iPad13,2': 'iPad Air (4th generation)',\n  'iPad1,1': 'iPad',\n  'iPad2,1': 'iPad 2',\n  'iPad2,2': 'iPad 2',\n  'iPad2,3': 'iPad 2',\n  'iPad2,4': 'iPad 2',\n  'iPad3,1': 'iPad (3rd generation)',\n  'iPad3,2': 'iPad (3rd generation)',\n  'iPad3,3': 'iPad (3rd generation)',\n  'iPad3,4': 'iPad (4th generation)',\n  'iPad3,5': 'iPad (4th generation)',\n  'iPad3,6': 'iPad (4th generation)',\n  'iPad6,11': 'iPad (5th generation)',\n  'iPad6,12': 'iPad (5th generation)',\n  'iPad7,5': 'iPad (6th generation)',\n  'iPad7,6': 'iPad (6th generation)',\n  'iPad7,11': 'iPad (7th generation)',\n  'iPad7,12': 'iPad (7th generation)',\n  'iPad11,6': 'iPad (8th generation)',\n  'iPad11,7': 'iPad (8th generation)',\n  'AudioAccessory1,1': 'HomePod',\n  'AudioAccessory1,2': 'HomePod',\n  'AudioAccessory5,1': 'HomePod mini',\n  'Watch1,1': 'Apple Watch (1st generation)',\n  'Watch1,2': 'Apple Watch (1st generation)',\n  'Watch2,6': 'Apple Watch Series 1',\n  'Watch2,7': 'Apple Watch Series 1',\n  'Watch2,3': 'Apple Watch Series 2',\n  'Watch2,4': 'Apple Watch Series 2',\n  'Watch3,1': 'Apple Watch Series 3',\n  'Watch3,2': 'Apple Watch Series 3',\n  'Watch3,3': 'Apple Watch Series 3',\n  'Watch3,4': 'Apple Watch Series 3',\n  'Watch4,1': 'Apple Watch Series 4',\n  'Watch4,2': 'Apple Watch Series 4',\n  'Watch4,3': 'Apple Watch Series 4',\n  'Watch4,4': 'Apple Watch Series 4',\n  'Watch5,1': 'Apple Watch Series 5',\n  'Watch5,2': 'Apple Watch Series 5',\n  'Watch5,3': 'Apple Watch Series 5',\n  'Watch5,4': 'Apple Watch Series 5',\n  'Watch5,9': 'Apple Watch SE',\n  'Watch5,10': 'Apple Watch SE',\n  'Watch5,11': 'Apple Watch SE',\n  'Watch5,12': 'Apple Watch SE',\n  'Watch6,1': 'Apple Watch Series 6',\n  'Watch6,2': 'Apple Watch Series 6',\n  'Watch6,3': 'Apple Watch Series 6',\n  'Watch6,4': 'Apple Watch Series 6',\n  'AppleTV1,1': 'Apple TV (1st generation)',\n  'AppleTV2,1': 'Apple TV (2nd generation)',\n  'AppleTV3,1': 'Apple TV (3rd generation)',\n  'AppleTV3,2': 'Apple TV (3rd generation)',\n  'AppleTV5,3': 'Apple TV (4th generation)',\n  'AppleTV6,2': 'Apple TV 4K',\n  'AirPods1,1': 'AirPods (1st generation)',\n  'AirPods2,1': 'AirPods (2nd generation)',\n  'iProd8,1': 'AirPods Pro',\n};\n\nexport {iOSDeviceMapping};\n","import {useMemo} from 'react';\n\nimport {iOSDeviceMapping} from 'sentry/constants/ios-device-list';\n\nexport function deviceNameMapper(model: string | undefined): string | null {\n  // If we have no model, render nothing\n  if (typeof model !== 'string') {\n    return null;\n  }\n\n  // If module has not loaded yet, render the unparsed model\n  if (module === null) {\n    return model;\n  }\n\n  const [identifier, ...rest] = model.split(' ');\n\n  const modelName = iOSDeviceMapping[identifier];\n  return modelName === undefined ? model : `${modelName} ${rest.join(' ')}`;\n}\n\ninterface DeviceNameProps {\n  value: string;\n  children?: (name: string) => React.ReactNode;\n}\n\n/**\n * This is used to map iOS Device Names to model name.\n * This asynchronously loads the ios-device-list library because of its size\n */\nfunction DeviceName({value, children}: DeviceNameProps): React.ReactElement | null {\n  const deviceName = useMemo(() => deviceNameMapper(value), [value]);\n\n  return deviceName ? (\n    <span data-test-id=\"loaded-device-name\">\n      {children ? children(deviceName) : deviceName}\n    </span>\n  ) : null;\n}\n\nexport {DeviceName};\n","import {useEffect} from 'react';\nimport assign from 'lodash/assign';\nimport flatten from 'lodash/flatten';\nimport memoize from 'lodash/memoize';\nimport omit from 'lodash/omit';\n\nimport {fetchTagValues} from 'sentry/actionCreators/tags';\nimport SmartSearchBar from 'sentry/components/smartSearchBar';\nimport {NEGATION_OPERATOR, SEARCH_WILDCARD} from 'sentry/constants';\nimport {Organization, SavedSearchType, TagCollection} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {CustomMeasurementCollection} from 'sentry/utils/customMeasurements/customMeasurements';\nimport {\n  Field,\n  FIELD_TAGS,\n  isAggregateField,\n  isEquation,\n  isMeasurement,\n  SEMVER_TAGS,\n  SPAN_OP_BREAKDOWN_FIELDS,\n  TRACING_FIELDS,\n} from 'sentry/utils/discover/fields';\nimport {FieldKey, FieldKind} from 'sentry/utils/fields';\nimport Measurements from 'sentry/utils/measurements/measurements';\nimport useApi from 'sentry/utils/useApi';\nimport withTags from 'sentry/utils/withTags';\nimport {isCustomMeasurement} from 'sentry/views/dashboardsV2/utils';\n\nconst SEARCH_SPECIAL_CHARS_REGEXP = new RegExp(\n  `^${NEGATION_OPERATOR}|\\\\${SEARCH_WILDCARD}`,\n  'g'\n);\n\nconst getFunctionTags = (fields: Readonly<Field[]>) =>\n  Object.fromEntries(\n    fields\n      .filter(\n        item =>\n          !Object.keys(FIELD_TAGS).includes(item.field) &&\n          !isEquation(item.field) &&\n          !isCustomMeasurement(item.field)\n      )\n      .map(item => [\n        item.field,\n        {key: item.field, name: item.field, kind: FieldKind.FUNCTION},\n      ])\n  );\n\nconst getFieldTags = () =>\n  Object.fromEntries(\n    Object.keys(FIELD_TAGS).map(key => [\n      key,\n      {\n        ...FIELD_TAGS[key],\n        kind: FieldKind.FIELD,\n      },\n    ])\n  );\n\nconst getMeasurementTags = (\n  measurements: Parameters<\n    React.ComponentProps<typeof Measurements>['children']\n  >[0]['measurements']\n) =>\n  Object.fromEntries(\n    Object.keys(measurements).map(key => [\n      key,\n      {\n        ...measurements[key],\n        kind: FieldKind.MEASUREMENT,\n      },\n    ])\n  );\n\nconst getSpanTags = () => {\n  return Object.fromEntries(\n    SPAN_OP_BREAKDOWN_FIELDS.map(key => [key, {key, name: key, kind: FieldKind.METRICS}])\n  );\n};\n\nconst getSemverTags = () =>\n  Object.fromEntries(\n    Object.keys(SEMVER_TAGS).map(key => [\n      key,\n      {\n        ...SEMVER_TAGS[key],\n        kind: FieldKind.FIELD,\n      },\n    ])\n  );\n\nexport type SearchBarProps = Omit<React.ComponentProps<typeof SmartSearchBar>, 'tags'> & {\n  organization: Organization;\n  tags: TagCollection;\n  customMeasurements?: CustomMeasurementCollection;\n  fields?: Readonly<Field[]>;\n  includeSessionTagsValues?: boolean;\n  /**\n   * Used to define the max height of the menu in px.\n   */\n  maxMenuHeight?: number;\n  maxSearchItems?: React.ComponentProps<typeof SmartSearchBar>['maxSearchItems'];\n  omitTags?: string[];\n  projectIds?: number[] | Readonly<number[]>;\n};\n\nfunction SearchBar(props: SearchBarProps) {\n  const {\n    maxSearchItems,\n    organization,\n    tags,\n    omitTags,\n    fields,\n    projectIds,\n    includeSessionTagsValues,\n    maxMenuHeight,\n    customMeasurements,\n  } = props;\n\n  const api = useApi();\n\n  useEffect(() => {\n    // Clear memoized data on mount to make tests more consistent.\n    getEventFieldValues.cache.clear?.();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [projectIds]);\n\n  // Returns array of tag values that substring match `query`; invokes `callback`\n  // with data when ready\n  const getEventFieldValues = memoize(\n    (tag, query, endpointParams): Promise<string[]> => {\n      const projectIdStrings = (projectIds as Readonly<number>[])?.map(String);\n\n      if (isAggregateField(tag.key) || isMeasurement(tag.key)) {\n        // We can't really auto suggest values for aggregate fields\n        // or measurements, so we simply don't\n        return Promise.resolve([]);\n      }\n\n      return fetchTagValues(\n        api,\n        organization.slug,\n        tag.key,\n        query,\n        projectIdStrings,\n        endpointParams,\n\n        // allows searching for tags on transactions as well\n        true,\n\n        // allows searching for tags on sessions as well\n        includeSessionTagsValues\n      ).then(\n        results =>\n          flatten(results.filter(({name}) => defined(name)).map(({name}) => name)),\n        () => {\n          throw new Error('Unable to fetch event field values');\n        }\n      );\n    },\n    ({key}, query) => `${key}-${query}`\n  );\n\n  const getTagList = (\n    measurements: Parameters<\n      React.ComponentProps<typeof Measurements>['children']\n    >[0]['measurements']\n  ) => {\n    const functionTags = getFunctionTags(fields ?? []);\n    const fieldTags = getFieldTags();\n    const measurementsWithKind = getMeasurementTags(measurements);\n    const spanTags = getSpanTags();\n    const semverTags = getSemverTags();\n\n    const orgHasPerformanceView = organization.features.includes('performance-view');\n\n    const combinedTags: TagCollection = orgHasPerformanceView\n      ? Object.assign({}, measurementsWithKind, spanTags, fieldTags, functionTags)\n      : omit(fieldTags, TRACING_FIELDS);\n\n    const tagsWithKind = Object.fromEntries(\n      Object.keys(tags).map(key => [\n        key,\n        {\n          ...tags[key],\n          kind: FieldKind.TAG,\n        },\n      ])\n    );\n\n    assign(combinedTags, tagsWithKind, fieldTags, semverTags);\n\n    const sortedTagKeys = Object.keys(combinedTags);\n    sortedTagKeys.sort((a, b) => {\n      return a.toLowerCase().localeCompare(b.toLowerCase());\n    });\n\n    combinedTags.has = {\n      key: FieldKey.HAS,\n      name: 'Has property',\n      values: sortedTagKeys,\n      predefined: true,\n      kind: FieldKind.FIELD,\n    };\n\n    return omit(combinedTags, omitTags ?? []);\n  };\n\n  return (\n    <Measurements>\n      {({measurements}) => (\n        <SmartSearchBar\n          hasRecentSearches\n          savedSearchType={SavedSearchType.EVENT}\n          onGetTagValues={getEventFieldValues}\n          supportedTags={getTagList({...measurements, ...(customMeasurements ?? {})})}\n          prepareQuery={query => {\n            // Prepare query string (e.g. strip special characters like negation operator)\n            return query.replace(SEARCH_SPECIAL_CHARS_REGEXP, '');\n          }}\n          maxSearchItems={maxSearchItems}\n          excludedTags={['environment']}\n          maxMenuHeight={maxMenuHeight ?? 300}\n          customPerformanceMetrics={customMeasurements}\n          {...props}\n        />\n      )}\n    </Measurements>\n  );\n}\n\nexport default withTags(SearchBar);\n","import {Component} from 'react';\n\nimport TagStore from 'sentry/stores/tagStore';\nimport {TagCollection} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedTagsProps = {\n  tags: TagCollection;\n};\n\ntype State = {\n  tags: TagCollection;\n};\n\n/**\n * HOC for getting *only* tags from the TagStore.\n */\nfunction withTags<P extends InjectedTagsProps>(WrappedComponent: React.ComponentType<P>) {\n  class WithTags extends Component<Omit<P, keyof InjectedTagsProps>, State> {\n    static displayName = `withTags(${getDisplayName(WrappedComponent)})`;\n\n    state: State = {\n      tags: TagStore.getState(),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    unsubscribe = TagStore.listen(\n      (tags: TagCollection) => this.setState({tags}),\n      undefined\n    );\n\n    render() {\n      const {tags, ...props} = this.props as P;\n      return <WrappedComponent {...({tags: tags ?? this.state.tags, ...props} as P)} />;\n    }\n  }\n\n  return WithTags;\n}\n\nexport default withTags;\n","import AttachmentUrl from 'sentry/components/attachmentUrl';\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport DateTime from 'sentry/components/dateTime';\nimport {DeviceName} from 'sentry/components/deviceName';\nimport FileSize from 'sentry/components/fileSize';\nimport GlobalSelectionLink from 'sentry/components/globalSelectionLink';\nimport {AvatarUser, Organization, Tag} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = {\n  event: Event;\n  groupId: string;\n  orgId: string;\n  organization: Organization;\n  projectId: string;\n  tagList: Tag[];\n  className?: string;\n  hasUser?: boolean;\n};\n\nfunction EventsTableRow({\n  className,\n  event,\n  projectId,\n  orgId,\n  groupId,\n  tagList,\n  hasUser,\n}: Props) {\n  const crashFileLink = !event.crashFile ? null : (\n    <AttachmentUrl projectId={projectId} eventId={event.id} attachment={event.crashFile}>\n      {url =>\n        url ? (\n          <small>\n            {event.crashFile?.type === 'event.minidump' ? 'Minidump' : 'Crash file'}:{' '}\n            <a href={`${url}?download=1`}>{event.crashFile?.name}</a> (\n            <FileSize bytes={event.crashFile?.size || 0} />)\n          </small>\n        ) : null\n      }\n    </AttachmentUrl>\n  );\n\n  const tagMap = Object.fromEntries(event.tags.map(tag => [tag.key, tag.value]));\n\n  return (\n    <tr key={event.id} className={className}>\n      <td>\n        <h5>\n          <GlobalSelectionLink\n            to={`/organizations/${orgId}/issues/${groupId}/events/${event.id}/`}\n          >\n            <DateTime date={event.dateCreated} year seconds timeZone />\n          </GlobalSelectionLink>\n          <small>{event.title.substr(0, 100)}</small>\n          {crashFileLink}\n        </h5>\n      </td>\n\n      {hasUser && (\n        <td className=\"event-user table-user-info\">\n          {event.user ? (\n            <div>\n              <UserAvatar\n                // TODO(ts): Some of the user fields are optional from event,\n                // this cast can probably be removed in the future\n                user={event.user as AvatarUser}\n                size={24}\n                className=\"avatar\"\n                gravatar={false}\n              />\n              {event.user.email}\n            </div>\n          ) : (\n            <span>—</span>\n          )}\n        </td>\n      )}\n\n      {tagList.map(tag => (\n        <td key={tag.key}>\n          <div>\n            {tag.key === 'device' ? (\n              <DeviceName value={tagMap[tag.key]} />\n            ) : (\n              tagMap[tag.key]\n            )}\n          </div>\n        </td>\n      ))}\n    </tr>\n  );\n}\n\nexport default withOrganization(EventsTableRow);\n","import {Component} from 'react';\n\nimport EventsTableRow from 'sentry/components/eventsTable/eventsTableRow';\nimport {t} from 'sentry/locale';\nimport {Tag} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\ntype Props = {\n  events: Event[];\n  groupId: string;\n  orgId: string;\n  projectId: string;\n  tagList: Tag[];\n};\nclass EventsTable extends Component<Props> {\n  render() {\n    const {events, tagList, orgId, projectId, groupId} = this.props;\n\n    const hasUser = !!events.find(event => event.user);\n\n    return (\n      <table className=\"table events-table\">\n        <thead>\n          <tr>\n            <th>{t('ID')}</th>\n            {hasUser && <th>{t('User')}</th>}\n\n            {tagList.map(tag => (\n              <th key={tag.key}>{tag.name}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {events.map(event => (\n            <EventsTableRow\n              key={event.id}\n              event={event}\n              orgId={orgId}\n              projectId={projectId}\n              groupId={groupId}\n              tagList={tagList}\n              hasUser={hasUser}\n            />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default EventsTable;\n","import {useState} from 'react';\nimport {Location} from 'history';\n\nimport LoadingError from 'sentry/components/loadingError';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport EventView, {decodeSorts} from 'sentry/utils/discover/eventView';\nimport EventsTable from 'sentry/views/performance/transactionSummary/transactionEvents/eventsTable';\n\nexport interface Props {\n  isPerfIssue: boolean;\n  issueId: string;\n  location: Location;\n  organization: Organization;\n  projectId: string;\n  excludedTags?: string[];\n  totalEventCount?: string;\n}\n\nconst AllEventsTable = (props: Props) => {\n  const {\n    location,\n    organization,\n    issueId,\n    isPerfIssue,\n    excludedTags,\n    projectId,\n    totalEventCount,\n  } = props;\n  const [error, setError] = useState<string>('');\n\n  const fields: string[] = [\n    'id',\n    'transaction',\n    'trace',\n    'release',\n    'environment',\n    'user.display',\n    ...(isPerfIssue ? ['transaction.duration'] : []),\n    'timestamp',\n    'attachments',\n    'minidump',\n  ];\n\n  const eventView: EventView = EventView.fromLocation(props.location);\n  eventView.fields = fields.map(fieldName => ({field: fieldName}));\n\n  eventView.sorts = decodeSorts(location).filter(sort => fields.includes(sort.field));\n\n  if (!eventView.sorts.length) {\n    eventView.sorts = [{field: 'timestamp', kind: 'desc'}];\n  }\n\n  const idQuery = isPerfIssue\n    ? `performance.issue_ids:${issueId}`\n    : `issue.id:${issueId}`;\n  eventView.query = `${idQuery} ${props.location.query.query || ''}`;\n  eventView.statsPeriod = '90d';\n\n  const columnTitles: Readonly<string[]> = [\n    t('event id'),\n    t('transaction'),\n    t('trace id'),\n    t('release'),\n    t('environment'),\n    t('user'),\n    ...(isPerfIssue ? [t('total duration')] : []),\n    t('timestamp'),\n    t('attachments'),\n    t('minidump'),\n  ];\n\n  if (error) {\n    return <LoadingError message={error} />;\n  }\n\n  return (\n    <EventsTable\n      eventView={eventView}\n      location={location}\n      issueId={issueId}\n      organization={organization}\n      excludedTags={excludedTags}\n      projectId={projectId}\n      totalEventCount={totalEventCount}\n      setError={() => {\n        (msg: string) => setError(msg);\n      }}\n      transactionName=\"\"\n      columnTitles={columnTitles.slice()}\n    />\n  );\n};\n\nexport default AllEventsTable;\n","import {Component, Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport pick from 'lodash/pick';\n\nimport {Client} from 'sentry/api';\nimport EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport EventSearchBar from 'sentry/components/events/searchBar';\nimport EventsTable from 'sentry/components/eventsTable/eventsTable';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport SearchBar from 'sentry/components/searchBar';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group, IssueCategory, Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport parseApiError from 'sentry/utils/parseApiError';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport AllEventsTable from './allEventsTable';\n\ntype Props = {\n  api: Client;\n  group: Group;\n  organization: Organization;\n} & RouteComponentProps<{groupId: string; orgId: string}, {}>;\n\ntype State = {\n  error: string | false;\n  eventList: Event[];\n  loading: boolean;\n  pageLinks: string;\n  query: string;\n  renderNewAllEventsTab: boolean;\n};\n\nconst excludedTags = ['environment', 'issue', 'issue.id', 'performance.issues_ids'];\n\nclass GroupEvents extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const queryParams = this.props.location.query;\n    const renderNewAllEventsTab =\n      !!this.props.group.id &&\n      this.props.organization.features.includes('performance-issues-all-events-tab');\n\n    this.state = {\n      eventList: [],\n      loading: true,\n      error: false,\n      pageLinks: '',\n      query: queryParams.query || '',\n      renderNewAllEventsTab,\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.fetchData();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (this.props.location.search !== nextProps.location.search) {\n      const queryParams = nextProps.location.query;\n\n      this.setState(\n        {\n          query: queryParams.query,\n        },\n        this.fetchData\n      );\n    }\n  }\n\n  handleSearch = (query: string) => {\n    const targetQueryParams = {...this.props.location.query};\n    targetQueryParams.query = query;\n    const {groupId, orgId} = this.props.params;\n\n    browserHistory.push({\n      pathname: `/organizations/${orgId}/issues/${groupId}/events/`,\n      query: targetQueryParams,\n    });\n  };\n\n  fetchData = () => {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n\n    const query = {\n      ...pick(this.props.location.query, ['cursor', 'environment']),\n      limit: 50,\n      query: this.state.query,\n    };\n\n    if (!this.state.renderNewAllEventsTab) {\n      this.props.api.request(`/issues/${this.props.params.groupId}/events/`, {\n        query,\n        method: 'GET',\n        success: (data, _, resp) => {\n          this.setState({\n            eventList: data,\n            error: false,\n            loading: false,\n            pageLinks: resp?.getResponseHeader('Link') ?? '',\n          });\n        },\n        error: err => {\n          this.setState({\n            error: parseApiError(err),\n            loading: false,\n          });\n        },\n      });\n    }\n  };\n\n  renderNoQueryResults() {\n    return (\n      <EmptyStateWarning>\n        <p>{t('Sorry, no events match your search query.')}</p>\n      </EmptyStateWarning>\n    );\n  }\n\n  renderEmpty() {\n    return (\n      <EmptyStateWarning>\n        <p>{t(\"There don't seem to be any events yet.\")}</p>\n      </EmptyStateWarning>\n    );\n  }\n\n  renderNewAllEventsTab() {\n    return (\n      <AllEventsTable\n        issueId={this.props.group.id}\n        isPerfIssue={this.props.group.issueCategory === IssueCategory.PERFORMANCE}\n        location={this.props.location}\n        organization={this.props.organization}\n        projectId={this.props.group.project.slug}\n        totalEventCount={this.props.group.count}\n        excludedTags={excludedTags}\n      />\n    );\n  }\n\n  renderSearchBar() {\n    const {renderNewAllEventsTab: renderPerfIssueEvents} = this.state;\n\n    if (renderPerfIssueEvents) {\n      return (\n        <EventSearchBar\n          organization={this.props.organization}\n          defaultQuery=\"\"\n          onSearch={this.handleSearch}\n          excludedTags={excludedTags}\n          query={this.state.query}\n          hasRecentSearches={false}\n        />\n      );\n    }\n    return (\n      <SearchBar\n        defaultQuery=\"\"\n        placeholder={t('Search events by id, message, or tags')}\n        query={this.state.query}\n        onSearch={this.handleSearch}\n      />\n    );\n  }\n\n  renderResults() {\n    const {group, params} = this.props;\n    const tagList = group.tags.filter(tag => tag.key !== 'user') || [];\n\n    return (\n      <EventsTable\n        tagList={tagList}\n        events={this.state.eventList}\n        orgId={params.orgId}\n        projectId={group.project.slug}\n        groupId={params.groupId}\n      />\n    );\n  }\n\n  renderBody() {\n    const {renderNewAllEventsTab} = this.state;\n\n    let body: React.ReactNode;\n\n    if (renderNewAllEventsTab) {\n      return this.renderNewAllEventsTab();\n    }\n    if (this.state.loading) {\n      body = <LoadingIndicator />;\n    } else if (this.state.error) {\n      body = <LoadingError message={this.state.error} onRetry={this.fetchData} />;\n    } else if (this.state.eventList.length > 0) {\n      body = this.renderResults();\n    } else if (this.state.query && this.state.query !== '') {\n      body = this.renderNoQueryResults();\n    } else {\n      body = this.renderEmpty();\n    }\n\n    return (\n      <Fragment>\n        <Panel className=\"event-list\">\n          <PanelBody>{body}</PanelBody>\n        </Panel>\n        <Pagination pageLinks={this.state.pageLinks} />\n      </Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Layout.Body>\n        <Layout.Main fullWidth>\n          <Wrapper>\n            <FilterSection>\n              <EnvironmentPageFilter />\n              {this.renderSearchBar()}\n            </FilterSection>\n            {this.renderBody()}\n          </Wrapper>\n        </Layout.Main>\n      </Layout.Body>\n    );\n  }\n}\n\nconst FilterSection = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-template-columns: max-content 1fr;\n`;\n\nconst Wrapper = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n`;\n\nexport {GroupEvents};\n\nexport default withOrganization(withApi(GroupEvents));\n"],"names":["withOrganizationRole","withOrganization","role","organization","children","user","ConfigStore","hasRole","useMemo","isActiveSuperuser","Array","isArray","orgRoleList","roleIds","map","r","id","includes","requiredIndex","indexOf","checkUserRole","isRenderFunc","AttachmentUrl","attachment","eventId","projectId","attachmentsRole","slug","memo","iOSDeviceMapping","deviceNameMapper","model","module","identifier","rest","split","modelName","undefined","join","DeviceName","value","deviceName","SEARCH_SPECIAL_CHARS_REGEXP","RegExp","NEGATION_OPERATOR","SEARCH_WILDCARD","SearchBar","props","maxSearchItems","tags","omitTags","fields","projectIds","includeSessionTagsValues","maxMenuHeight","customMeasurements","api","useApi","useEffect","getEventFieldValues","cache","clear","memoize","tag","query","endpointParams","projectIdStrings","String","isAggregateField","key","isMeasurement","Promise","resolve","fetchTagValues","then","results","flatten","filter","name","defined","Error","getTagList","measurements","functionTags","Object","fromEntries","item","keys","FIELD_TAGS","field","isEquation","isCustomMeasurement","kind","FieldKind","getFunctionTags","fieldTags","measurementsWithKind","getMeasurementTags","spanTags","SPAN_OP_BREAKDOWN_FIELDS","semverTags","SEMVER_TAGS","combinedTags","features","assign","omit","TRACING_FIELDS","tagsWithKind","sortedTagKeys","sort","a","b","toLowerCase","localeCompare","has","FieldKey","values","predefined","hasRecentSearches","savedSearchType","SavedSearchType","onGetTagValues","supportedTags","prepareQuery","replace","excludedTags","customPerformanceMetrics","withTags","WrappedComponent","WithTags","Component","TagStore","this","setState","componentWillUnmount","unsubscribe","render","state","getDisplayName","EventsTableRow","className","event","orgId","groupId","tagList","hasUser","crashFileLink","crashFile","url","type","href","bytes","size","tagMap","to","date","dateCreated","year","seconds","timeZone","title","substr","gravatar","email","EventsTable","events","find","t","AllEventsTable","location","issueId","isPerfIssue","totalEventCount","error","setError","useState","eventView","EventView","fieldName","sorts","decodeSorts","length","idQuery","statsPeriod","columnTitles","message","transactionName","slice","GroupEvents","constructor","super","targetQueryParams","params","browserHistory","pathname","loading","pick","limit","renderNewAllEventsTab","request","method","success","data","_","resp","eventList","pageLinks","getResponseHeader","err","parseApiError","queryParams","group","UNSAFE_componentWillMount","fetchData","UNSAFE_componentWillReceiveProps","nextProps","search","renderNoQueryResults","renderEmpty","issueCategory","IssueCategory","project","count","renderSearchBar","renderPerfIssueEvents","defaultQuery","onSearch","handleSearch","placeholder","renderResults","renderBody","body","onRetry","Fragment","fullWidth","Wrapper","FilterSection","space","withApi"],"sourceRoot":""}