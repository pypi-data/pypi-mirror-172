{"version":3,"file":"chunks/app_views_userFeedback_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/components/issues/compactIssue.tsx","webpack:///./app/views/userFeedback/utils.tsx","webpack:///./app/views/userFeedback/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {bulkUpdate} from 'sentry/actionCreators/group';\nimport {addLoadingMessage, clearIndicators} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport EventOrGroupTitle from 'sentry/components/eventOrGroupTitle';\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport Link from 'sentry/components/links/link';\nimport {PanelItem} from 'sentry/components/panels';\nimport {IconChat, IconMute, IconStar} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport GroupStore from 'sentry/stores/groupStore';\nimport space from 'sentry/styles/space';\nimport {BaseGroup, Organization} from 'sentry/types';\nimport {getMessage} from 'sentry/utils/events';\nimport {Aliases} from 'sentry/utils/theme';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype HeaderProps = {\n  data: BaseGroup;\n  organization: Organization;\n  projectId: string;\n  eventId?: string;\n};\n\nfunction CompactIssueHeader({data, organization, projectId, eventId}: HeaderProps) {\n  const basePath = `/organizations/${organization.slug}/issues/`;\n\n  const issueLink = eventId\n    ? `/organizations/${organization.slug}/projects/${projectId}/events/${eventId}/`\n    : `${basePath}${data.id}/`;\n\n  const commentColor: keyof Aliases =\n    data.subscriptionDetails && data.subscriptionDetails.reason === 'mentioned'\n      ? 'success'\n      : 'textColor';\n\n  return (\n    <Fragment>\n      <IssueHeaderMetaWrapper>\n        <StyledErrorLevel size=\"12px\" level={data.level} title={data.level} />\n        <h3 className=\"truncate\">\n          <IconLink to={issueLink || ''}>\n            {data.status === 'ignored' && <IconMute size=\"xs\" />}\n            {data.isBookmarked && <IconStar isSolid size=\"xs\" />}\n            <EventOrGroupTitle data={data} />\n          </IconLink>\n        </h3>\n      </IssueHeaderMetaWrapper>\n      <div className=\"event-extra\">\n        <span className=\"project-name\">\n          <strong>{data.project.slug}</strong>\n        </span>\n        {data.numComments !== 0 && (\n          <span>\n            <IconLink to={`${basePath}${data.id}/activity/`} className=\"comments\">\n              <IconChat size=\"xs\" color={commentColor} />\n              <span className=\"tag-count\">{data.numComments}</span>\n            </IconLink>\n          </span>\n        )}\n        <span className=\"culprit\">{getMessage(data)}</span>\n      </div>\n    </Fragment>\n  );\n}\n\ntype GroupTypes = ReturnType<typeof GroupStore.get>;\n\n/**\n * Type assertion to disambiguate GroupTypes\n *\n * The GroupCollapseRelease type isn't compatible with BaseGroup\n */\nfunction isGroup(maybe: GroupTypes): maybe is BaseGroup {\n  return (maybe as BaseGroup).status !== undefined;\n}\n\ntype Props = {\n  api: Client;\n  id: string;\n  organization: Organization;\n  data?: BaseGroup;\n  eventId?: string;\n};\n\ntype State = {\n  issue?: GroupTypes;\n};\n\nclass CompactIssue extends Component<Props, State> {\n  state: State = {\n    issue: this.props.data || GroupStore.get(this.props.id),\n  };\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.id !== this.props.id) {\n      this.setState({\n        issue: GroupStore.get(this.props.id),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  listener = GroupStore.listen(\n    (itemIds: Set<string>) => this.onGroupChange(itemIds),\n    undefined\n  );\n\n  onGroupChange(itemIds: Set<string>) {\n    if (!itemIds.has(this.props.id)) {\n      return;\n    }\n    const id = this.props.id;\n    const issue = GroupStore.get(id);\n    this.setState({\n      issue,\n    });\n  }\n\n  onUpdate(data: Record<string, string>) {\n    const issue = this.state.issue;\n    if (!issue) {\n      return;\n    }\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    bulkUpdate(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        projectId: issue.project.slug,\n        itemIds: [issue.id],\n        data,\n      },\n      {\n        complete: () => {\n          clearIndicators();\n        },\n      }\n    );\n  }\n\n  render() {\n    const issue = this.state.issue;\n    const {organization} = this.props;\n    if (!isGroup(issue)) {\n      return null;\n    }\n\n    let className = 'issue';\n    if (issue.isBookmarked) {\n      className += ' isBookmarked';\n    }\n    if (issue.hasSeen) {\n      className += ' hasSeen';\n    }\n    if (issue.status === 'resolved') {\n      className += ' isResolved';\n    }\n    if (issue.status === 'ignored') {\n      className += ' isIgnored';\n    }\n\n    return (\n      <IssueRow className={className}>\n        <CompactIssueHeader\n          data={issue}\n          organization={organization}\n          projectId={issue.project.slug}\n          eventId={this.props.eventId}\n        />\n        {this.props.children}\n      </IssueRow>\n    );\n  }\n}\n\nexport default withApi(withOrganization(CompactIssue));\n\nconst IssueHeaderMetaWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledErrorLevel = styled(ErrorLevel)`\n  display: block;\n  margin-right: ${space(1)};\n`;\n\nconst IconLink = styled(Link)`\n  & > svg {\n    margin-right: ${space(0.5)};\n  }\n`;\n\nconst IssueRow = styled(PanelItem)`\n  padding-top: ${space(1.5)};\n  padding-bottom: ${space(0.75)};\n  flex-direction: column;\n`;\n","import pick from 'lodash/pick';\nimport * as qs from 'query-string';\n\nimport {URL_PARAM} from 'sentry/constants/pageFilters';\n\nconst DEFAULT_STATUS = 'unresolved';\n\n/**\n * Get query for API given the current location.search string\n */\nexport function getQuery(search: string) {\n  const query = qs.parse(search);\n\n  const status = typeof query.status !== 'undefined' ? query.status : DEFAULT_STATUS;\n\n  const queryParams = {\n    status,\n    ...pick(query, ['cursor', ...Object.values(URL_PARAM)]),\n  };\n\n  return queryParams;\n}\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport {withProfiler} from '@sentry/react';\nimport omit from 'lodash/omit';\n\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport EventUserFeedback from 'sentry/components/events/userFeedback';\nimport CompactIssue from 'sentry/components/issues/compactIssue';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport PageFiltersContainer from 'sentry/components/organizations/pageFilters/container';\nimport PageHeading from 'sentry/components/pageHeading';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel} from 'sentry/components/panels';\nimport ProjectPageFilter from 'sentry/components/projectPageFilter';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport space from 'sentry/styles/space';\nimport {Organization, UserReport} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport {UserFeedbackEmpty} from './userFeedbackEmpty';\nimport {getQuery} from './utils';\n\ntype State = AsyncView['state'] & {\n  reportList: UserReport[];\n};\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & {\n  organization: Organization;\n};\n\nclass OrganizationUserFeedback extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {\n      organization,\n      location: {search},\n    } = this.props;\n\n    return [\n      [\n        'reportList',\n        `/organizations/${organization.slug}/user-feedback/`,\n        {\n          query: getQuery(search),\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return `${t('User Feedback')} - ${this.props.organization.slug}`;\n  }\n\n  get projectIds() {\n    const {project} = this.props.location.query;\n\n    return Array.isArray(project)\n      ? project\n      : typeof project === 'string'\n      ? [project]\n      : [];\n  }\n\n  renderResults() {\n    const {orgId} = this.props.params;\n\n    return (\n      <Panel className=\"issue-list\" data-test-id=\"user-feedback-list\">\n        {this.state.reportList.map(item => {\n          const issue = item.issue;\n          return (\n            <CompactIssue key={item.id} id={issue.id} data={issue} eventId={item.eventID}>\n              <StyledEventUserFeedback report={item} orgId={orgId} issueId={issue.id} />\n            </CompactIssue>\n          );\n        })}\n      </Panel>\n    );\n  }\n\n  renderEmpty() {\n    return <UserFeedbackEmpty projectIds={this.projectIds} />;\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderStreamBody() {\n    const {loading, reportList} = this.state;\n\n    if (loading) {\n      return (\n        <Panel>\n          <LoadingIndicator />\n        </Panel>\n      );\n    }\n\n    if (!reportList.length) {\n      return this.renderEmpty();\n    }\n\n    return this.renderResults();\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const {location} = this.props;\n    const {pathname, search, query} = location;\n    const {status} = getQuery(search);\n    const {reportListPageLinks} = this.state;\n\n    const unresolvedQuery = omit(query, 'status');\n    const allIssuesQuery = {...query, status: ''};\n\n    return (\n      <PageFiltersContainer>\n        <PageContent>\n          <NoProjectMessage organization={organization}>\n            <div data-test-id=\"user-feedback\">\n              <Header>\n                <PageHeading>{t('User Feedback')}</PageHeading>\n              </Header>\n              <Filters>\n                <PageFilterBar>\n                  <ProjectPageFilter />\n                  <EnvironmentPageFilter />\n                  <DatePageFilter alignDropdown=\"right\" />\n                </PageFilterBar>\n                <ButtonBar active={!Array.isArray(status) ? status || '' : ''} merged>\n                  <Button barId=\"unresolved\" to={{pathname, query: unresolvedQuery}}>\n                    {t('Unresolved')}\n                  </Button>\n                  <Button barId=\"\" to={{pathname, query: allIssuesQuery}}>\n                    {t('All Issues')}\n                  </Button>\n                </ButtonBar>\n              </Filters>\n              {this.renderStreamBody()}\n              <Pagination pageLinks={reportListPageLinks} />\n            </div>\n          </NoProjectMessage>\n        </PageContent>\n      </PageFiltersContainer>\n    );\n  }\n}\n\nexport default withOrganization(withProfiler(OrganizationUserFeedback));\n\nconst Header = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(2)};\n`;\n\nconst Filters = styled('div')`\n  display: grid;\n  grid-template-columns: minmax(0, max-content) max-content;\n  justify-content: start;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (max-width: ${p => p.theme.breakpoints.medium}) {\n    grid-template-columns: minmax(0, 1fr) max-content;\n  }\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: minmax(0, 1fr);\n  }\n`;\n\nconst StyledEventUserFeedback = styled(EventUserFeedback)`\n  margin: ${space(2)} 0 0;\n`;\n"],"names":["DEFAULT_SIZE","p","size","level","theme","error","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","CompactIssueHeader","data","organization","projectId","eventId","basePath","slug","issueLink","id","commentColor","subscriptionDetails","reason","Fragment","IssueHeaderMetaWrapper","StyledErrorLevel","className","IconLink","to","status","isBookmarked","isSolid","project","numComments","color","getMessage","CompactIssue","Component","issue","props","GroupStore","itemIds","onGroupChange","undefined","componentWillReceiveProps","nextProps","setState","componentWillUnmount","listener","has","onUpdate","state","addLoadingMessage","t","bulkUpdate","api","orgId","complete","clearIndicators","hasSeen","IssueRow","children","withApi","withOrganization","ErrorLevel","space","Link","PanelItem","getQuery","search","query","qs","pick","Object","values","URL_PARAM","OrganizationUserFeedback","getEndpoints","location","projectIds","Array","isArray","renderResults","params","reportList","map","item","eventID","StyledEventUserFeedback","report","issueId","renderEmpty","renderLoading","renderBody","renderStreamBody","loading","length","pathname","reportListPageLinks","unresolvedQuery","omit","allIssuesQuery","Header","Filters","alignDropdown","active","merged","barId","pageLinks","withProfiler","breakpoints","medium","small","EventUserFeedback"],"sourceRoot":""}