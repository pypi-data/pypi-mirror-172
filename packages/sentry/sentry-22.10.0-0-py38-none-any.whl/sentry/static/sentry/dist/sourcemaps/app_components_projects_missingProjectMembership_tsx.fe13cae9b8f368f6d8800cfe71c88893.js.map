{"version":3,"file":"chunks/app_components_projects_missingProjectMembership_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/projects/missingProjectMembership.tsx"],"sourcesContent":["import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {joinTeam} from 'sentry/actionCreators/teams';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport SelectControl from 'sentry/components/forms/controls/selectControl';\nimport {Panel} from 'sentry/components/panels';\nimport {IconFlag} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport TeamStore from 'sentry/stores/teamStore';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  project?: Project | null;\n};\n\ntype State = {\n  error: boolean;\n  loading: boolean;\n  team: string | null;\n  project?: Project | null;\n};\n\nclass MissingProjectMembership extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    error: false,\n    project: this.props.project,\n    team: '',\n  };\n\n  joinTeam(teamSlug: string) {\n    this.setState({\n      loading: true,\n    });\n\n    joinTeam(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        teamId: teamSlug,\n      },\n      {\n        success: () => {\n          this.setState({\n            loading: false,\n            error: false,\n          });\n          addSuccessMessage(t('Request to join team sent.'));\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n            error: true,\n          });\n          addErrorMessage(t('There was an error while trying to request access.'));\n        },\n      }\n    );\n  }\n\n  renderJoinTeam(teamSlug: string, features: Set<string>) {\n    const team = TeamStore.getBySlug(teamSlug);\n\n    if (!team) {\n      return null;\n    }\n    if (this.state.loading) {\n      if (features.has('open-membership')) {\n        return <Button busy>{t('Join Team')}</Button>;\n      }\n      return <Button busy>{t('Request Access')}</Button>;\n    }\n    if (team?.isPending) {\n      return <Button disabled>{t('Request Pending')}</Button>;\n    }\n    if (features.has('open-membership')) {\n      return (\n        <Button\n          priority=\"primary\"\n          type=\"button\"\n          onClick={this.joinTeam.bind(this, teamSlug)}\n        >\n          {t('Join Team')}\n        </Button>\n      );\n    }\n    return (\n      <Button\n        priority=\"primary\"\n        type=\"button\"\n        onClick={this.joinTeam.bind(this, teamSlug)}\n      >\n        {t('Request Access')}\n      </Button>\n    );\n  }\n\n  getTeamsForAccess() {\n    const request: string[] = [];\n    const pending: string[] = [];\n    const teams = this.state.project?.teams ?? [];\n    teams.forEach(({slug}) => {\n      const team = TeamStore.getBySlug(slug);\n      if (!team) {\n        return;\n      }\n      team.isPending ? pending.push(team.slug) : request.push(team.slug);\n    });\n\n    return [request, pending];\n  }\n\n  getPendingTeamOption = (team: string) => {\n    return {\n      value: team,\n      label: <DisabledLabel>{t(`#${team}`)}</DisabledLabel>,\n    };\n  };\n\n  render() {\n    const {organization} = this.props;\n    const teamSlug = this.state.team;\n    const teams = this.state.project?.teams ?? [];\n    const features = new Set(organization.features);\n\n    const teamAccess = [\n      {\n        label: t('Request Access'),\n        options: this.getTeamsForAccess()[0].map(request => ({\n          value: request,\n          label: t(`#${request}`),\n        })),\n      },\n      {\n        label: t('Pending Requests'),\n        options: this.getTeamsForAccess()[1].map(pending =>\n          this.getPendingTeamOption(pending)\n        ),\n      },\n    ];\n\n    return (\n      <StyledPanel>\n        {!teams.length ? (\n          <EmptyMessage icon={<IconFlag size=\"xl\" />}>\n            {t(\n              'No teams have access to this project yet. Ask an admin to add your team to this project.'\n            )}\n          </EmptyMessage>\n        ) : (\n          <EmptyMessage\n            icon={<IconFlag size=\"xl\" />}\n            title={t(\"You're not a member of this project.\")}\n            description={t(\n              `You'll need to join a team with access before you can view this data.`\n            )}\n            action={\n              <Field>\n                <StyledSelectControl\n                  name=\"select\"\n                  placeholder={t('Select a Team')}\n                  options={teamAccess}\n                  onChange={teamObj => {\n                    const team = teamObj ? teamObj.value : null;\n                    this.setState({team});\n                  }}\n                />\n                {teamSlug ? (\n                  this.renderJoinTeam(teamSlug, features)\n                ) : (\n                  <Button disabled>{t('Select a Team')}</Button>\n                )}\n              </Field>\n            }\n          />\n        )}\n      </StyledPanel>\n    );\n  }\n}\n\nconst StyledPanel = styled(Panel)`\n  margin: ${space(2)} 0;\n`;\n\nconst Field = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(2)};\n  text-align: left;\n`;\n\nconst StyledSelectControl = styled(SelectControl)`\n  width: 250px;\n`;\n\nconst DisabledLabel = styled('div')`\n  display: flex;\n  opacity: 0.5;\n  overflow: hidden;\n`;\n\nexport default withApi(MissingProjectMembership);\n"],"names":["MissingProjectMembership","Component","loading","error","project","this","props","team","value","label","DisabledLabel","t","joinTeam","teamSlug","setState","api","orgId","organization","slug","teamId","success","addSuccessMessage","addErrorMessage","renderJoinTeam","features","TeamStore","state","has","busy","isPending","disabled","priority","type","onClick","bind","getTeamsForAccess","request","pending","teams","forEach","push","render","Set","teamAccess","options","map","getPendingTeamOption","StyledPanel","length","icon","size","title","description","action","Field","StyledSelectControl","name","placeholder","onChange","teamObj","Panel","space","SelectControl","withApi"],"sourceRoot":""}