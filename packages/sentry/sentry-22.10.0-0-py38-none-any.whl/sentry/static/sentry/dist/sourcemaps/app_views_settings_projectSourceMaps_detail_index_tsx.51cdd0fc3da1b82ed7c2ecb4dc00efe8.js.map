{"version":3,"file":"chunks/app_views_settings_projectSourceMaps_detail_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/role.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/sourceMapsArtifactRow.tsx","webpack:///./app/views/settings/projectSourceMaps/detail/index.tsx"],"sourcesContent":["import {useMemo} from 'react';\n\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Organization, User} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactElement | null;\n\nfunction checkUserRole(user: User, organization: Organization, role: RoleProps['role']) {\n  if (!user) {\n    return false;\n  }\n\n  if (isActiveSuperuser()) {\n    return true;\n  }\n\n  if (!Array.isArray(organization.orgRoleList)) {\n    return false;\n  }\n\n  const roleIds = organization.orgRoleList.map(r => r.id);\n\n  if (!roleIds.includes(role) || !roleIds.includes(organization.role ?? '')) {\n    return false;\n  }\n\n  const requiredIndex = roleIds.indexOf(role);\n  const currentIndex = roleIds.indexOf(organization.role ?? '');\n  return currentIndex >= requiredIndex;\n}\n\ninterface RoleProps {\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactElement | ChildrenRenderFn;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * Minimum required role\n   */\n  role: string;\n}\n\nfunction Role({role, organization, children}: RoleProps): React.ReactElement | null {\n  const user = ConfigStore.get('user');\n\n  const hasRole = useMemo(\n    () => checkUserRole(user, organization, role),\n    // It seems that this returns a stable reference, but\n    [organization, role, user]\n  );\n\n  if (isRenderFunc<ChildrenRenderFn>(children)) {\n    return children({hasRole});\n  }\n\n  return hasRole ? children : null;\n}\n\nconst withOrganizationRole = withOrganization(Role);\n\nexport {withOrganizationRole as Role};\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport {Role} from 'sentry/components/acl/role';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport FileSize from 'sentry/components/fileSize';\nimport Link from 'sentry/components/links/link';\nimport Tag from 'sentry/components/tag';\nimport TimeSince from 'sentry/components/timeSince';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconClock, IconDelete, IconDownload} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Artifact} from 'sentry/types';\n\ntype Props = {\n  artifact: Artifact;\n  downloadRole: string;\n  downloadUrl: string;\n  onDelete: (id: string) => void;\n  orgSlug: string;\n};\n\nconst SourceMapsArtifactRow = ({\n  artifact,\n  onDelete,\n  downloadUrl,\n  downloadRole,\n  orgSlug,\n}: Props) => {\n  const {name, size, dateCreated, id, dist} = artifact;\n\n  const handleDeleteClick = () => {\n    onDelete(id);\n  };\n\n  return (\n    <Fragment>\n      <NameColumn>\n        <Name>{name || `(${t('empty')})`}</Name>\n        <TimeAndDistWrapper>\n          <TimeWrapper>\n            <IconClock size=\"sm\" />\n            <TimeSince date={dateCreated} />\n          </TimeWrapper>\n          <StyledTag\n            type={dist ? 'info' : undefined}\n            tooltipText={dist ? undefined : t('No distribution set')}\n          >\n            {dist ?? t('none')}\n          </StyledTag>\n        </TimeAndDistWrapper>\n      </NameColumn>\n      <SizeColumn>\n        <FileSize bytes={size} />\n      </SizeColumn>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Role role={downloadRole}>\n            {({hasRole}) => (\n              <Tooltip\n                title={tct(\n                  'Artifacts can only be downloaded by users with organization [downloadRole] role[orHigher]. This can be changed in [settingsLink:Debug Files Access] settings.',\n                  {\n                    downloadRole,\n                    orHigher: downloadRole !== 'owner' ? ` ${t('or higher')}` : '',\n                    settingsLink: <Link to={`/settings/${orgSlug}/#debugFilesRole`} />,\n                  }\n                )}\n                disabled={hasRole}\n                isHoverable\n              >\n                <Button\n                  size=\"sm\"\n                  icon={<IconDownload size=\"sm\" />}\n                  disabled={!hasRole}\n                  href={downloadUrl}\n                  title={hasRole ? t('Download Artifact') : undefined}\n                  aria-label={t('Download Artifact')}\n                />\n              </Tooltip>\n            )}\n          </Role>\n\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete artifacts.')}\n              >\n                <Confirm\n                  message={t('Are you sure you want to remove this artifact?')}\n                  onConfirm={handleDeleteClick}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"sm\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={hasAccess ? t('Remove Artifact') : undefined}\n                    aria-label={t('Remove Artifact')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </Fragment>\n  );\n};\n\nconst NameColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst SizeColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n  align-items: center;\n`;\n\nconst ActionsColumn = styled(SizeColumn)``;\n\nconst Name = styled('div')`\n  padding-right: ${space(4)};\n  overflow-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst TimeAndDistWrapper = styled('div')`\n  width: 100%;\n  display: flex;\n  margin-top: ${space(1)};\n  align-items: center;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  font-size: ${p => p.theme.fontSizeMedium};\n  align-items: center;\n  color: ${p => p.theme.subText};\n`;\n\nconst StyledTag = styled(Tag)`\n  margin-left: ${space(1)};\n`;\n\nexport default SourceMapsArtifactRow;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport Access from 'sentry/components/acl/access';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport SearchBar from 'sentry/components/searchBar';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport Tooltip from 'sentry/components/tooltip';\nimport Version from 'sentry/components/version';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Artifact, Organization, Project} from 'sentry/types';\nimport {formatVersion} from 'sentry/utils/formatters';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nimport SourceMapsArtifactRow from './sourceMapsArtifactRow';\n\ntype RouteParams = {name: string; orgId: string; projectId: string};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  artifacts: Artifact[];\n};\n\nclass ProjectSourceMapsDetail extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId, name} = this.props.params;\n\n    return routeTitleGen(t('Archive %s', formatVersion(name)), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      artifacts: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['artifacts', this.getArtifactsUrl(), {query: {query: this.getQuery()}}]];\n  }\n\n  getArtifactsUrl() {\n    const {orgId, projectId, name} = this.props.params;\n\n    return `/projects/${orgId}/${projectId}/releases/${encodeURIComponent(name)}/files/`;\n  }\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  handleArtifactDelete = async (id: string) => {\n    addLoadingMessage(t('Removing artifact\\u2026'));\n\n    try {\n      await this.api.requestPromise(`${this.getArtifactsUrl()}${id}/`, {\n        method: 'DELETE',\n      });\n      this.fetchData();\n      addSuccessMessage(t('Artifact removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifact. Please try again.'));\n    }\n  };\n\n  handleArchiveDelete = async () => {\n    const {orgId, projectId, name} = this.props.params;\n\n    addLoadingMessage(t('Removing artifacts\\u2026'));\n\n    try {\n      await this.api.requestPromise(\n        `/projects/${orgId}/${projectId}/files/source-maps/`,\n        {\n          method: 'DELETE',\n          query: {name},\n        }\n      );\n      this.fetchData();\n      addSuccessMessage(t('Artifacts removed.'));\n    } catch {\n      addErrorMessage(t('Unable to remove artifacts. Please try again.'));\n    }\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return decodeScalar(query);\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no artifacts that match your search.');\n    }\n\n    return t('There are no artifacts in this archive.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderArtifacts() {\n    const {organization} = this.props;\n    const {artifacts} = this.state;\n    const artifactApiUrl = this.api.baseUrl + this.getArtifactsUrl();\n\n    if (!artifacts.length) {\n      return null;\n    }\n\n    return artifacts.map(artifact => {\n      return (\n        <SourceMapsArtifactRow\n          key={artifact.id}\n          artifact={artifact}\n          onDelete={this.handleArtifactDelete}\n          downloadUrl={`${artifactApiUrl}${artifact.id}/?download=1`}\n          downloadRole={organization.debugFilesRole}\n          orgSlug={organization.slug}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, artifacts, artifactsPageLinks} = this.state;\n    const {name, orgId} = this.props.params;\n    const {project} = this.props;\n\n    return (\n      <Fragment>\n        <StyledSettingsPageHeader\n          title={\n            <Title>\n              {t('Archive')}&nbsp;\n              <TextOverflow>\n                <Version version={name} tooltipRawVersion anchor={false} truncate />\n              </TextOverflow>\n            </Title>\n          }\n          action={\n            <StyledButtonBar gap={1}>\n              <ReleaseButton\n                to={`/organizations/${orgId}/releases/${encodeURIComponent(\n                  name\n                )}/?project=${project.id}`}\n              >\n                {t('Go to Release')}\n              </ReleaseButton>\n              <Access access={['project:releases']}>\n                {({hasAccess}) => (\n                  <Tooltip\n                    disabled={hasAccess}\n                    title={t('You do not have permission to delete artifacts.')}\n                  >\n                    <Confirm\n                      message={t(\n                        'Are you sure you want to remove all artifacts in this archive?'\n                      )}\n                      onConfirm={this.handleArchiveDelete}\n                      disabled={!hasAccess}\n                    >\n                      <Button\n                        icon={<IconDelete size=\"sm\" />}\n                        title={t('Remove All Artifacts')}\n                        aria-label={t('Remove All Artifacts')}\n                        disabled={!hasAccess}\n                      />\n                    </Confirm>\n                  </Tooltip>\n                )}\n              </Access>\n\n              <SearchBar\n                placeholder={t('Filter artifacts')}\n                onSearch={this.handleSearch}\n                query={this.getQuery()}\n              />\n            </StyledButtonBar>\n          }\n        />\n\n        <StyledPanelTable\n          headers={[\n            t('Artifact'),\n            <SizeColumn key=\"size\">{t('File Size')}</SizeColumn>,\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={artifacts.length === 0}\n          isLoading={loading}\n        >\n          {this.renderArtifacts()}\n        </StyledPanelTable>\n        <Pagination pageLinks={artifactsPageLinks} />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledSettingsPageHeader = styled(SettingsPageHeader)`\n  /*\n    ugly selector to make header work on mobile\n    we can refactor this once we start making other settings more responsive\n  */\n  > div {\n    @media (max-width: ${p => p.theme.breakpoints.large}) {\n      display: block;\n    }\n    > div {\n      min-width: 0;\n      @media (max-width: ${p => p.theme.breakpoints.large}) {\n        margin-bottom: ${space(2)};\n      }\n    }\n  }\n`;\n\nconst Title = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  justify-content: flex-start;\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: minmax(220px, 1fr) max-content 120px;\n`;\n\nconst ReleaseButton = styled(Button)`\n  white-space: nowrap;\n`;\n\nconst SizeColumn = styled('div')`\n  text-align: right;\n`;\n\nexport default ProjectSourceMapsDetail;\n"],"names":["withOrganizationRole","withOrganization","role","organization","children","user","ConfigStore","hasRole","useMemo","isActiveSuperuser","Array","isArray","orgRoleList","roleIds","map","r","id","includes","requiredIndex","indexOf","checkUserRole","isRenderFunc","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","SourceMapsArtifactRow","artifact","onDelete","downloadUrl","downloadRole","name","size","dateCreated","dist","handleDeleteClick","Fragment","NameColumn","Name","t","TimeAndDistWrapper","TimeWrapper","date","StyledTag","type","undefined","tooltipText","SizeColumn","bytes","ActionsColumn","gap","tct","orHigher","settingsLink","to","disabled","isHoverable","icon","href","access","hasAccess","message","onConfirm","space","p","theme","fontSizeMedium","subText","Tag","ProjectSourceMapsDetail","query","location","router","props","push","cursor","async","addLoadingMessage","api","requestPromise","getArtifactsUrl","method","fetchData","addSuccessMessage","addErrorMessage","orgId","projectId","params","routeTitleGen","formatVersion","getDefaultState","super","artifacts","getEndpoints","getQuery","encodeURIComponent","decodeScalar","getEmptyMessage","renderLoading","renderBody","renderArtifacts","state","artifactApiUrl","baseUrl","length","handleArtifactDelete","debugFilesRole","slug","loading","artifactsPageLinks","project","StyledSettingsPageHeader","Title","version","tooltipRawVersion","anchor","truncate","action","StyledButtonBar","ReleaseButton","handleArchiveDelete","placeholder","onSearch","handleSearch","StyledPanelTable","headers","emptyMessage","isEmpty","isLoading","pageLinks","SettingsPageHeader","breakpoints","large","ButtonBar","PanelTable","Button"],"sourceRoot":""}