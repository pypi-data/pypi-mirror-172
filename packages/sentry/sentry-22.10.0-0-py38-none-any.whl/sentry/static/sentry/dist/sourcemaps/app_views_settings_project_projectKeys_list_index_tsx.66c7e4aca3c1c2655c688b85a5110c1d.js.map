{"version":3,"file":"chunks/app_views_settings_project_projectKeys_list_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/projectKeys/list/keyRow.tsx","webpack:///./app/views/settings/project/projectKeys/list/index.tsx","webpack:///./app/views/settings/project/projectKeys/projectKeyCredentials.tsx"],"sourcesContent":["import {PlainRoute} from 'react-router';\nimport {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: PlainRoute[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport ClippedBox from 'sentry/components/clippedBox';\nimport Confirm from 'sentry/components/confirm';\nimport Link from 'sentry/components/links/link';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Scope} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport ProjectKeyCredentials from 'sentry/views/settings/project/projectKeys/projectKeyCredentials';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  access: Set<Scope>;\n  api: Client;\n  data: ProjectKey;\n  onRemove: (data: ProjectKey) => void;\n  onToggle: (isActive: boolean, data: ProjectKey) => void;\n  orgId: string;\n  projectId: string;\n} & Pick<RouteComponentProps<{}, {}>, 'routes' | 'location' | 'params'>;\n\nfunction KeyRow({data, onRemove, onToggle, access, routes, location, params}: Props) {\n  const handleEnable = () => onToggle(true, data);\n  const handleDisable = () => onToggle(false, data);\n\n  const editUrl = recreateRoute(`${data.id}/`, {routes, params, location});\n  const controlActive = access.has('project:write');\n\n  const controls = [\n    <Button key=\"edit\" to={editUrl} size=\"sm\">\n      {t('Configure')}\n    </Button>,\n    <Confirm\n      key=\"toggle\"\n      onConfirm={data.isActive ? handleDisable : handleEnable}\n      disabled={!controlActive}\n      confirmText={data.isActive ? t('Disable Key') : t('Enable Key')}\n      message={\n        data.isActive\n          ? t('Are you sure you want to disable this key?')\n          : t('Are you sure you want to re-enable this key?')\n      }\n    >\n      <Button key=\"toggle\" size=\"sm\">\n        {data.isActive ? t('Disable') : t('Enable')}\n      </Button>\n    </Confirm>,\n    <Confirm\n      key=\"remove\"\n      priority=\"danger\"\n      disabled={!controlActive}\n      onConfirm={() => onRemove(data)}\n      confirmText={t('Remove Key')}\n      message={t(\n        'Are you sure you want to remove this key? This action is irreversible.'\n      )}\n    >\n      <Button\n        size=\"sm\"\n        disabled={!controlActive}\n        icon={<IconDelete />}\n        aria-label={t('Delete')}\n      />\n    </Confirm>,\n  ];\n\n  return (\n    <Panel>\n      <PanelHeader hasButtons>\n        <Title disabled={!data.isActive}>\n          <PanelHeaderLink to={editUrl}>{data.label}</PanelHeaderLink>\n          {!data.isActive && (\n            <small>\n              {' \\u2014  '}\n              {t('Disabled')}\n            </small>\n          )}\n        </Title>\n        <Controls>\n          {controls.map((c, n) => (\n            <span key={n}> {c}</span>\n          ))}\n        </Controls>\n      </PanelHeader>\n\n      <StyledClippedBox clipHeight={300} defaultClipped btnText={t('Expand')}>\n        <StyledPanelBody disabled={!data.isActive}>\n          <ProjectKeyCredentials projectId={`${data.projectId}`} data={data} />\n        </StyledPanelBody>\n      </StyledClippedBox>\n    </Panel>\n  );\n}\n\nexport default KeyRow;\n\nconst StyledClippedBox = styled(ClippedBox)`\n  padding: 0;\n  margin: 0;\n  > *:last-child {\n    padding-bottom: ${space(3)};\n  }\n`;\n\nconst PanelHeaderLink = styled(Link)`\n  color: ${p => p.theme.subText};\n`;\n\nconst Title = styled('div')<{disabled: boolean}>`\n  flex: 1;\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n  margin-right: ${space(1)};\n`;\n\nconst Controls = styled('div')`\n  display: grid;\n  align-items: center;\n  gap: ${space(1)};\n  grid-auto-flow: column;\n`;\n\nconst StyledPanelBody = styled(PanelBody)<{disabled: boolean}>`\n  ${p => (p.disabled ? 'opacity: 0.5;' : '')};\n`;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport Button from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel} from 'sentry/components/panels';\nimport {IconAdd, IconFlag} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\nimport KeyRow from './keyRow';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  keyList: ProjectKey[];\n} & AsyncView['state'];\n\nclass ProjectKeys extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('Client Keys'), projectId, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['keyList', `/projects/${orgId}/${projectId}/keys/`]];\n  }\n\n  /**\n   * Optimistically remove key\n   */\n  handleRemoveKey = async (data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Revoking key\\u2026'));\n\n    this.setState(state => ({\n      keyList: state.keyList.filter(key => key.id !== data.id),\n    }));\n\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/keys/${data.id}/`, {\n        method: 'DELETE',\n      });\n      addSuccessMessage(t('Revoked key'));\n    } catch (_err) {\n      this.setState({\n        keyList: oldKeyList,\n      });\n      addErrorMessage(t('Unable to revoke key'));\n    }\n  };\n\n  handleToggleKey = async (isActive: boolean, data: ProjectKey) => {\n    const oldKeyList = [...this.state.keyList];\n\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    this.setState(state => {\n      const keyList = state.keyList.map(key => {\n        if (key.id === data.id) {\n          return {\n            ...key,\n            isActive: !data.isActive,\n          };\n        }\n\n        return key;\n      });\n      return {keyList};\n    });\n\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      await this.api.requestPromise(`/projects/${orgId}/${projectId}/keys/${data.id}/`, {\n        method: 'PUT',\n        data: {isActive},\n      });\n      addSuccessMessage(isActive ? t('Enabled key') : t('Disabled key'));\n    } catch (_err) {\n      addErrorMessage(isActive ? t('Error enabling key') : t('Error disabling key'));\n      this.setState({keyList: oldKeyList});\n    }\n  };\n\n  handleCreateKey = async () => {\n    const {orgId, projectId} = this.props.params;\n\n    try {\n      const data: ProjectKey = await this.api.requestPromise(\n        `/projects/${orgId}/${projectId}/keys/`,\n        {\n          method: 'POST',\n        }\n      );\n\n      this.setState(state => ({\n        keyList: [...state.keyList, data],\n      }));\n      addSuccessMessage(t('Created a new key.'));\n    } catch (_err) {\n      addErrorMessage(t('Unable to create new key. Please try again.'));\n    }\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <EmptyMessage\n          icon={<IconFlag size=\"xl\" />}\n          description={t('There are no keys active for this project.')}\n        />\n      </Panel>\n    );\n  }\n\n  renderResults() {\n    const {location, organization, routes, params} = this.props;\n    const {orgId, projectId} = params;\n    const access = new Set(organization.access);\n\n    return (\n      <Fragment>\n        {this.state.keyList.map(key => (\n          <KeyRow\n            api={this.api}\n            access={access}\n            key={key.id}\n            orgId={orgId}\n            projectId={`${projectId}`}\n            data={key}\n            onToggle={this.handleToggleKey}\n            onRemove={this.handleRemoveKey}\n            routes={routes}\n            location={location}\n            params={params}\n          />\n        ))}\n        <Pagination pageLinks={this.state.keyListPageLinks} />\n      </Fragment>\n    );\n  }\n\n  renderBody() {\n    const access = new Set(this.props.organization.access);\n    const isEmpty = !this.state.keyList.length;\n\n    return (\n      <div data-test-id=\"project-keys\">\n        <SettingsPageHeader\n          title={t('Client Keys')}\n          action={\n            access.has('project:write') ? (\n              <Button\n                onClick={this.handleCreateKey}\n                size=\"sm\"\n                priority=\"primary\"\n                icon={<IconAdd size=\"xs\" isCircled />}\n              >\n                {t('Generate New Key')}\n              </Button>\n            ) : null\n          }\n        />\n        <TextBlock>\n          {tct(\n            `To send data to Sentry you will need to configure an SDK with a client key\n          (usually referred to as the [code:SENTRY_DSN] value). For more\n          information on integrating Sentry with your application take a look at our\n          [link:documentation].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platform-redirect/?next=/configuration/options/\" />\n              ),\n              code: <code />,\n            }\n          )}\n        </TextBlock>\n\n        {isEmpty ? this.renderEmpty() : this.renderResults()}\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ProjectKeys);\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport Field from 'sentry/components/forms/field';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport getDynamicText from 'sentry/utils/getDynamicText';\nimport {ProjectKey} from 'sentry/views/settings/project/projectKeys/types';\n\ntype Props = {\n  data: ProjectKey;\n  projectId: string;\n  showDsn?: boolean;\n  showDsnPublic?: boolean;\n  showMinidump?: boolean;\n  showProjectId?: boolean;\n  showPublicKey?: boolean;\n  showSecretKey?: boolean;\n  showSecurityEndpoint?: boolean;\n  showUnreal?: boolean;\n};\n\nfunction ProjectKeyCredentials({\n  data,\n  projectId,\n  showDsn = true,\n  showDsnPublic = true,\n  showMinidump = true,\n  showProjectId = false,\n  showPublicKey = false,\n  showSecretKey = false,\n  showSecurityEndpoint = true,\n  showUnreal = true,\n}: Props) {\n  const [showDeprecatedDsn, setShowDeprecatedDsn] = useState(false);\n\n  return (\n    <Fragment>\n      {showDsnPublic && (\n        <Field\n          label={t('DSN')}\n          inline={false}\n          flexibleControlStateSize\n          help={tct('The DSN tells the SDK where to send the events to. [link]', {\n            link: showDsn ? (\n              <Link to=\"\" onClick={() => setShowDeprecatedDsn(curr => !curr)}>\n                {showDeprecatedDsn ? t('Hide deprecated DSN') : t('Show deprecated DSN')}\n              </Link>\n            ) : null,\n          })}\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.public,\n              fixed: '__DSN__',\n            })}\n          </TextCopyInput>\n          {showDeprecatedDsn && (\n            <StyledField\n              label={null}\n              help={t(\n                'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n              )}\n              inline={false}\n              flexibleControlStateSize\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: data.dsn.secret,\n                  fixed: '__DSN_DEPRECATED__',\n                })}\n              </TextCopyInput>\n            </StyledField>\n          )}\n        </Field>\n      )}\n\n      {/* this edge case should imho not happen, but just to be sure */}\n      {!showDsnPublic && showDsn && (\n        <Field\n          label={t('DSN (Deprecated)')}\n          help={t(\n            'Deprecated DSN includes a secret which is no longer required by newer SDK versions. If you are unsure which to use, follow installation instructions for your language.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.secret,\n              fixed: '__DSN_DEPRECATED__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n\n      {showSecurityEndpoint && (\n        <Field\n          label={t('Security Header Endpoint')}\n          help={t(\n            'Use your security header endpoint for features like CSP and Expect-CT reports.'\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.security,\n              fixed: '__SECURITY_HEADER_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n\n      {showMinidump && (\n        <Field\n          label={t('Minidump Endpoint')}\n          help={tct(\n            'Use this endpoint to upload [link], for example with Electron, Crashpad or Breakpad.',\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/native/guides/minidumps/\">\n                  minidump crash reports\n                </ExternalLink>\n              ),\n            }\n          )}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.minidump,\n              fixed: '__MINIDUMP_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n\n      {showUnreal && (\n        <Field\n          label={t('Unreal Engine 4 Endpoint')}\n          help={t('Use this endpoint to configure your UE4 Crash Reporter.')}\n          inline={false}\n          flexibleControlStateSize\n        >\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.dsn.unreal || '',\n              fixed: '__UNREAL_ENDPOINT__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n\n      {showPublicKey && (\n        <Field label={t('Public Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.public,\n              fixed: '__PUBLICKEY__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n\n      {showSecretKey && (\n        <Field label={t('Secret Key')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: data.secret,\n              fixed: '__SECRETKEY__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n\n      {showProjectId && (\n        <Field label={t('Project ID')} inline flexibleControlStateSize>\n          <TextCopyInput>\n            {getDynamicText({\n              value: projectId,\n              fixed: '__PROJECTID__',\n            })}\n          </TextCopyInput>\n        </Field>\n      )}\n    </Fragment>\n  );\n}\n\nconst StyledField = styled(Field)`\n  padding: ${space(0.5)} 0 0 0;\n`;\n\nexport default ProjectKeyCredentials;\n"],"names":["recreateRoute","to","options","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","KeyRow","data","onRemove","onToggle","access","editUrl","id","controlActive","has","controls","size","t","onConfirm","isActive","disabled","confirmText","message","priority","icon","hasButtons","Title","PanelHeaderLink","label","Controls","c","n","StyledClippedBox","clipHeight","defaultClipped","btnText","StyledPanelBody","projectId","ClippedBox","space","Link","p","theme","subText","PanelBody","ProjectKeys","async","oldKeyList","state","keyList","addLoadingMessage","setState","filter","key","orgId","props","api","requestPromise","method","addSuccessMessage","_err","addErrorMessage","routeTitleGen","getEndpoints","renderEmpty","description","renderResults","organization","Set","Fragment","handleToggleKey","handleRemoveKey","pageLinks","keyListPageLinks","renderBody","isEmpty","length","action","onClick","handleCreateKey","isCircled","tct","link","href","code","withOrganization","ProjectKeyCredentials","showDsn","showDsnPublic","showMinidump","showProjectId","showPublicKey","showSecretKey","showSecurityEndpoint","showUnreal","showDeprecatedDsn","setShowDeprecatedDsn","useState","inline","flexibleControlStateSize","help","curr","getDynamicText","value","dsn","public","fixed","StyledField","secret","security","minidump","unreal","Field"],"sourceRoot":""}