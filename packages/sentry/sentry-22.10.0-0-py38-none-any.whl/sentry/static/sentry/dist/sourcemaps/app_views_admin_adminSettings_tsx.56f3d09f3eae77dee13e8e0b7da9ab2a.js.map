{"version":3,"file":"chunks/app_views_admin_adminSettings_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"yfAQA,MAAMA,EAAmB,CACvB,oBACA,qBACA,uBACA,wBACA,oBACA,0BACA,qBACA,uBACA,4BACA,mBACA,2CACA,0CACA,+CACA,sDACA,kEACA,oDACA,wDACA,mDACA,uDAca,MAAMC,UAAsBC,EAAAA,EACrCC,eACF,MAAO,oBACR,CAEDC,eACE,MAAO,CAAC,CAAC,OAAQC,KAAKF,UACvB,CAEDG,aACE,MAAM,KAACC,GAAQF,KAAKG,MAEdC,EAAc,CAAC,EACfC,EAAS,CAAC,EAChB,IAAK,MAAMC,KAAOX,EAAkB,CAElC,MAAMY,EAASL,EAAKI,IAAQ,CAACE,MAAO,CAAC,EAAGC,WAAOC,GAE/C,QAAqBA,IAAjBH,EAAOE,OAAwC,KAAjBF,EAAOE,MAAc,CACrD,MAAME,GAAOC,EAAAA,EAAAA,IAAUN,GACvBF,EAAYE,GAAOK,EAAKE,aAAeF,EAAKE,eAAiB,EAC9D,MACCT,EAAYE,GAAOC,EAAOE,MAE5BJ,EAAOC,IAAOQ,EAAAA,EAAAA,GAAeR,EAAKC,EAAOC,MAC1C,CAED,OACE,0BACE,wBAAKO,EAAAA,EAAAA,GAAE,eAEP,QAAC,KAAD,CACEC,UAAU,MACVC,YAAajB,KAAKF,SAClBM,YAAaA,EACbc,YAAU,EAJZ,WAME,QAAC,KAAD,YACE,QAAC,KAAD,sBACCb,EAAO,qBACPA,EAAO,sBACPA,EAAO,wBACPA,EAAO,yBACPA,EAAO,yBAGV,QAAC,KAAD,YACE,QAAC,KAAD,+BACCA,EAAO,2BACPA,EAAO,sBACPA,EAAO,wBACPA,EAAO,iCAGV,QAAC,KAAD,YACE,QAAC,KAAD,qBACCA,EAAO,wBAGV,QAAC,IAAD,CAASc,SAAU,CAAC,wCAApB,WACE,QAAC,KAAD,YACE,QAAC,KAAD,uCACCd,EAAO,4CACPA,EAAO,2CACPA,EAAO,gDACPA,EAAO,uDACPA,EAAO,uEAEV,QAAC,KAAD,YACE,QAAC,KAAD,6CACCA,EAAO,qDACPA,EAAO,yDACPA,EAAO,oDACPA,EAAO,kEAMnB,E,qaCnFH,MAAMe,EAAsB,CAC1B,CACEd,IAAK,UAEP,CACEA,IAAK,OACLe,SAASN,EAAAA,EAAAA,GAAE,mBAEb,CACET,IAAK,OACLe,SAASN,EAAAA,EAAAA,GAAE,mBAEb,CACET,IAAK,SACLe,SAASN,EAAAA,EAAAA,GAAE,YAITO,EAA8B,CAClCT,aAAc,IAAM,IACpBU,UAAWC,EAAAA,GACXC,IAAK,EACLC,IAAK,EACLC,KAAM,MAGFC,EAAwC,CAC5C,CACEtB,IAAK,2CACLuB,OAAOd,EAAAA,EAAAA,GAAE,sCACTe,MAAMf,EAAAA,EAAAA,GACJ,0NAECO,GAEL,CACEhB,IAAK,0CACLuB,OAAOd,EAAAA,EAAAA,GAAE,qCACTe,MAAMf,EAAAA,EAAAA,GACJ,8NAECO,GAEL,CACEhB,IAAK,+CACLuB,OAAOd,EAAAA,EAAAA,GAAE,0CACTe,MAAMf,EAAAA,EAAAA,GACJ,sFAECO,GAEL,CACEhB,IAAK,sDACLuB,OAAOd,EAAAA,EAAAA,GAAE,0CACTe,MAAMf,EAAAA,EAAAA,GACJ,uFAECO,GAEL,CACEhB,IAAK,kEACLuB,OAAOd,EAAAA,EAAAA,GAAE,oDACTe,MAAMf,EAAAA,EAAAA,GACJ,0GAECO,GAEL,CACEhB,IAAK,kDACLuB,OAAOd,EAAAA,EAAAA,GAAE,sBACTe,MAAMf,EAAAA,EAAAA,GACJ,uKAECO,GAEL,CACEhB,IAAK,iDACLuB,OAAOd,EAAAA,EAAAA,GAAE,qBACTe,MAAMf,EAAAA,EAAAA,GACJ,mKAECO,GAEL,CACEhB,IAAK,qDACLuB,OAAOd,EAAAA,EAAAA,GAAE,2BACTe,MAAMf,EAAAA,EAAAA,GACJ,uKAECO,GAEL,CACEhB,IAAK,oDACLuB,OAAOd,EAAAA,EAAAA,GAAE,0BACTe,MAAMf,EAAAA,EAAAA,GACJ,mKAECO,GAEL,CACEhB,IAAK,wDACLuB,OAAOd,EAAAA,EAAAA,GAAE,qCACTe,MAAMf,EAAAA,EAAAA,GACJ,8KAECO,GAEL,CACEhB,IAAK,mDACLuB,OAAOd,EAAAA,EAAAA,GAAE,4BACTe,MAAMf,EAAAA,EAAAA,GACJ,wIAEFF,aAAc,IAAM,IACpBU,UAAWC,EAAAA,GACXC,IAAK,EACLC,IAAKK,OAAOC,iBACZL,KAAM,GAER,CACErB,IAAK,sDACLuB,OAAOd,EAAAA,EAAAA,GAAE,+BACTe,MAAMf,EAAAA,EAAAA,GACJ,gLAEFF,aAAc,IAAM,MACpBU,UAAWC,EAAAA,GACXC,IAAK,EACLC,IAAKK,OAAOC,iBACZL,KAAM,IAKJM,EAAuB,CAC3B,CACE3B,IAAK,oBACLuB,OAAOd,EAAAA,EAAAA,GAAE,YACTmB,YAAa,6BACbJ,MAAMf,EAAAA,EAAAA,GAAE,8EACRF,aAAc,IAAO,GAAEsB,SAASC,SAASC,aAAaF,SAASC,SAASE,QAE1E,CACEhC,IAAK,qBACLuB,OAAOd,EAAAA,EAAAA,GAAE,eACTmB,YAAa,oBACbJ,MAAMf,EAAAA,EAAAA,GAAE,uDAERQ,UAAWgB,EAAAA,GACX1B,aAAc,IAAM2B,EAAAA,EAAAA,IAAgB,QAAQC,OAE9C,CACEnC,IAAK,uBACLuB,OAAOd,EAAAA,EAAAA,GAAE,iBACTmB,YAAa,sBACbJ,MAAMf,EAAAA,EAAAA,GAAE,qDAERQ,UAAWgB,EAAAA,GACX1B,aAAc,IAAM2B,EAAAA,EAAAA,IAAgB,QAAQC,OAE9C,CACEnC,IAAK,wBACLuB,OAAOd,EAAAA,EAAAA,GAAE,kBACTmB,YAAa,uBACbJ,MAAMf,EAAAA,EAAAA,GAAE,sDAERQ,UAAWgB,EAAAA,GACX1B,aAAc,IAAM2B,EAAAA,EAAAA,IAAgB,QAAQC,OAE9C,CACEnC,IAAK,oBACLuB,OAAOd,EAAAA,EAAAA,GAAE,cACTmB,YAAa,WACbJ,MAAMf,EAAAA,EAAAA,GACJ,wHAGJ,CACET,IAAK,0BACLuB,OAAOd,EAAAA,EAAAA,GAAE,sBACTe,MAAMf,EAAAA,EAAAA,GAAE,0EACRQ,UAAWmB,EAAAA,GACX7B,aAAc,KAAM,GAEtB,CACEP,IAAK,qBACLuB,OAAOd,EAAAA,EAAAA,GAAE,iBACTmB,YAAa,UACbJ,MAAMf,EAAAA,EAAAA,GACJ,oHAGJ,CACET,IAAK,uBACLuB,OAAOd,EAAAA,EAAAA,GAAE,mBACTmB,YAAa,UACbJ,MAAMf,EAAAA,EAAAA,GACJ,sHAGJ,CACET,IAAK,4BACLuB,MAAO,mCACPK,YAAa,SACbJ,MAAMf,EAAAA,EAAAA,GACJ,uGAGJ,CACET,IAAK,mBACLuB,MAAO,mBACPN,UAAWoB,EAAAA,GAEXC,QAAS,0DACTC,SAAU,6CACVC,UAAU,EACVhB,MAAMiB,EAAAA,EAAAA,IACJ,0TACA,CACEC,MAAM,aAAGC,KAAK,+CAIpB,CACE3C,IAAK,YACLuB,OAAOd,EAAAA,EAAAA,GAAE,cACTQ,UAAWgB,EAAAA,GACX1B,aAAc,IAAO,UAASsB,SAASC,SAASc,WAChDpB,MAAMf,EAAAA,EAAAA,GAAE,6DAEV,CACET,IAAK,YACLuB,OAAOd,EAAAA,EAAAA,GAAE,aACTmB,YAAa,YACbrB,aAAc,IAAM,aAEtB,CACEP,IAAK,YACLuB,OAAOd,EAAAA,EAAAA,GAAE,aACTmB,YAAa,KACbrB,aAAc,IAAM,MAEtB,CACEP,IAAK,gBACLuB,OAAOd,EAAAA,EAAAA,GAAE,iBACTF,aAAc,IAAM,IAEtB,CACEP,IAAK,gBACLuB,OAAOd,EAAAA,EAAAA,GAAE,iBAKTF,aAAc,IAAM,IAEtB,CACEP,IAAK,eACLuB,OAAOd,EAAAA,EAAAA,GAAE,sCACTQ,UAAWmB,EAAAA,GACX7B,aAAc,KAAM,GAEtB,CACEP,IAAK,eACLuB,OAAOd,EAAAA,EAAAA,GAAE,sCACTQ,UAAWmB,EAAAA,GACX7B,aAAc,KAAM,MAEnBe,GAGCuB,EAAiBC,IAAMnB,GAAaoB,GAAOA,EAAI/C,MAE/CgD,EAAkB,CACtBC,aACE,+EACFC,aAAc,8DAGT,SAAS5C,EAAUL,GACxB,OAAO4C,EAAe5C,EACvB,CAEM,SAASkD,EAAiBlD,GAC/B,MAAMmD,EAAO9C,EAAUL,GACvB,OAAOmD,EAAK7C,aAAe6C,EAAK7C,oBAAiBH,CAClD,CAED,SAASiD,EAAkBC,GACzB,OAAO3B,EAAY4B,QAAOtD,GAAUA,EAAOD,IAAIwD,MAAM,KAAK,KAAOF,EAAQtD,KAC1E,CAEM,SAASQ,EAAeP,EAAgBC,GAC7C,MAAMkD,EAAO,IAAI9C,EAAUL,MAAYC,GACjCuD,EAAQL,EAAKnC,WAAayC,EAAAA,GAChC,OACE,QAACD,EAAD,IACML,EACJO,KAAM1D,EACND,IAAKC,EACLM,aAAc4C,EAAiBlD,GAC/B2D,SAAUR,EAAKQ,WAAaR,EAAKS,WACjCC,eAAgBV,EAAKU,gBAAkBd,EAAgBI,EAAKU,iBAGjE,CAED,SAASC,EAAmBT,EAAkBvD,GAC5C,OACE,8BACGuD,EAAQvC,UAAW,2BAASuC,EAAQvC,UACpChB,IAFYuD,EAAQtD,IAK1B,CAEM,SAASgE,EAAQC,GACtB,MAAMC,EAA0B,GAEhC,IAAK,MAAMZ,KAAWxC,EAAU,CAC9B,MAAMqD,EAAe,GAErB,IAAK,MAAMlE,KAAUoD,EAAkBC,GACjCW,EAAShE,EAAOD,MAClBmE,EAAIC,KAAKH,EAAShE,EAAOD,MAIzBmE,EAAIE,QACNH,EAAKE,KAAKL,EAAmBT,EAASa,GAEzC,CAED,OAAOD,CACR,CA1Ce1D,EAAAA,YAAAA,iBAePuD,EAAAA,YAAAA,oB,qQClVM,MAAMxE,UAGX+E,EAAAA,EACRC,WACE,MAAO,EACR,CAEDC,SACE,OACE,QAAC,IAAD,CAAqBC,MAAO/E,KAAK6E,WAAjC,SACG7E,KAAKgF,mBAGX,EAdkBnF,EAAAA,YAAAA,W,8CCNrB,IAAIoF,EAAkB,EAAQ,8CA+B1B7B,EA9BmB,EAAQ,8CA8BnB8B,EAAiB,SAASC,EAAQ1E,EAAOH,GACnD2E,EAAgBE,EAAQ7E,EAAKG,EAC/B,IAEA2E,EAAOC,QAAUjC,C","sources":["webpack:///./app/views/admin/adminSettings.tsx","webpack:///./app/views/admin/options.tsx","webpack:///./app/views/asyncView.tsx","webpack:///../node_modules/lodash/keyBy.js"],"sourcesContent":["import Feature from 'sentry/components/acl/feature';\nimport {Form} from 'sentry/components/forms';\nimport {Panel, PanelHeader} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport AsyncView from 'sentry/views/asyncView';\n\nimport {getOption, getOptionField} from './options';\n\nconst optionsAvailable = [\n  'system.url-prefix',\n  'system.admin-email',\n  'system.support-email',\n  'system.security-email',\n  'system.rate-limit',\n  'auth.allow-registration',\n  'auth.ip-rate-limit',\n  'auth.user-rate-limit',\n  'api.rate-limit.org-create',\n  'beacon.anonymous',\n  'performance.issues.all.problem-detection',\n  'performance.issues.all.problem-creation',\n  'performance.issues.all.early-adopter-rollout',\n  'performance.issues.all.general-availability-rollout',\n  'performance.issues.all.post-process-group-early-adopter-rollout',\n  'performance.issues.n_plus_one_db.problem-creation',\n  'performance.issues.n_plus_one_db_ext.problem-creation',\n  'performance.issues.n_plus_one_db.count_threshold',\n  'performance.issues.n_plus_one_db.duration_threshold',\n];\n\ntype Field = ReturnType<typeof getOption>;\n\ntype FieldDef = {\n  field: Field;\n  value: string | undefined;\n};\n\ntype State = AsyncView['state'] & {\n  data: Record<string, FieldDef>;\n};\n\nexport default class AdminSettings extends AsyncView<{}, State> {\n  get endpoint() {\n    return '/internal/options/';\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['data', this.endpoint]];\n  }\n\n  renderBody() {\n    const {data} = this.state;\n\n    const initialData = {};\n    const fields = {};\n    for (const key of optionsAvailable) {\n      // TODO(dcramer): we should not be mutating options\n      const option = data[key] ?? {field: {}, value: undefined};\n\n      if (option.value === undefined || option.value === '') {\n        const defn = getOption(key);\n        initialData[key] = defn.defaultValue ? defn.defaultValue() : '';\n      } else {\n        initialData[key] = option.value;\n      }\n      fields[key] = getOptionField(key, option.field);\n    }\n\n    return (\n      <div>\n        <h3>{t('Settings')}</h3>\n\n        <Form\n          apiMethod=\"PUT\"\n          apiEndpoint={this.endpoint}\n          initialData={initialData}\n          saveOnBlur\n        >\n          <Panel>\n            <PanelHeader>General</PanelHeader>\n            {fields['system.url-prefix']}\n            {fields['system.admin-email']}\n            {fields['system.support-email']}\n            {fields['system.security-email']}\n            {fields['system.rate-limit']}\n          </Panel>\n\n          <Panel>\n            <PanelHeader>Security & Abuse</PanelHeader>\n            {fields['auth.allow-registration']}\n            {fields['auth.ip-rate-limit']}\n            {fields['auth.user-rate-limit']}\n            {fields['api.rate-limit.org-create']}\n          </Panel>\n\n          <Panel>\n            <PanelHeader>Beacon</PanelHeader>\n            {fields['beacon.anonymous']}\n          </Panel>\n\n          <Feature features={['organizations:performance-issues-dev']}>\n            <Panel>\n              <PanelHeader>Performance Issues - All</PanelHeader>\n              {fields['performance.issues.all.problem-detection']}\n              {fields['performance.issues.all.problem-creation']}\n              {fields['performance.issues.all.early-adopter-rollout']}\n              {fields['performance.issues.all.general-availability-rollout']}\n              {fields['performance.issues.all.post-process-group-early-adopter-rollout']}\n            </Panel>\n            <Panel>\n              <PanelHeader>Performance Issues - Detectors</PanelHeader>\n              {fields['performance.issues.n_plus_one_db.problem-creation']}\n              {fields['performance.issues.n_plus_one_db_ext.problem-creation']}\n              {fields['performance.issues.n_plus_one_db.count_threshold']}\n              {fields['performance.issues.n_plus_one_db.duration_threshold']}\n            </Panel>\n          </Feature>\n        </Form>\n      </div>\n    );\n  }\n}\n","import keyBy from 'lodash/keyBy';\n\nimport {\n  BooleanField,\n  EmailField,\n  NumberField,\n  RadioBooleanField,\n  TextField,\n} from 'sentry/components/forms';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\n\ntype Section = {\n  key: string;\n  heading?: string;\n};\n\ntype Field = {\n  key: string;\n  label: React.ReactNode;\n  allowEmpty?: boolean;\n  component?: React.ComponentType<any>;\n  defaultValue?: () => string | number | false;\n  disabled?: boolean;\n  disabledReason?: string;\n  help?: React.ReactNode;\n  max?: number;\n  min?: number;\n  noLabel?: string;\n  placeholder?: string;\n  required?: boolean;\n  step?: number;\n  yesFirst?: boolean;\n  yesLabel?: string;\n};\n\n// This are ordered based on their display order visually\nconst sections: Section[] = [\n  {\n    key: 'system',\n  },\n  {\n    key: 'mail',\n    heading: t('Outbound email'),\n  },\n  {\n    key: 'auth',\n    heading: t('Authentication'),\n  },\n  {\n    key: 'beacon',\n    heading: t('Beacon'),\n  },\n];\n\nconst HIGH_THROUGHPUT_RATE_OPTION = {\n  defaultValue: () => '0',\n  component: NumberField,\n  min: 0.0,\n  max: 1.0,\n  step: 0.0001,\n};\n\nconst performanceOptionDefinitions: Field[] = [\n  {\n    key: 'performance.issues.all.problem-detection',\n    label: t('Performance problem detection rate'),\n    help: t(\n      'Controls the rate at which performance problems are detected across the entire system. A value of 0 will disable performance issue detection, and a value of 1.0 turns on detection for every ingested transaction.'\n    ),\n    ...HIGH_THROUGHPUT_RATE_OPTION,\n  },\n  {\n    key: 'performance.issues.all.problem-creation',\n    label: t('Performance problem creation rate'),\n    help: t(\n      'Controls the rate at which performance issues are created across the entire system. A value of 0 will disable performance issue detection, and a value of 1.0 turns on creation for every detected performance problem.'\n    ),\n    ...HIGH_THROUGHPUT_RATE_OPTION,\n  },\n  {\n    key: 'performance.issues.all.early-adopter-rollout',\n    label: t('Performance issues creation EA Rollout'),\n    help: t(\n      'Controls the rate at which performance issues are created for EA organizations.'\n    ),\n    ...HIGH_THROUGHPUT_RATE_OPTION,\n  },\n  {\n    key: 'performance.issues.all.general-availability-rollout',\n    label: t('Performance issues creation GA Rollout'),\n    help: t(\n      'Controls the rate at which performance issues are created for all organizations.'\n    ),\n    ...HIGH_THROUGHPUT_RATE_OPTION,\n  },\n  {\n    key: 'performance.issues.all.post-process-group-early-adopter-rollout',\n    label: t('Performance issues post process group EA Rollout'),\n    help: t(\n      'Controls the rate at which performance issues sent through post process group for EA organizations.'\n    ),\n    ...HIGH_THROUGHPUT_RATE_OPTION,\n  },\n  {\n    key: 'performance.issues.n_plus_one.problem-detection',\n    label: t('N+1 detection rate'),\n    help: t(\n      'Controls the rate at which performance problems are detected specifically for N+1 detection. Value of 0 will disable detection, a value of 1.0 fully enables it.'\n    ),\n    ...HIGH_THROUGHPUT_RATE_OPTION,\n  },\n  {\n    key: 'performance.issues.n_plus_one.problem-creation',\n    label: t('N+1 creation rate'),\n    help: t(\n      'Controls the rate at which performance issues are created specifically for N+1 detection. Value of 0 will disable creation, a value of 1.0 fully enables it.'\n    ),\n    ...HIGH_THROUGHPUT_RATE_OPTION,\n  },\n  {\n    key: 'performance.issues.n_plus_one_db.problem-detection',\n    label: t('N+1 (DB) detection rate'),\n    help: t(\n      'Controls the rate at which performance problems are detected specifically for N+1 detection. Value of 0 will disable detection, a value of 1.0 fully enables it.'\n    ),\n    ...HIGH_THROUGHPUT_RATE_OPTION,\n  },\n  {\n    key: 'performance.issues.n_plus_one_db.problem-creation',\n    label: t('N+1 (DB) creation rate'),\n    help: t(\n      'Controls the rate at which performance issues are created specifically for N+1 detection. Value of 0 will disable creation, a value of 1.0 fully enables it.'\n    ),\n    ...HIGH_THROUGHPUT_RATE_OPTION,\n  },\n  {\n    key: 'performance.issues.n_plus_one_db_ext.problem-creation',\n    label: t('N+1 (DB) (Extended) creation rate'),\n    help: t(\n      'Controls the rate at which performance issues are created specifically for N+1 detection (extended). Value of 0 will disable creation, a value of 1.0 fully enables it.'\n    ),\n    ...HIGH_THROUGHPUT_RATE_OPTION,\n  },\n  {\n    key: 'performance.issues.n_plus_one_db.count_threshold',\n    label: t('N+1 (DB) count threshold'),\n    help: t(\n      'Detector threshold. Controls the number of spans required to trigger performance issues. This affects all organizations system-wide.'\n    ),\n    defaultValue: () => '5',\n    component: NumberField,\n    min: 0,\n    max: Number.MAX_SAFE_INTEGER,\n    step: 1,\n  },\n  {\n    key: 'performance.issues.n_plus_one_db.duration_threshold', // TODO: For fixing typo later.\n    label: t('N+1 (DB) duration threshold'),\n    help: t(\n      'Detector threshold. Controls the threshold for the cumulative duration of involved spans required to trigger performance issues. This affects all organizations system-wide.'\n    ),\n    defaultValue: () => '100',\n    component: NumberField,\n    min: 0,\n    max: Number.MAX_SAFE_INTEGER,\n    step: 1,\n  },\n];\n\n// This are ordered based on their display order visually\nconst definitions: Field[] = [\n  {\n    key: 'system.url-prefix',\n    label: t('Root URL'),\n    placeholder: 'https://sentry.example.com',\n    help: t('The root web address which is used to communicate with the Sentry backend.'),\n    defaultValue: () => `${document.location.protocol}//${document.location.host}`,\n  },\n  {\n    key: 'system.admin-email',\n    label: t('Admin Email'),\n    placeholder: 'admin@example.com',\n    help: t('The technical contact for this Sentry installation.'),\n    // TODO(dcramer): this should not be hardcoded to a component\n    component: EmailField,\n    defaultValue: () => ConfigStore.get('user').email,\n  },\n  {\n    key: 'system.support-email',\n    label: t('Support Email'),\n    placeholder: 'support@example.com',\n    help: t('The support contact for this Sentry installation.'),\n    // TODO(dcramer): this should not be hardcoded to a component\n    component: EmailField,\n    defaultValue: () => ConfigStore.get('user').email,\n  },\n  {\n    key: 'system.security-email',\n    label: t('Security Email'),\n    placeholder: 'security@example.com',\n    help: t('The security contact for this Sentry installation.'),\n    // TODO(dcramer): this should not be hardcoded to a component\n    component: EmailField,\n    defaultValue: () => ConfigStore.get('user').email,\n  },\n  {\n    key: 'system.rate-limit',\n    label: t('Rate Limit'),\n    placeholder: 'e.g. 500',\n    help: t(\n      'The maximum number of events the system should accept per minute. A value of 0 will disable the default rate limit.'\n    ),\n  },\n  {\n    key: 'auth.allow-registration',\n    label: t('Allow Registration'),\n    help: t('Allow anyone to create an account and access this Sentry installation.'),\n    component: BooleanField,\n    defaultValue: () => false,\n  },\n  {\n    key: 'auth.ip-rate-limit',\n    label: t('IP Rate Limit'),\n    placeholder: 'e.g. 10',\n    help: t(\n      'The maximum number of times an authentication attempt may be made by a single IP address in a 60 second window.'\n    ),\n  },\n  {\n    key: 'auth.user-rate-limit',\n    label: t('User Rate Limit'),\n    placeholder: 'e.g. 10',\n    help: t(\n      'The maximum number of times an authentication attempt may be made against a single account in a 60 second window.'\n    ),\n  },\n  {\n    key: 'api.rate-limit.org-create',\n    label: 'Organization Creation Rate Limit',\n    placeholder: 'e.g. 5',\n    help: t(\n      'The maximum number of organizations which may be created by a single account in a one hour window.'\n    ),\n  },\n  {\n    key: 'beacon.anonymous',\n    label: 'Usage Statistics',\n    component: RadioBooleanField,\n    // yes and no are inverted here due to the nature of this configuration\n    noLabel: 'Send my contact information along with usage statistics',\n    yesLabel: 'Please keep my usage information anonymous',\n    yesFirst: false,\n    help: tct(\n      'If enabled, any stats reported to sentry.io will exclude identifying information (such as your administrative email address). By anonymizing your installation the Sentry team will be unable to contact you about security updates. For more information on what data is sent to Sentry, see the [link:documentation].',\n      {\n        link: <a href=\"https://develop.sentry.dev/self-hosted/\" />,\n      }\n    ),\n  },\n  {\n    key: 'mail.from',\n    label: t('Email From'),\n    component: EmailField,\n    defaultValue: () => `sentry@${document.location.hostname}`,\n    help: t('Email address to be used in From for all outbound email.'),\n  },\n  {\n    key: 'mail.host',\n    label: t('SMTP Host'),\n    placeholder: 'localhost',\n    defaultValue: () => 'localhost',\n  },\n  {\n    key: 'mail.port',\n    label: t('SMTP Port'),\n    placeholder: '25',\n    defaultValue: () => '25',\n  },\n  {\n    key: 'mail.username',\n    label: t('SMTP Username'),\n    defaultValue: () => '',\n  },\n  {\n    key: 'mail.password',\n    label: t('SMTP Password'),\n    // TODO(mattrobenolt): We don't want to use a real password field unless\n    // there's a way to reveal it. Without being able to see the password, it's\n    // impossible to confirm if it's right.\n    // component: PasswordField,\n    defaultValue: () => '',\n  },\n  {\n    key: 'mail.use-tls',\n    label: t('Use STARTTLS? (exclusive with SSL)'),\n    component: BooleanField,\n    defaultValue: () => false,\n  },\n  {\n    key: 'mail.use-ssl',\n    label: t('Use SSL? (exclusive with STARTTLS)'),\n    component: BooleanField,\n    defaultValue: () => false,\n  },\n  ...performanceOptionDefinitions,\n];\n\nconst definitionsMap = keyBy(definitions, def => def.key);\n\nconst disabledReasons = {\n  diskPriority:\n    'This setting is defined in config.yml and may not be changed via the web UI.',\n  smtpDisabled: 'SMTP mail has been disabled, so this option is unavailable',\n};\n\nexport function getOption(option: string): Field {\n  return definitionsMap[option];\n}\n\nexport function getOptionDefault(option: string): string | number | false | undefined {\n  const meta = getOption(option);\n  return meta.defaultValue ? meta.defaultValue() : undefined;\n}\n\nfunction optionsForSection(section: Section) {\n  return definitions.filter(option => option.key.split('.')[0] === section.key);\n}\n\nexport function getOptionField(option: string, field: Field) {\n  const meta = {...getOption(option), ...field};\n  const Field = meta.component || TextField;\n  return (\n    <Field\n      {...meta}\n      name={option}\n      key={option}\n      defaultValue={getOptionDefault(option)}\n      required={meta.required && !meta.allowEmpty}\n      disabledReason={meta.disabledReason && disabledReasons[meta.disabledReason]}\n    />\n  );\n}\n\nfunction getSectionFieldSet(section: Section, fields: Field[]) {\n  return (\n    <fieldset key={section.key}>\n      {section.heading && <legend>{section.heading}</legend>}\n      {fields}\n    </fieldset>\n  );\n}\n\nexport function getForm(fieldMap: Record<string, Field>) {\n  const sets: React.ReactNode[] = [];\n\n  for (const section of sections) {\n    const set: Field[] = [];\n\n    for (const option of optionsForSection(section)) {\n      if (fieldMap[option.key]) {\n        set.push(fieldMap[option.key]);\n      }\n    }\n\n    if (set.length) {\n      sets.push(getSectionFieldSet(section, set));\n    }\n  }\n\n  return sets;\n}\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n"],"names":["optionsAvailable","AdminSettings","AsyncView","endpoint","getEndpoints","this","renderBody","data","state","initialData","fields","key","option","field","value","undefined","defn","getOption","defaultValue","getOptionField","t","apiMethod","apiEndpoint","saveOnBlur","features","sections","heading","HIGH_THROUGHPUT_RATE_OPTION","component","NumberField","min","max","step","performanceOptionDefinitions","label","help","Number","MAX_SAFE_INTEGER","definitions","placeholder","document","location","protocol","host","EmailField","ConfigStore","email","BooleanField","RadioBooleanField","noLabel","yesLabel","yesFirst","tct","link","href","hostname","definitionsMap","keyBy","def","disabledReasons","diskPriority","smtpDisabled","getOptionDefault","meta","optionsForSection","section","filter","split","Field","TextField","name","required","allowEmpty","disabledReason","getSectionFieldSet","getForm","fieldMap","sets","set","push","length","AsyncComponent","getTitle","render","title","renderComponent","baseAssignValue","createAggregator","result","module","exports"],"sourceRoot":""}