{"version":3,"file":"chunks/app_components_editableText_tsx-app_utils_performance_contexts_metricsCardinality_tsx-node_mo-486b2b.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/useKeyPress.tsx","webpack:///./app/components/editableText.tsx","webpack:///./app/utils/useOnClickOutside.tsx","webpack:///./app/utils/performance/metricsEnhanced/metricsCompatibilityQuery.tsx","webpack:///./app/utils/performance/metricsEnhanced/metricsCompatibilityQuerySums.tsx","webpack:///./app/utils/performance/contexts/metricsCardinality.tsx","webpack:///../node_modules/lodash/maxBy.js"],"sourcesContent":["import {useEffect, useState} from 'react';\n\n/**\n * Hook to detect when a specific key is being pressed\n */\nconst useKeyPress = (targetKey: string, target?: HTMLElement) => {\n  const [keyPressed, setKeyPressed] = useState(false);\n  const current = target ?? document.body;\n\n  useEffect(() => {\n    const downHandler = ({key}: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    };\n\n    const upHandler = ({key}: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    current.addEventListener('keydown', downHandler);\n    current.addEventListener('keyup', upHandler);\n\n    return () => {\n      current.removeEventListener('keydown', downHandler);\n      current.removeEventListener('keyup', upHandler);\n    };\n  }, [targetKey, current]);\n\n  return keyPressed;\n};\n\nexport default useKeyPress;\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport Input from 'sentry/components/input';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport {IconEdit} from 'sentry/icons/iconEdit';\nimport space from 'sentry/styles/space';\nimport {defined} from 'sentry/utils';\nimport useKeypress from 'sentry/utils/useKeyPress';\nimport useOnClickOutside from 'sentry/utils/useOnClickOutside';\n\ntype Props = {\n  onChange: (value: string) => void;\n  value: string;\n  'aria-label'?: string;\n  autoSelect?: boolean;\n  className?: string;\n  errorMessage?: React.ReactNode;\n  isDisabled?: boolean;\n  maxLength?: number;\n  name?: string;\n  successMessage?: React.ReactNode;\n};\n\nfunction EditableText({\n  value,\n  onChange,\n  name,\n  errorMessage,\n  successMessage,\n  maxLength,\n  isDisabled = false,\n  autoSelect = false,\n  className,\n  'aria-label': ariaLabel,\n}: Props) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [inputValue, setInputValue] = useState(value);\n\n  const isEmpty = !inputValue.trim();\n\n  const innerWrapperRef = useRef<HTMLDivElement>(null);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const enter = useKeypress('Enter');\n  const esc = useKeypress('Escape');\n\n  function revertValueAndCloseEditor() {\n    if (value !== inputValue) {\n      setInputValue(value);\n    }\n\n    if (isEditing) {\n      setIsEditing(false);\n    }\n  }\n\n  // check to see if the user clicked outside of this component\n  useOnClickOutside(innerWrapperRef, () => {\n    if (!isEditing) {\n      return;\n    }\n\n    if (isEmpty) {\n      displayStatusMessage('error');\n      return;\n    }\n\n    if (inputValue !== value) {\n      onChange(inputValue);\n      displayStatusMessage('success');\n    }\n\n    setIsEditing(false);\n  });\n\n  const onEnter = useCallback(() => {\n    if (enter) {\n      if (isEmpty) {\n        displayStatusMessage('error');\n        return;\n      }\n\n      if (inputValue !== value) {\n        onChange(inputValue);\n        displayStatusMessage('success');\n      }\n\n      setIsEditing(false);\n    }\n  }, [enter, inputValue, onChange]);\n\n  const onEsc = useCallback(() => {\n    if (esc) {\n      revertValueAndCloseEditor();\n    }\n  }, [esc]);\n\n  useEffect(() => {\n    revertValueAndCloseEditor();\n  }, [isDisabled, value]);\n\n  // focus the cursor in the input field on edit start\n  useEffect(() => {\n    if (isEditing) {\n      const inputElement = inputRef.current;\n      if (defined(inputElement)) {\n        inputElement.focus();\n      }\n    }\n  }, [isEditing]);\n\n  useEffect(() => {\n    if (isEditing) {\n      // if Enter is pressed, save the value and close the editor\n      onEnter();\n      // if Escape is pressed, revert the value and close the editor\n      onEsc();\n    }\n  }, [onEnter, onEsc, isEditing]); // watch the Enter and Escape key presses\n\n  function displayStatusMessage(status: 'error' | 'success') {\n    if (status === 'error') {\n      if (errorMessage) {\n        addErrorMessage(errorMessage);\n      }\n      return;\n    }\n\n    if (successMessage) {\n      addSuccessMessage(successMessage);\n    }\n  }\n\n  function handleInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setInputValue(event.target.value);\n  }\n\n  function handleEditClick() {\n    setIsEditing(true);\n  }\n\n  return (\n    <Wrapper isDisabled={isDisabled} isEditing={isEditing} className={className}>\n      {isEditing ? (\n        <InputWrapper\n          ref={innerWrapperRef}\n          isEmpty={isEmpty}\n          data-test-id=\"editable-text-input\"\n        >\n          <StyledInput\n            aria-label={ariaLabel}\n            name={name}\n            ref={inputRef}\n            value={inputValue}\n            onChange={handleInputChange}\n            onFocus={event => autoSelect && event.target.select()}\n            maxLength={maxLength}\n          />\n          <InputLabel>{inputValue}</InputLabel>\n        </InputWrapper>\n      ) : (\n        <Label\n          onClick={isDisabled ? undefined : handleEditClick}\n          ref={labelRef}\n          isDisabled={isDisabled}\n          data-test-id=\"editable-text-label\"\n        >\n          <InnerLabel>{inputValue}</InnerLabel>\n          {!isDisabled && <IconEdit />}\n        </Label>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default EditableText;\n\nconst Label = styled('div')<{isDisabled: boolean}>`\n  display: grid;\n  grid-auto-flow: column;\n  align-items: center;\n  gap: ${space(1)};\n  cursor: ${p => (p.isDisabled ? 'default' : 'pointer')};\n`;\n\nconst InnerLabel = styled(TextOverflow)`\n  border-top: 1px solid transparent;\n  border-bottom: 1px dotted ${p => p.theme.gray200};\n`;\n\nconst InputWrapper = styled('div')<{isEmpty: boolean}>`\n  display: inline-block;\n  background: ${p => p.theme.gray100};\n  border-radius: ${p => p.theme.borderRadius};\n  margin: -${space(0.5)} -${space(1)};\n  padding: ${space(0.5)} ${space(1)};\n  max-width: calc(100% + ${space(2)});\n`;\n\nconst StyledInput = styled(Input)`\n  border: none !important;\n  background: transparent;\n  height: auto;\n  min-height: 34px;\n  padding: 0;\n  font-size: inherit;\n  &,\n  &:focus,\n  &:active,\n  &:hover {\n    box-shadow: none;\n  }\n`;\n\nconst InputLabel = styled('div')`\n  height: 0;\n  opacity: 0;\n  white-space: pre;\n  padding: 0 ${space(1)};\n`;\n\nconst Wrapper = styled('div')<{isDisabled: boolean; isEditing: boolean}>`\n  display: flex;\n\n  ${p =>\n    p.isDisabled &&\n    `\n      ${InnerLabel} {\n        border-bottom-color: transparent;\n      }\n    `}\n`;\n","import {useEffect} from 'react';\n\n// hook from https://usehooks.com/useOnClickOutside/\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\n  ref: React.RefObject<T>,\n  handler: (event: MouseEvent | TouchEvent) => void\n) {\n  useEffect(\n    () => {\n      const listener = (event: MouseEvent | TouchEvent) => {\n        const el = ref?.current;\n\n        // Do nothing if clicking ref's element or descendent elements\n        if (!el || el.contains(event.target as Node)) {\n          return;\n        }\n\n        handler(event);\n      };\n\n      document.addEventListener('mousedown', listener);\n      document.addEventListener('touchstart', listener);\n      return () => {\n        document.removeEventListener('mousedown', listener);\n        document.removeEventListener('touchstart', listener);\n      };\n    },\n    // Reload only if ref or handler changes\n    [ref, handler]\n  );\n}\n\nexport default useOnClickOutside;\n","import omit from 'lodash/omit';\n\nimport EventView from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\n\nexport interface MetricsCompatibilityData {\n  compatible_projects?: number[];\n  dynamic_sampling_projects?: number[];\n}\n\ntype QueryProps = Omit<DiscoverQueryProps, 'eventView' | 'api'> & {\n  children: (props: GenericChildrenProps<MetricsCompatibilityData>) => React.ReactNode;\n  eventView: EventView;\n};\n\nfunction getRequestPayload({\n  eventView,\n  location,\n}: Pick<DiscoverQueryProps, 'eventView' | 'location'>) {\n  return omit(eventView.getEventsAPIPayload(location), [\n    'field',\n    'sort',\n    'per_page',\n    'query',\n  ]);\n}\n\nexport default function MetricsCompatibilityQuery({children, ...props}: QueryProps) {\n  return (\n    <GenericDiscoverQuery<MetricsCompatibilityData, {}>\n      route=\"metrics-compatibility-sums\"\n      getRequestPayload={getRequestPayload}\n      {...props}\n    >\n      {({tableData, ...rest}) => {\n        return children({\n          tableData,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n","import omit from 'lodash/omit';\n\nimport EventView from 'sentry/utils/discover/eventView';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\n\nexport interface MetricsCompatibilitySumData {\n  sum: {\n    metrics?: number;\n    metrics_null?: number;\n    metrics_unparam?: number;\n  };\n}\n\ntype QueryProps = Omit<DiscoverQueryProps, 'eventView' | 'api'> & {\n  children: (props: GenericChildrenProps<MetricsCompatibilitySumData>) => React.ReactNode;\n  eventView: EventView;\n};\n\nfunction getRequestPayload({\n  eventView,\n  location,\n}: Pick<DiscoverQueryProps, 'eventView' | 'location'>) {\n  return omit(eventView.getEventsAPIPayload(location), [\n    'field',\n    'sort',\n    'per_page',\n    'query',\n  ]);\n}\n\nexport default function MetricsCompatibilitySumsQuery({children, ...props}: QueryProps) {\n  return (\n    <GenericDiscoverQuery<MetricsCompatibilitySumData, {}>\n      route=\"metrics-compatibility\"\n      getRequestPayload={getRequestPayload}\n      {...props}\n    >\n      {({tableData, ...rest}) => {\n        return children({\n          tableData,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n","import {Fragment, ReactNode} from 'react';\nimport {Location} from 'history';\n\nimport {Organization} from 'sentry/types';\nimport {parsePeriodToHours} from 'sentry/utils/dates';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {canUseMetricsData} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport MetricsCompatibilityQuery, {\n  MetricsCompatibilityData,\n} from 'sentry/utils/performance/metricsEnhanced/metricsCompatibilityQuery';\nimport MetricsCompatibilitySumsQuery, {\n  MetricsCompatibilitySumData,\n} from 'sentry/utils/performance/metricsEnhanced/metricsCompatibilityQuerySums';\n\nimport {createDefinedContext} from './utils';\n\nexport interface MetricDataSwitcherOutcome {\n  forceTransactionsOnly: boolean;\n  compatibleProjects?: number[];\n  shouldNotifyUnnamedTransactions?: boolean;\n  shouldWarnIncompatibleSDK?: boolean;\n}\nexport interface MetricsCardinalityContext {\n  isLoading: boolean;\n  outcome?: MetricDataSwitcherOutcome;\n}\n\ntype MergedMetricsData = MetricsCompatibilityData & MetricsCompatibilitySumData;\n\nconst [_Provider, _useContext, _Context] =\n  createDefinedContext<MetricsCardinalityContext>({\n    name: 'MetricsCardinalityContext',\n    strict: false,\n  });\n\n/**\n * This provider determines whether the metrics data is storing performance information correctly before we\n * make dozens of requests on pages such as performance landing and dashboards.\n */\nexport const MetricsCardinalityProvider = (props: {\n  children: ReactNode;\n  location: Location;\n  organization: Organization;\n}) => {\n  const isUsingMetrics = canUseMetricsData(props.organization);\n\n  if (!isUsingMetrics) {\n    return (\n      <_Provider\n        value={{\n          isLoading: false,\n          outcome: {\n            forceTransactionsOnly: true,\n          },\n        }}\n      >\n        {props.children}\n      </_Provider>\n    );\n  }\n\n  const baseDiscoverProps = {\n    location: props.location,\n    orgSlug: props.organization.slug,\n    cursor: '0:0:0',\n  };\n  const eventView = EventView.fromLocation(props.location);\n  eventView.fields = [{field: 'tpm()'}];\n  const _eventView = adjustEventViewTime(eventView);\n\n  return (\n    <Fragment>\n      <MetricsCompatibilityQuery eventView={_eventView} {...baseDiscoverProps}>\n        {compatabilityResult => (\n          <MetricsCompatibilitySumsQuery eventView={_eventView} {...baseDiscoverProps}>\n            {sumsResult => (\n              <_Provider\n                value={{\n                  isLoading: compatabilityResult.isLoading || sumsResult.isLoading,\n                  outcome:\n                    compatabilityResult.isLoading || sumsResult.isLoading\n                      ? undefined\n                      : getMetricsOutcome(\n                          compatabilityResult.tableData && sumsResult.tableData\n                            ? {\n                                ...compatabilityResult.tableData,\n                                ...sumsResult.tableData,\n                              }\n                            : null,\n                          !!compatabilityResult.error && !!sumsResult.error\n                        ),\n                }}\n              >\n                {props.children}\n              </_Provider>\n            )}\n          </MetricsCompatibilitySumsQuery>\n        )}\n      </MetricsCompatibilityQuery>\n    </Fragment>\n  );\n};\n\nexport const MetricsCardinalityConsumer = _Context.Consumer;\n\nexport const useMetricsCardinalityContext = _useContext;\n\n/**\n * Logic for picking sides of metrics vs. transactions along with the associated warnings.\n */\nfunction getMetricsOutcome(\n  dataCounts: MergedMetricsData | null,\n  hasOtherFallbackCondition: boolean\n) {\n  const fallbackOutcome: MetricDataSwitcherOutcome = {\n    forceTransactionsOnly: true,\n  };\n  const successOutcome: MetricDataSwitcherOutcome = {\n    forceTransactionsOnly: false,\n  };\n  if (!dataCounts) {\n    return fallbackOutcome;\n  }\n  const compatibleProjects = dataCounts.compatible_projects;\n\n  if (hasOtherFallbackCondition) {\n    return fallbackOutcome;\n  }\n\n  if (!dataCounts) {\n    return fallbackOutcome;\n  }\n\n  if (checkForSamplingRules(dataCounts)) {\n    return fallbackOutcome;\n  }\n\n  if (checkNoDataFallback(dataCounts)) {\n    return fallbackOutcome;\n  }\n\n  if (checkIncompatibleData(dataCounts)) {\n    return {\n      shouldWarnIncompatibleSDK: true,\n      forceTransactionsOnly: true,\n      compatibleProjects,\n    };\n  }\n\n  if (checkIfAllOtherData(dataCounts)) {\n    return {\n      shouldNotifyUnnamedTransactions: true,\n      forceTransactionsOnly: true,\n      compatibleProjects,\n    };\n  }\n\n  if (checkIfPartialOtherData(dataCounts)) {\n    return {\n      shouldNotifyUnnamedTransactions: true,\n      compatibleProjects,\n      forceTransactionsOnly: false,\n    };\n  }\n\n  return successOutcome;\n}\n\n/**\n * Fallback if very similar amounts of metrics and transactions are found.\n * No projects with dynamic sampling means no rules have been enabled yet.\n */\nfunction checkForSamplingRules(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  if (!dataCounts.dynamic_sampling_projects?.length) {\n    return true;\n  }\n  if (counts.metricsCount === 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Fallback if no metrics found.\n */\nfunction checkNoDataFallback(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return !counts.metricsCount;\n}\n\n/**\n * Fallback and warn if incompatible data found (old specific SDKs).\n */\nfunction checkIncompatibleData(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return counts.nullCount > 0;\n}\n\n/**\n * Fallback and warn about unnamed transactions (specific SDKs).\n */\nfunction checkIfAllOtherData(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return counts.unparamCount >= counts.metricsCount;\n}\n\n/**\n * Show metrics but warn about unnamed transactions.\n */\nfunction checkIfPartialOtherData(dataCounts: MergedMetricsData) {\n  const counts = normalizeCounts(dataCounts);\n  return counts.unparamCount > 0;\n}\n\n/**\n * Temporary function, can be removed after API changes.\n */\nfunction normalizeCounts({sum}: MergedMetricsData) {\n  try {\n    const metricsCount = Number(sum.metrics);\n    const unparamCount = Number(sum.metrics_unparam);\n    const nullCount = Number(sum.metrics_null);\n    return {\n      metricsCount,\n      unparamCount,\n      nullCount,\n    };\n  } catch (_) {\n    return {\n      metricsCount: 0,\n      unparamCount: 0,\n      nullCount: 0,\n    };\n  }\n}\n\n/**\n * Performance optimization to limit the amount of rows scanned before showing the landing page.\n */\nfunction adjustEventViewTime(eventView: EventView) {\n  const _eventView = eventView.clone();\n\n  if (!_eventView.start && !_eventView.end) {\n    if (!_eventView.statsPeriod) {\n      _eventView.statsPeriod = '1h';\n      _eventView.start = undefined;\n      _eventView.end = undefined;\n    } else {\n      const periodHours = parsePeriodToHours(_eventView.statsPeriod);\n      if (periodHours > 1) {\n        _eventView.statsPeriod = '1h';\n        _eventView.start = undefined;\n        _eventView.end = undefined;\n      }\n    }\n  }\n  return _eventView;\n}\n","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nfunction maxBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)\n    : undefined;\n}\n\nmodule.exports = maxBy;\n"],"names":["targetKey","target","keyPressed","setKeyPressed","useState","current","document","body","useEffect","downHandler","key","upHandler","addEventListener","removeEventListener","EditableText","value","onChange","name","errorMessage","successMessage","maxLength","isDisabled","autoSelect","className","ariaLabel","isEditing","setIsEditing","inputValue","setInputValue","isEmpty","trim","innerWrapperRef","useRef","labelRef","inputRef","enter","useKeypress","esc","revertValueAndCloseEditor","ref","handler","displayStatusMessage","listener","event","el","contains","onEnter","useCallback","onEsc","status","addSuccessMessage","addErrorMessage","inputElement","defined","focus","Wrapper","InputWrapper","StyledInput","onFocus","select","InputLabel","Label","onClick","undefined","InnerLabel","space","p","TextOverflow","theme","gray200","gray100","borderRadius","Input","getRequestPayload","eventView","location","omit","getEventsAPIPayload","MetricsCompatibilityQuery","children","props","route","tableData","rest","MetricsCompatibilitySumsQuery","_Provider","_useContext","_Context","createDefinedContext","strict","MetricsCardinalityProvider","canUseMetricsData","organization","isLoading","outcome","forceTransactionsOnly","baseDiscoverProps","orgSlug","slug","cursor","EventView","fields","field","_eventView","clone","start","end","statsPeriod","parsePeriodToHours","adjustEventViewTime","Fragment","compatabilityResult","sumsResult","getMetricsOutcome","error","Consumer","useMetricsCardinalityContext","dataCounts","hasOtherFallbackCondition","fallbackOutcome","compatibleProjects","compatible_projects","counts","normalizeCounts","dynamic_sampling_projects","length","metricsCount","checkForSamplingRules","checkNoDataFallback","nullCount","checkIncompatibleData","shouldWarnIncompatibleSDK","unparamCount","checkIfAllOtherData","shouldNotifyUnnamedTransactions","checkIfPartialOtherData","sum","Number","metrics","metrics_unparam","metrics_null","_","baseExtremum","baseGt","baseIteratee","module","exports","array","iteratee"],"sourceRoot":""}