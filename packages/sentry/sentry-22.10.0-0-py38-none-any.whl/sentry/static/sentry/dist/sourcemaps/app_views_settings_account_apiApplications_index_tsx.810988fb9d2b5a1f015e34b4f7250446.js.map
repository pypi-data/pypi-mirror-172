{"version":3,"file":"chunks/app_views_settings_account_apiApplications_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/apiApplications/row.tsx","webpack:///./app/views/settings/account/apiApplications/index.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport Link from 'sentry/components/links/link';\nimport {PanelItem} from 'sentry/components/panels';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {ApiApplication} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\nconst ROUTE_PREFIX = '/settings/account/api/';\n\ntype Props = {\n  api: Client;\n  app: ApiApplication;\n  onRemove: (app: ApiApplication) => void;\n};\n\ntype State = {\n  loading: boolean;\n};\n\nclass Row extends Component<Props, State> {\n  state: State = {\n    loading: false,\n  };\n\n  handleRemove = () => {\n    if (this.state.loading) {\n      return;\n    }\n\n    const {api, app, onRemove} = this.props;\n\n    this.setState(\n      {\n        loading: true,\n      },\n      async () => {\n        addLoadingMessage();\n\n        try {\n          await api.requestPromise(`/api-applications/${app.id}/`, {\n            method: 'DELETE',\n          });\n\n          clearIndicators();\n          onRemove(app);\n        } catch (_err) {\n          addErrorMessage(t('Unable to remove application. Please try again.'));\n        }\n      }\n    );\n  };\n\n  render() {\n    const {app} = this.props;\n\n    return (\n      <StyledPanelItem>\n        <ApplicationNameWrapper>\n          <ApplicationName to={`${ROUTE_PREFIX}applications/${app.id}/`}>\n            {getDynamicText({value: app.name, fixed: 'CI_APPLICATION_NAME'})}\n          </ApplicationName>\n          <ClientId>\n            {getDynamicText({value: app.clientID, fixed: 'CI_CLIENT_ID'})}\n          </ClientId>\n        </ApplicationNameWrapper>\n\n        <Button\n          aria-label=\"Remove\"\n          onClick={this.handleRemove}\n          disabled={this.state.loading}\n          icon={<IconDelete />}\n        />\n      </StyledPanelItem>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  padding: ${space(2)};\n  align-items: center;\n`;\n\nconst ApplicationNameWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nconst ApplicationName = styled(Link)`\n  margin-bottom: ${space(1)};\n`;\n\nconst ClientId = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nexport default Row;\n","import {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport Button from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {IconAdd} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {ApiApplication} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport Row from 'sentry/views/settings/account/apiApplications/row';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nconst ROUTE_PREFIX = '/settings/account/api/';\n\ntype Props = RouteComponentProps<{}, {}>;\ntype State = {\n  appList: ApiApplication[];\n} & AsyncView['state'];\n\nclass ApiApplications extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['appList', '/api-applications/']];\n  }\n\n  getTitle() {\n    return t('API Applications');\n  }\n\n  handleCreateApplication = async () => {\n    addLoadingMessage();\n\n    try {\n      const app = await this.api.requestPromise('/api-applications/', {\n        method: 'POST',\n      });\n\n      addSuccessMessage(t('Created a new API Application'));\n      this.props.router.push(`${ROUTE_PREFIX}applications/${app.id}/`);\n    } catch {\n      addErrorMessage(t('Unable to remove application. Please try again.'));\n    }\n  };\n\n  handleRemoveApplication = (app: ApiApplication) => {\n    this.setState({\n      appList: this.state.appList.filter(a => a.id !== app.id),\n    });\n  };\n\n  renderBody() {\n    const isEmpty = this.state.appList.length === 0;\n\n    return (\n      <div>\n        <SettingsPageHeader\n          title=\"API Applications\"\n          action={\n            <Button\n              priority=\"primary\"\n              size=\"sm\"\n              onClick={this.handleCreateApplication}\n              icon={<IconAdd size=\"xs\" isCircled />}\n            >\n              {t('Create New Application')}\n            </Button>\n          }\n        />\n\n        <Panel>\n          <PanelHeader>{t('Application Name')}</PanelHeader>\n\n          <PanelBody>\n            {!isEmpty ? (\n              this.state.appList.map(app => (\n                <Row\n                  api={this.api}\n                  key={app.id}\n                  app={app}\n                  onRemove={this.handleRemoveApplication}\n                />\n              ))\n            ) : (\n              <EmptyMessage>\n                {t(\"You haven't created any applications yet.\")}\n              </EmptyMessage>\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default ApiApplications;\n"],"names":["AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","Row","Component","loading","state","api","app","onRemove","props","setState","async","addLoadingMessage","requestPromise","id","method","clearIndicators","_err","addErrorMessage","t","StyledPanelItem","ApplicationNameWrapper","ApplicationName","to","getDynamicText","value","name","fixed","ClientId","clientID","onClick","handleRemove","disabled","icon","PanelItem","space","Link","p","theme","subText","fontSizeSmall","ApiApplications","addSuccessMessage","router","push","appList","filter","a","getEndpoints","renderBody","isEmpty","length","action","priority","size","handleCreateApplication","isCircled","map","handleRemoveApplication"],"sourceRoot":""}