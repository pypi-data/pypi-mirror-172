{"version":3,"file":"chunks/app_views_dataExport_dataDownload_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/dataExport.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/dataExport/dataDownload.tsx"],"sourcesContent":["import {useCallback, useEffect, useRef, useState} from 'react';\nimport debounce from 'lodash/debounce';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Feature from 'sentry/components/acl/feature';\nimport Button from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\n// NOTE: Coordinate with other ExportQueryType (src/sentry/data_export/base.py)\nexport enum ExportQueryType {\n  IssuesByTag = 'Issues-by-Tag',\n  Discover = 'Discover',\n}\n\ninterface DataExportPayload {\n  queryInfo: any;\n  queryType: ExportQueryType; // TODO(ts): Formalize different possible payloads\n}\n\ninterface DataExportProps {\n  api: Client;\n  organization: Organization;\n  payload: DataExportPayload;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  icon?: React.ReactNode;\n}\n\nfunction DataExport({\n  api,\n  children,\n  disabled,\n  organization,\n  payload,\n  icon,\n}: DataExportProps): React.ReactElement {\n  const unmountedRef = useRef(false);\n  const [inProgress, setInProgress] = useState(false);\n\n  // We clear the indicator if export props change so that the user\n  // can fire another export without having to wait for the previous one to finish.\n  useEffect(() => {\n    if (inProgress) {\n      setInProgress(false);\n    }\n    // We are skipping the inProgress dependency because it would have fired on each handleDataExport\n    // call and would have immediately turned off the value giving users no feedback on their click action.\n    // An alternative way to handle this would have probably been to key the component by payload/queryType,\n    // but that seems like it can be a complex object so tracking changes could result in very brittle behavior.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [payload.queryType, payload.queryInfo]);\n\n  // Tracking unmounting of the component to prevent setState call on unmounted component\n  useEffect(() => {\n    return () => {\n      unmountedRef.current = true;\n    };\n  }, []);\n\n  const handleDataExport = useCallback(() => {\n    setInProgress(true);\n\n    // This is a fire and forget request.\n    api\n      .requestPromise(`/organizations/${organization.slug}/data-export/`, {\n        includeAllArgs: true,\n        method: 'POST',\n        data: {\n          query_type: payload.queryType,\n          query_info: payload.queryInfo,\n        },\n      })\n      .then(([_data, _, response]) => {\n        // If component has unmounted, don't do anything\n        if (unmountedRef.current) {\n          return;\n        }\n\n        addSuccessMessage(\n          response?.status === 201\n            ? t(\n                \"Sit tight. We'll shoot you an email when your data is ready for download.\"\n              )\n            : t(\"It looks like we're already working on it. Sit tight, we'll email you.\")\n        );\n      })\n      .catch(err => {\n        // If component has unmounted, don't do anything\n        if (unmountedRef.current) {\n          return;\n        }\n        const message =\n          err?.responseJSON?.detail ??\n          \"We tried our hardest, but we couldn't export your data. Give it another go.\";\n\n        addErrorMessage(t(message));\n        setInProgress(false);\n      });\n  }, [payload.queryInfo, payload.queryType, organization.slug, api]);\n\n  return (\n    <Feature features={['organizations:discover-query']}>\n      {inProgress ? (\n        <Button\n          size=\"sm\"\n          priority=\"default\"\n          title=\"You can get on with your life. We'll email you when your data's ready.\"\n          disabled\n          icon={icon}\n        >\n          {t(\"We're working on it...\")}\n        </Button>\n      ) : (\n        <Button\n          onClick={debounce(handleDataExport, 500)}\n          disabled={disabled || false}\n          size=\"sm\"\n          priority=\"default\"\n          title=\"Put your data to work. Start your export and we'll email you when it's finished.\"\n          icon={icon}\n        >\n          {children ? children : t('Export All to CSV')}\n        </Button>\n      )}\n    </Feature>\n  );\n}\n\nexport {DataExport};\nexport default withApi(withOrganization(DataExport));\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Button from 'sentry/components/button';\nimport {ExportQueryType} from 'sentry/components/dataExport';\nimport DateTime from 'sentry/components/dateTime';\nimport {IconDownload} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport AsyncView from 'sentry/views/asyncView';\nimport Layout from 'sentry/views/auth/layout';\n\nexport enum DownloadStatus {\n  Early = 'EARLY',\n  Valid = 'VALID',\n  Expired = 'EXPIRED',\n}\n\ntype RouteParams = {\n  dataExportId: string;\n  orgId: string;\n};\n\ntype Download = {\n  checksum: string;\n  dateCreated: string;\n  id: number;\n  query: {\n    info: object;\n    type: ExportQueryType;\n  };\n  status: DownloadStatus;\n  user: {\n    email: string;\n    id: number;\n    username: string;\n  };\n  dateExpired?: string;\n  dateFinished?: string;\n};\n\ntype Props = {} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  download: Download;\n  errors: {\n    download: {\n      responseJSON: {\n        detail: string;\n      };\n      status: number;\n      statusText: string;\n    };\n  };\n} & AsyncView['state'];\n\nclass DataDownload extends AsyncView<Props, State> {\n  disableErrorReport = false;\n\n  getTitle(): string {\n    return t('Download Center');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId, dataExportId} = this.props.params;\n    return [['download', `/organizations/${orgId}/data-export/${dataExportId}/`]];\n  }\n\n  getActionLink(queryType): string {\n    const {orgId} = this.props.params;\n    switch (queryType) {\n      case ExportQueryType.IssuesByTag:\n        return `/organizations/${orgId}/issues/`;\n      case ExportQueryType.Discover:\n        return `/organizations/${orgId}/discover/queries/`;\n      default:\n        return '/';\n    }\n  }\n\n  renderDate(date: string | undefined): React.ReactNode {\n    if (!date) {\n      return null;\n    }\n    const d = new Date(date);\n    return (\n      <strong>\n        <DateTime date={d} />\n      </strong>\n    );\n  }\n\n  renderEarly(): React.ReactNode {\n    return (\n      <Fragment>\n        <Header>\n          <h3>\n            {t('What are')}\n            <i>{t(' you ')}</i>\n            {t('doing here?')}\n          </h3>\n        </Header>\n        <Body>\n          <p>\n            {t(\n              \"Not that its any of our business, but were you invited to this page? It's just that we don't exactly remember emailing you about it.\"\n            )}\n          </p>\n          <p>{t(\"Close this window and we'll email you when your download is ready.\")}</p>\n        </Body>\n      </Fragment>\n    );\n  }\n\n  renderExpired(): React.ReactNode {\n    const {query} = this.state.download;\n    const actionLink = this.getActionLink(query.type);\n    return (\n      <Fragment>\n        <Header>\n          <h3>{t('This is awkward.')}</h3>\n        </Header>\n        <Body>\n          <p>\n            {t(\n              \"That link expired, so your download doesn't live here anymore. Just picked up one day and left town.\"\n            )}\n          </p>\n          <p>\n            {t(\n              'Make a new one with your latest data. Your old download will never see it coming.'\n            )}\n          </p>\n          <DownloadButton href={actionLink} priority=\"primary\">\n            {t('Start a New Download')}\n          </DownloadButton>\n        </Body>\n      </Fragment>\n    );\n  }\n\n  openInDiscover() {\n    const {\n      download: {\n        query: {info},\n      },\n    } = this.state;\n    const {orgId} = this.props.params;\n\n    const to = {\n      pathname: `/organizations/${orgId}/discover/results/`,\n      query: info,\n    };\n\n    browserHistory.push(to);\n  }\n\n  renderOpenInDiscover() {\n    const {\n      download: {\n        query = {\n          type: ExportQueryType.IssuesByTag,\n          info: {},\n        },\n      },\n    } = this.state;\n\n    // default to IssuesByTag because we don't want to\n    // display this unless we're sure its a discover query\n    const {type = ExportQueryType.IssuesByTag} = query;\n\n    return type === 'Discover' ? (\n      <Fragment>\n        <p>{t('Need to make changes?')}</p>\n        <Button priority=\"primary\" onClick={() => this.openInDiscover()}>\n          {t('Open in Discover')}\n        </Button>\n        <br />\n      </Fragment>\n    ) : null;\n  }\n\n  renderValid(): React.ReactNode {\n    const {\n      download: {dateExpired, checksum},\n    } = this.state;\n    const {orgId, dataExportId} = this.props.params;\n\n    return (\n      <Fragment>\n        <Header>\n          <h3>{t('All done.')}</h3>\n        </Header>\n        <Body>\n          <p>{t(\"See, that wasn't so bad. Your data is all ready for download.\")}</p>\n          <Button\n            priority=\"primary\"\n            icon={<IconDownload />}\n            href={`/api/0/organizations/${orgId}/data-export/${dataExportId}/?download=true`}\n          >\n            {t('Download CSV')}\n          </Button>\n          <p>\n            {t(\"That link won't last forever — it expires:\")}\n            <br />\n            {this.renderDate(dateExpired)}\n          </p>\n          {this.renderOpenInDiscover()}\n          <p>\n            <small>\n              <strong>SHA1:{checksum}</strong>\n            </small>\n            <br />\n            {tct('Need help verifying? [link].', {\n              link: (\n                <a\n                  href=\"https://docs.sentry.io/product/discover-queries/query-builder/#filter-by-table-columns\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {t('Check out our docs')}\n                </a>\n              ),\n            })}\n          </p>\n        </Body>\n      </Fragment>\n    );\n  }\n\n  renderError(): React.ReactNode {\n    const {\n      errors: {download: err},\n    } = this.state;\n    const errDetail = err?.responseJSON?.detail;\n    return (\n      <Layout>\n        <main>\n          <Header>\n            <h3>\n              {err.status} - {err.statusText}\n            </h3>\n          </Header>\n          {errDetail && (\n            <Body>\n              <p>{errDetail}</p>\n            </Body>\n          )}\n        </main>\n      </Layout>\n    );\n  }\n\n  renderContent(): React.ReactNode {\n    const {download} = this.state;\n    switch (download.status) {\n      case DownloadStatus.Early:\n        return this.renderEarly();\n      case DownloadStatus.Expired:\n        return this.renderExpired();\n      default:\n        return this.renderValid();\n    }\n  }\n\n  renderBody() {\n    return (\n      <Layout>\n        <main>{this.renderContent()}</main>\n      </Layout>\n    );\n  }\n}\n\nconst Header = styled('header')`\n  border-bottom: 1px solid ${p => p.theme.border};\n  padding: ${space(3)} 40px 0;\n  h3 {\n    font-size: 24px;\n    margin: 0 0 ${space(3)} 0;\n  }\n`;\n\nconst Body = styled('div')`\n  padding: ${space(2)} 40px;\n  max-width: 500px;\n  p {\n    margin: ${space(1.5)} 0;\n  }\n`;\n\nconst DownloadButton = styled(Button)`\n  margin-bottom: ${space(1.5)};\n`;\n\nexport default DataDownload;\n"],"names":["ExportQueryType","DataExport","api","children","disabled","organization","payload","icon","unmountedRef","useRef","inProgress","setInProgress","useState","useEffect","queryType","queryInfo","current","handleDataExport","useCallback","requestPromise","slug","includeAllArgs","method","data","query_type","query_info","then","_data","_","response","addSuccessMessage","status","t","catch","err","message","responseJSON","detail","addErrorMessage","features","size","priority","title","onClick","debounce","withApi","withOrganization","AsyncView","AsyncComponent","getTitle","render","this","renderComponent","DownloadStatus","DataDownload","getEndpoints","orgId","dataExportId","props","params","getActionLink","renderDate","date","d","Date","renderEarly","Fragment","Header","Body","renderExpired","query","state","download","actionLink","type","DownloadButton","href","openInDiscover","info","to","pathname","browserHistory","renderOpenInDiscover","renderValid","dateExpired","checksum","tct","link","target","rel","renderError","errors","errDetail","statusText","renderContent","Early","Expired","renderBody","p","theme","border","space","Button"],"sourceRoot":""}