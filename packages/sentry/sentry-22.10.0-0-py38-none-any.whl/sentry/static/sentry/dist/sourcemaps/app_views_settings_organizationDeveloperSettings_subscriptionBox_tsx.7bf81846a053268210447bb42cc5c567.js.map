{"version":3,"file":"chunks/app_views_settings_organizationDeveloperSettings_subscriptionBox_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"oQAAO,MAAMA,EAAgB,CAAC,QAAS,QAAS,WAEnCC,EAAe,CAC1BC,MAAO,uCACPC,MAAO,UACPC,QAAS,4BAGEC,EAAkB,CAC7BH,MAAO,QACPC,MAAO,QACPC,QAAS,Q,gqBCoBJ,MAAME,UAAwBC,EAAAA,UAAiB,2DAKxCC,IACV,MAAMC,EAAUD,EAAIE,OAAOD,SACrB,SAACE,GAAYC,KAAKC,MACxBD,KAAKC,MAAMC,SAASH,EAAUF,EAA9B,GARkD,CAWpDM,SACE,MAAM,SAACJ,EAAD,aAAWK,EAAX,gBAAyBC,EAAzB,QAA0CR,EAA1C,MAAmDS,GAASN,KAAKC,MACjEM,EAAW,IAAIC,IAAIJ,EAAaG,UAEtC,IAAIE,EAAWT,KAAKC,MAAMS,yBAA2BL,EACjDM,EAAW,qDAAoDlB,EAAAA,GAAgBM,KAUnF,MATiB,UAAbA,GAAyBQ,EAASK,IAAI,8BACxCH,GAAW,EACXE,EACE,8EAEAN,IACFM,EAAU,wEAIV,QAAC,EAAAE,SAAD,WACE,QAAC,IAAD,CAASJ,UAAWA,EAAUK,MAAOH,EAArC,UACE,QAACI,EAAD,CAAsBN,SAAUA,EAAhC,WACE,QAACO,EAAD,YACE,QAACC,EAAD,YACGC,EAAAA,EAAAA,GAAG,GAAEnB,KACLO,IAAS,QAAC,IAAD,CAAca,KAAK,YAE/B,QAACC,EAAD,WACGF,EAAAA,EAAAA,GAAG,GAAE7B,EAAAA,GAAaU,YAGvB,QAAC,IAAD,CAEEU,SAAUA,EACVY,GAAItB,EACJuB,MAAOvB,EACPF,QAASA,EACTK,SAAUF,KAAKE,UALT,GAAEH,IAAWF,SAZ0BE,IAuBxD,EAnDUL,EAAAA,YAAAA,mB,OAAAA,EAAAA,eACyB,CAClCW,iBAAiB,IAoDrB,SAAekB,EAAAA,EAAAA,GAAiB7B,GAE1BqB,GAAuB,OAAO,MAAP,qBAAH,0DAGVS,GAAKA,EAAEC,MAAMC,qBAHH,aAIbF,GAAMA,EAAEf,SAAW,GAAM,GAJZ,mBAKPe,GAAKA,EAAEC,MAAME,cALN,YAMdC,EAAAA,EAAAA,GAAM,KANQ,aAObA,EAAAA,EAAAA,GAAM,KAPO,2BAWpBZ,GAAmB,OAAO,MAAP,qBAAH,gFAMhBI,GAA0B,OAAO,MAAP,qBAAH,cACdI,GAAKA,EAAEC,MAAMI,gBADC,yBAGlBL,GAAKA,EAAEC,MAAMK,SAHK,KAMvBb,GAAoB,OAAO,MAAP,qBAAH,cACRO,GAAKA,EAAEC,MAAMM,eADL,yBAGZP,GAAKA,EAAEC,MAAMO,WAHD,sCAKJJ,EAAAA,EAAAA,GAAM,KALF,I","sources":["webpack:///./app/views/settings/organizationDeveloperSettings/constants.tsx","webpack:///./app/views/settings/organizationDeveloperSettings/subscriptionBox.tsx"],"sourcesContent":["export const EVENT_CHOICES = ['issue', 'error', 'comment'] as const;\n\nexport const DESCRIPTIONS = {\n  issue: 'created, resolved, assigned, ignored',\n  error: 'created',\n  comment: 'created, edited, deleted',\n} as const;\n\nexport const PERMISSIONS_MAP = {\n  issue: 'Event',\n  error: 'Event',\n  comment: 'Event',\n} as const;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Checkbox from 'sentry/components/checkbox';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport {\n  DESCRIPTIONS,\n  EVENT_CHOICES,\n  PERMISSIONS_MAP,\n} from 'sentry/views/settings/organizationDeveloperSettings/constants';\n\ntype Resource = typeof EVENT_CHOICES[number];\n\ntype DefaultProps = {\n  webhookDisabled: boolean;\n};\n\ntype Props = DefaultProps & {\n  checked: boolean;\n  disabledFromPermissions: boolean;\n  isNew: boolean;\n  onChange: (resource: Resource, checked: boolean) => void;\n  organization: Organization;\n  resource: Resource;\n};\n\nexport class SubscriptionBox extends Component<Props> {\n  static defaultProps: DefaultProps = {\n    webhookDisabled: false,\n  };\n\n  onChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const checked = evt.target.checked;\n    const {resource} = this.props;\n    this.props.onChange(resource, checked);\n  };\n\n  render() {\n    const {resource, organization, webhookDisabled, checked, isNew} = this.props;\n    const features = new Set(organization.features);\n\n    let disabled = this.props.disabledFromPermissions || webhookDisabled;\n    let message = `Must have at least 'Read' permissions enabled for ${PERMISSIONS_MAP[resource]}`;\n    if (resource === 'error' && !features.has('integrations-event-hooks')) {\n      disabled = true;\n      message =\n        'Your organization does not have access to the error subscription resource.';\n    }\n    if (webhookDisabled) {\n      message = 'Cannot enable webhook subscription without specifying a webhook url';\n    }\n\n    return (\n      <Fragment>\n        <Tooltip disabled={!disabled} title={message} key={resource}>\n          <SubscriptionGridItem disabled={disabled}>\n            <SubscriptionInfo>\n              <SubscriptionTitle>\n                {t(`${resource}`)}\n                {isNew && <FeatureBadge type=\"new\" />}\n              </SubscriptionTitle>\n              <SubscriptionDescription>\n                {t(`${DESCRIPTIONS[resource]}`)}\n              </SubscriptionDescription>\n            </SubscriptionInfo>\n            <Checkbox\n              key={`${resource}${checked}`}\n              disabled={disabled}\n              id={resource}\n              value={resource}\n              checked={checked}\n              onChange={this.onChange}\n            />\n          </SubscriptionGridItem>\n        </Tooltip>\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(SubscriptionBox);\n\nconst SubscriptionGridItem = styled('div')<{disabled: boolean}>`\n  display: flex;\n  justify-content: space-between;\n  background: ${p => p.theme.backgroundSecondary};\n  opacity: ${p => (p.disabled ? 0.3 : 1)};\n  border-radius: ${p => p.theme.borderRadius};\n  margin: ${space(1.5)};\n  padding: ${space(1.5)};\n  box-sizing: border-box;\n`;\n\nconst SubscriptionInfo = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n`;\n\nconst SubscriptionDescription = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  line-height: 1;\n  color: ${p => p.theme.gray300};\n`;\n\nconst SubscriptionTitle = styled('div')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  line-height: 1;\n  color: ${p => p.theme.textColor};\n  white-space: nowrap;\n  margin-bottom: ${space(0.75)};\n`;\n"],"names":["EVENT_CHOICES","DESCRIPTIONS","issue","error","comment","PERMISSIONS_MAP","SubscriptionBox","Component","evt","checked","target","resource","this","props","onChange","render","organization","webhookDisabled","isNew","features","Set","disabled","disabledFromPermissions","message","has","Fragment","title","SubscriptionGridItem","SubscriptionInfo","SubscriptionTitle","t","type","SubscriptionDescription","id","value","withOrganization","p","theme","backgroundSecondary","borderRadius","space","fontSizeMedium","gray300","fontSizeLarge","textColor"],"sourceRoot":""}