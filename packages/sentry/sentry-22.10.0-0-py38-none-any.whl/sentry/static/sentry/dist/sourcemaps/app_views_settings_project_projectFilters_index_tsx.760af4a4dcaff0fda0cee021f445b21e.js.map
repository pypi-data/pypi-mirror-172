{"version":3,"file":"chunks/app_views_settings_project_projectFilters_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/data/forms/inboundFilters.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectFilters/groupTombstones.tsx","webpack:///./app/views/settings/project/projectFilters/projectFiltersChart.tsx","webpack:///./app/views/settings/project/projectFilters/projectFiltersSettings.tsx","webpack:///./app/views/settings/project/projectFilters/index.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport {Field, JsonFormObject} from 'sentry/components/forms/types';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/:orgId/projects/:projectId/filters/';\n\nconst newLineHelpText = t('Separate multiple entries with a newline.');\nconst globHelpText = tct('Allows [link:glob pattern matching].', {\n  link: <ExternalLink href=\"https://en.wikipedia.org/wiki/Glob_(programming)\" />,\n});\n\nconst getOptionsData = (data: object) => ({options: data});\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: t('Custom Filters'),\n    fields: [\n      {\n        name: 'filters:blacklisted_ips',\n        type: 'string',\n        multiline: true,\n        autosize: true,\n        rows: 1,\n        maxRows: 10,\n\n        placeholder: 'e.g. 127.0.0.1 or 10.0.0.0/8',\n        label: t('IP Addresses'),\n        help: (\n          <Fragment>\n            {t('Filter events from these IP addresses. ')}\n            {newLineHelpText}\n          </Fragment>\n        ),\n        getData: getOptionsData,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n\n// These require a feature flag\nexport const customFilterFields: Field[] = [\n  {\n    name: 'filters:releases',\n    type: 'string',\n    multiline: true,\n    autosize: true,\n    maxRows: 10,\n    rows: 1,\n\n    placeholder: 'e.g. 1.* or [!3].[0-9].*',\n    label: t('Releases'),\n    help: (\n      <Fragment>\n        {t('Filter events from these releases. ')}\n        {newLineHelpText} {globHelpText}\n      </Fragment>\n    ),\n    getData: getOptionsData,\n  },\n\n  {\n    name: 'filters:error_messages',\n    type: 'string',\n    multiline: true,\n    autosize: true,\n    maxRows: 10,\n    rows: 1,\n\n    placeholder: 'e.g. TypeError* or *: integer division or modulo by zero',\n    label: t('Error Message'),\n    help: (\n      <Fragment>\n        {t('Filter events by error messages. ')}\n        {newLineHelpText} {globHelpText}\n      </Fragment>\n    ),\n    getData: getOptionsData,\n  },\n];\n","import {PlainRoute} from 'react-router';\nimport {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: PlainRoute[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Avatar from 'sentry/components/avatar';\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport EventOrGroupHeader from 'sentry/components/eventOrGroupHeader';\nimport Pagination from 'sentry/components/pagination';\nimport {Panel, PanelItem} from 'sentry/components/panels';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {GroupTombstone} from 'sentry/types';\n\ntype RowProps = {\n  data: GroupTombstone;\n  onUndiscard: (id: string) => void;\n};\n\nfunction GroupTombstoneRow({data, onUndiscard}: RowProps) {\n  const actor = data.actor;\n\n  return (\n    <PanelItem center>\n      <StyledBox>\n        <EventOrGroupHeader\n          includeLink={false}\n          hideIcons\n          className=\"truncate\"\n          size=\"normal\"\n          data={data}\n        />\n      </StyledBox>\n      <AvatarContainer>\n        {actor && (\n          <Avatar\n            user={actor}\n            hasTooltip\n            tooltip={t('Discarded by %s', actor.name || actor.email)}\n          />\n        )}\n      </AvatarContainer>\n      <ActionContainer>\n        <Confirm\n          message={t(\n            'Undiscarding this issue means that ' +\n              'incoming events that match this will no longer be discarded. ' +\n              'New incoming events will count toward your event quota ' +\n              'and will display on your issues dashboard. ' +\n              'Are you sure you wish to continue?'\n          )}\n          onConfirm={() => onUndiscard(data.id)}\n        >\n          <Button\n            aria-label={t('Undiscard')}\n            title={t('Undiscard')}\n            size=\"xs\"\n            icon={<IconDelete size=\"xs\" />}\n          />\n        </Confirm>\n      </ActionContainer>\n    </PanelItem>\n  );\n}\n\ntype Props = AsyncComponent['props'] & {\n  orgId: string;\n  projectId: string;\n};\n\ntype State = {\n  tombstones: GroupTombstone[];\n  tombstonesPageLinks: null | string;\n} & AsyncComponent['state'];\n\nclass GroupTombstones extends AsyncComponent<Props, State> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props;\n    return [\n      ['tombstones', `/projects/${orgId}/${projectId}/tombstones/`, {}, {paginate: true}],\n    ];\n  }\n\n  handleUndiscard = (tombstoneId: GroupTombstone['id']) => {\n    const {orgId, projectId} = this.props;\n    const path = `/projects/${orgId}/${projectId}/tombstones/${tombstoneId}/`;\n    this.api\n      .requestPromise(path, {\n        method: 'DELETE',\n      })\n      .then(() => {\n        addSuccessMessage(t('Events similar to these will no longer be filtered'));\n        this.fetchData();\n      })\n      .catch(() => {\n        addErrorMessage(t('We were unable to undiscard this issue'));\n        this.fetchData();\n      });\n  };\n\n  renderEmpty() {\n    return (\n      <Panel>\n        <EmptyMessage>{t('You have no discarded issues')}</EmptyMessage>\n      </Panel>\n    );\n  }\n\n  renderBody() {\n    const {tombstones, tombstonesPageLinks} = this.state;\n\n    return tombstones.length ? (\n      <Fragment>\n        <Panel>\n          {tombstones.map(data => (\n            <GroupTombstoneRow\n              key={data.id}\n              data={data}\n              onUndiscard={this.handleUndiscard}\n            />\n          ))}\n        </Panel>\n        {tombstonesPageLinks && <Pagination pageLinks={tombstonesPageLinks} />}\n      </Fragment>\n    ) : (\n      this.renderEmpty()\n    );\n  }\n}\n\nconst StyledBox = styled('div')`\n  flex: 1;\n  align-items: center;\n  min-width: 0; /* keep child content from stretching flex item */\n`;\n\nconst AvatarContainer = styled('div')`\n  margin: 0 ${space(3)};\n  flex-shrink: 1;\n  align-items: center;\n`;\n\nconst ActionContainer = styled('div')`\n  flex-shrink: 1;\n  align-items: center;\n`;\n\nexport default GroupTombstones;\n","import {Component} from 'react';\n\nimport {Client} from 'sentry/api';\nimport MiniBarChart from 'sentry/components/charts/miniBarChart';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport LoadingError from 'sentry/components/loadingError';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport Placeholder from 'sentry/components/placeholder';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport theme from 'sentry/utils/theme';\nimport withApi from 'sentry/utils/withApi';\n\ntype Props = {\n  api: Client;\n  params: {orgId: string; projectId: string};\n  project: Project;\n};\n\ntype State = {\n  blankStats: boolean;\n  error: boolean;\n  formattedData: Series[];\n  loading: boolean;\n  statsError: boolean;\n};\n\ntype RawStats = Record<string, [timestamp: number, value: number][]>;\n\nconst STAT_OPS = {\n  'browser-extensions': {title: t('Browser Extension'), color: theme.gray200},\n  cors: {title: 'CORS', color: theme.yellow300},\n  'error-message': {title: t('Error Message'), color: theme.purple300},\n  'discarded-hash': {title: t('Discarded Issue'), color: theme.gray200},\n  'invalid-csp': {title: t('Invalid CSP'), color: theme.blue300},\n  'ip-address': {title: t('IP Address'), color: theme.red200},\n  'legacy-browsers': {title: t('Legacy Browser'), color: theme.gray200},\n  localhost: {title: t('Localhost'), color: theme.blue300},\n  'release-version': {title: t('Release'), color: theme.purple200},\n  'web-crawlers': {title: t('Web Crawler'), color: theme.red300},\n};\n\nclass ProjectFiltersChart extends Component<Props, State> {\n  state: State = {\n    loading: true,\n    error: false,\n    statsError: false,\n    formattedData: [],\n    blankStats: true,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.project !== this.props.project) {\n      this.fetchData();\n    }\n  }\n\n  formatData(rawData: RawStats) {\n    const seriesWithData: Set<string> = new Set();\n    const transformed = Object.keys(STAT_OPS).map(stat => ({\n      data: rawData[stat].map(([timestamp, value]) => {\n        if (value > 0) {\n          seriesWithData.add(STAT_OPS[stat].title);\n          this.setState({blankStats: false});\n        }\n        return {name: timestamp * 1000, value};\n      }),\n      seriesName: STAT_OPS[stat].title,\n      color: STAT_OPS[stat].color,\n    }));\n\n    return transformed.filter((series: Series) => seriesWithData.has(series.seriesName));\n  }\n\n  getFilterStats() {\n    const statOptions = Object.keys(STAT_OPS);\n    const {project} = this.props;\n    const {orgId} = this.props.params;\n\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n\n    const statEndpoint = `/projects/${orgId}/${project.slug}/stats/`;\n    const query = {\n      since,\n      until,\n      resolution: '1d',\n    };\n    const requests = statOptions.map(stat =>\n      this.props.api.requestPromise(statEndpoint, {\n        query: Object.assign({stat}, query),\n      })\n    );\n    Promise.all(requests)\n      .then(results => {\n        const rawStatsData: RawStats = {};\n        for (let i = 0; i < statOptions.length; i++) {\n          rawStatsData[statOptions[i]] = results[i];\n        }\n\n        this.setState({\n          formattedData: this.formatData(rawStatsData),\n          error: false,\n          loading: false,\n        });\n      })\n      .catch(() => {\n        this.setState({error: true, loading: false});\n      });\n  }\n\n  fetchData = () => {\n    this.getFilterStats();\n  };\n\n  render() {\n    const {loading, error, formattedData} = this.state;\n    const isLoading = loading || !formattedData;\n    const hasError = !isLoading && error;\n    const hasLoaded = !isLoading && !error;\n    const colors = formattedData\n      ? formattedData.map(series => series.color || theme.gray200)\n      : undefined;\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Errors filtered in the last 30 days (by day)')}</PanelHeader>\n\n        <PanelBody withPadding>\n          {isLoading && <Placeholder height=\"100px\" />}\n          {hasError && <LoadingError onRetry={this.fetchData} />}\n          {hasLoaded && !this.state.blankStats && (\n            <MiniBarChart\n              series={formattedData}\n              colors={colors}\n              height={100}\n              isGroupedByDate\n              stacked\n              labelYAxisExtents\n            />\n          )}\n          {hasLoaded && this.state.blankStats && (\n            <EmptyMessage\n              title={t('Nothing filtered in the last 30 days.')}\n              description={t(\n                'Issues filtered as a result of your settings below will be shown here.'\n              )}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport {ProjectFiltersChart};\n\nexport default withApi(ProjectFiltersChart);\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport iconAndroid from 'sentry-logos/logo-android.svg';\nimport iconIe from 'sentry-logos/logo-ie.svg';\nimport iconOpera from 'sentry-logos/logo-opera.svg';\nimport iconSafari from 'sentry-logos/logo-safari.svg';\n\nimport Access from 'sentry/components/acl/access';\nimport Feature from 'sentry/components/acl/feature';\nimport FeatureDisabled from 'sentry/components/acl/featureDisabled';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport FieldFromConfig from 'sentry/components/forms/fieldFromConfig';\nimport Form from 'sentry/components/forms/form';\nimport FormField from 'sentry/components/forms/formField';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'sentry/components/panels';\nimport Switch from 'sentry/components/switchButton';\nimport filterGroups, {customFilterFields} from 'sentry/data/forms/inboundFilters';\nimport {t} from 'sentry/locale';\nimport HookStore from 'sentry/stores/hookStore';\nimport ProjectsStore from 'sentry/stores/projectsStore';\nimport space from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\n\nconst LEGACY_BROWSER_SUBFILTERS = {\n  ie_pre_9: {\n    icon: iconIe,\n    helpText: 'Version 8 and lower',\n    title: 'Internet Explorer',\n  },\n  ie9: {\n    icon: iconIe,\n    helpText: 'Version 9',\n    title: 'Internet Explorer',\n  },\n  ie10: {\n    icon: iconIe,\n    helpText: 'Version 10',\n    title: 'Internet Explorer',\n  },\n  ie11: {\n    icon: iconIe,\n    helpText: 'Version 11',\n    title: 'Internet Explorer',\n  },\n  safari_pre_6: {\n    icon: iconSafari,\n    helpText: 'Version 5 and lower',\n    title: 'Safari',\n  },\n  opera_pre_15: {\n    icon: iconOpera,\n    helpText: 'Version 14 and lower',\n    title: 'Opera',\n  },\n  opera_mini_pre_8: {\n    icon: iconOpera,\n    helpText: 'Version 8 and lower',\n    title: 'Opera Mini',\n  },\n  android_pre_4: {\n    icon: iconAndroid,\n    helpText: 'Version 3 and lower',\n    title: 'Android',\n  },\n};\n\nconst LEGACY_BROWSER_KEYS = Object.keys(LEGACY_BROWSER_SUBFILTERS);\n\ntype FormFieldProps = React.ComponentProps<typeof FormField>;\n\ntype RowProps = {\n  data: {\n    active: string[] | boolean;\n  };\n  onToggle: (\n    data: RowProps['data'],\n    filters: RowState['subfilters'],\n    event: React.MouseEvent\n  ) => void;\n  disabled?: boolean;\n};\n\ntype RowState = {\n  error: boolean | Error;\n  loading: boolean;\n  subfilters: Set<string>;\n};\n\nclass LegacyBrowserFilterRow extends Component<RowProps, RowState> {\n  constructor(props) {\n    super(props);\n    let initialSubfilters;\n    if (props.data.active === true) {\n      initialSubfilters = new Set(LEGACY_BROWSER_KEYS);\n    } else if (props.data.active === false) {\n      initialSubfilters = new Set();\n    } else {\n      initialSubfilters = new Set(props.data.active);\n    }\n\n    this.state = {\n      loading: false,\n      error: false,\n      subfilters: initialSubfilters,\n    };\n  }\n\n  handleToggleSubfilters = (subfilter, e) => {\n    let {subfilters} = this.state;\n\n    if (subfilter === true) {\n      subfilters = new Set(LEGACY_BROWSER_KEYS);\n    } else if (subfilter === false) {\n      subfilters = new Set();\n    } else if (subfilters.has(subfilter)) {\n      subfilters.delete(subfilter);\n    } else {\n      subfilters.add(subfilter);\n    }\n\n    this.setState(\n      {\n        subfilters: new Set(subfilters),\n      },\n      () => {\n        this.props.onToggle(this.props.data, subfilters, e);\n      }\n    );\n  };\n\n  render() {\n    const {disabled} = this.props;\n    return (\n      <div>\n        {!disabled && (\n          <BulkFilter>\n            <BulkFilterLabel>{t('Filter')}:</BulkFilterLabel>\n            <BulkFilterItem onClick={this.handleToggleSubfilters.bind(this, true)}>\n              {t('All')}\n            </BulkFilterItem>\n            <BulkFilterItem onClick={this.handleToggleSubfilters.bind(this, false)}>\n              {t('None')}\n            </BulkFilterItem>\n          </BulkFilter>\n        )}\n\n        <FilterGrid>\n          {LEGACY_BROWSER_KEYS.map(key => {\n            const subfilter = LEGACY_BROWSER_SUBFILTERS[key];\n            return (\n              <FilterGridItem key={key}>\n                <FilterGridIcon src={subfilter.icon} />\n                <div>\n                  <FilterTitle>{subfilter.title}</FilterTitle>\n                  <FilterDescription>{subfilter.helpText}</FilterDescription>\n                </div>\n                <Switch\n                  isActive={this.state.subfilters.has(key)}\n                  isDisabled={disabled}\n                  css={{flexShrink: 0, marginLeft: 6}}\n                  toggle={this.handleToggleSubfilters.bind(this, key)}\n                  size=\"lg\"\n                />\n              </FilterGridItem>\n            );\n          })}\n        </FilterGrid>\n      </div>\n    );\n  }\n}\n\ntype Props = {\n  features: Set<string>;\n  params: {\n    orgId: string;\n    projectId: string;\n  };\n  project: Project;\n};\n\ntype State = {\n  hooksDisabled: ReturnType<typeof HookStore['get']>;\n} & AsyncComponent['state'];\n\nclass ProjectFiltersSettings extends AsyncComponent<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      hooksDisabled: HookStore.get('feature-disabled:custom-inbound-filters'),\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {orgId, projectId} = this.props.params;\n    return [['filterList', `/projects/${orgId}/${projectId}/filters/`]];\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    if (prevProps.project.slug !== this.props.project.slug) {\n      this.reloadData();\n    }\n    super.componentDidUpdate(prevProps, prevState);\n  }\n\n  handleLegacyChange = (\n    onChange: FormFieldProps['onChange'],\n    onBlur: FormFieldProps['onBlur'],\n    _filter,\n    subfilters: RowState['subfilters'],\n    e: React.MouseEvent\n  ) => {\n    onChange?.(subfilters, e);\n    onBlur?.(subfilters, e);\n  };\n\n  handleSubmit = (response: Project) => {\n    // This will update our project context\n    ProjectsStore.onUpdateSuccess(response);\n  };\n\n  renderDisabledCustomFilters = p => (\n    <FeatureDisabled\n      featureName={t('Custom Inbound Filters')}\n      features={p.features}\n      alert={PanelAlert}\n      message={t(\n        'Release and Error Message filtering are not enabled on your Sentry installation'\n      )}\n    />\n  );\n\n  renderCustomFilters = (disabled: boolean) => () =>\n    (\n      <Feature\n        features={['projects:custom-inbound-filters']}\n        hookName=\"feature-disabled:custom-inbound-filters\"\n        renderDisabled={({children, ...props}) => {\n          if (typeof children === 'function') {\n            return children({...props, renderDisabled: this.renderDisabledCustomFilters});\n          }\n          return null;\n        }}\n      >\n        {({hasFeature, organization, renderDisabled, ...featureProps}) => (\n          <Fragment>\n            {!hasFeature &&\n              typeof renderDisabled === 'function' &&\n              // XXX: children is set to null as we're doing tricksy things\n              // in the renderDisabled prop a few lines higher.\n              renderDisabled({organization, hasFeature, children: null, ...featureProps})}\n\n            {customFilterFields.map(field => (\n              <FieldFromConfig\n                key={field.name}\n                field={field}\n                disabled={disabled || !hasFeature}\n              />\n            ))}\n\n            {hasFeature && this.props.project.options?.['filters:error_messages'] && (\n              <PanelAlert type=\"warning\" data-test-id=\"error-message-disclaimer\">\n                {t(\n                  \"Minidumps, errors in the minified production build of React, and Internet Explorer's i18n errors cannot be filtered by message.\"\n                )}\n              </PanelAlert>\n            )}\n          </Fragment>\n        )}\n      </Feature>\n    );\n\n  renderBody() {\n    const {features, params, project} = this.props;\n    const {orgId, projectId} = params;\n\n    const projectEndpoint = `/projects/${orgId}/${projectId}/`;\n    const filtersEndpoint = `${projectEndpoint}filters/`;\n\n    return (\n      <Access access={['project:write']}>\n        {({hasAccess}) => (\n          <Fragment>\n            <Panel>\n              <PanelHeader>{t('Filters')}</PanelHeader>\n              <PanelBody>\n                {this.state.filterList.map(filter => {\n                  const fieldProps = {\n                    name: filter.id,\n                    label: filter.name,\n                    help: filter.description,\n                    disabled: !hasAccess,\n                  };\n\n                  // Note by default, forms generate data in the format of:\n                  // { [fieldName]: [value] }\n                  // Endpoints for these filters expect data to be:\n                  // { 'active': [value] }\n                  return (\n                    <PanelItem key={filter.id} noPadding>\n                      <NestedForm\n                        apiMethod=\"PUT\"\n                        apiEndpoint={`${filtersEndpoint}${filter.id}/`}\n                        initialData={{[filter.id]: filter.active}}\n                        saveOnBlur\n                      >\n                        {filter.id !== 'legacy-browsers' ? (\n                          <FieldFromConfig\n                            key={filter.id}\n                            getData={data => ({active: data[filter.id]})}\n                            field={{\n                              type: 'boolean',\n                              ...fieldProps,\n                            }}\n                          />\n                        ) : (\n                          <FormField\n                            inline={false}\n                            {...fieldProps}\n                            getData={data => ({subfilters: [...data[filter.id]]})}\n                          >\n                            {({onChange, onBlur}) => (\n                              <LegacyBrowserFilterRow\n                                key={filter.id}\n                                data={filter}\n                                disabled={!hasAccess}\n                                onToggle={this.handleLegacyChange.bind(\n                                  this,\n                                  onChange,\n                                  onBlur\n                                )}\n                              />\n                            )}\n                          </FormField>\n                        )}\n                      </NestedForm>\n                    </PanelItem>\n                  );\n                })}\n              </PanelBody>\n            </Panel>\n\n            <Form\n              apiMethod=\"PUT\"\n              apiEndpoint={projectEndpoint}\n              initialData={project.options}\n              saveOnBlur\n              onSubmitSuccess={this.handleSubmit}\n            >\n              <JsonForm\n                features={features}\n                forms={filterGroups}\n                disabled={!hasAccess}\n                renderFooter={this.renderCustomFilters(!hasAccess)}\n              />\n            </Form>\n          </Fragment>\n        )}\n      </Access>\n    );\n  }\n}\n\nexport default ProjectFiltersSettings;\n\n// TODO(ts): Understand why styled is not correctly inheriting props here\nconst NestedForm = styled(Form)<Form['props']>`\n  flex: 1;\n`;\n\nconst FilterGrid = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: ${space(1.5)};\n  margin-top: ${space(2)};\n`;\n\nconst FilterGridItem = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr max-content;\n  gap: ${space(1)};\n  align-items: center;\n  background: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  padding: ${space(1.5)};\n`;\n\nconst FilterGridIcon = styled('img')`\n  width: 38px;\n  height: 38px;\n`;\n\nconst FilterTitle = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  font-weight: bold;\n  white-space: nowrap;\n`;\n\nconst FilterDescription = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeSmall};\n  white-space: nowrap;\n`;\n\nconst BulkFilter = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  padding: 0 ${space(1.5)};\n`;\n\nconst BulkFilterLabel = styled('span')`\n  font-weight: bold;\n  margin-right: ${space(0.75)};\n`;\n\nconst BulkFilterItem = styled('a')`\n  border-right: 1px solid #f1f2f3;\n  margin-right: ${space(0.75)};\n  padding-right: ${space(0.75)};\n\n  &:last-child {\n    border-right: none;\n    margin-right: 0;\n  }\n`;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\n\nimport Link from 'sentry/components/links/link';\nimport NavTabs from 'sentry/components/navTabs';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {Project} from 'sentry/types';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\nimport GroupTombstones from 'sentry/views/settings/project/projectFilters/groupTombstones';\nimport ProjectFiltersChart from 'sentry/views/settings/project/projectFilters/projectFiltersChart';\nimport ProjectFiltersSettings from 'sentry/views/settings/project/projectFilters/projectFiltersSettings';\n\ntype Props = {\n  project: Project;\n} & RouteComponentProps<{filterType: string; orgId: string; projectId: string}, {}>;\n\nfunction ProjectFilters(props: Props) {\n  const {project, params, location} = props;\n  const {orgId, projectId, filterType} = params;\n  if (!project) {\n    return null;\n  }\n\n  const features = new Set(project.features);\n\n  return (\n    <Fragment>\n      <SentryDocumentTitle title={t('Inbound Filters')} projectSlug={projectId} />\n      <SettingsPageHeader title={t('Inbound Data Filters')} />\n      <PermissionAlert />\n\n      <TextBlock>\n        {t(\n          'Filters allow you to prevent Sentry from storing events in certain situations. Filtered events are tracked separately from rate limits, and do not apply to any project quotas.'\n        )}\n      </TextBlock>\n\n      <div>\n        <ProjectFiltersChart project={project} params={params} />\n\n        {features.has('discard-groups') && (\n          <NavTabs underlined style={{paddingTop: '30px'}}>\n            <li className={filterType === 'data-filters' ? 'active' : ''}>\n              <Link to={recreateRoute('data-filters/', {...props, stepBack: -1})}>\n                {t('Data Filters')}\n              </Link>\n            </li>\n            <li className={filterType === 'discarded-groups' ? 'active' : ''}>\n              <Link to={recreateRoute('discarded-groups/', {...props, stepBack: -1})}>\n                {t('Discarded Issues')}\n              </Link>\n            </li>\n          </NavTabs>\n        )}\n\n        {filterType === 'discarded-groups' ? (\n          <GroupTombstones orgId={orgId} projectId={project.slug} location={location} />\n        ) : (\n          <ProjectFiltersSettings project={project} params={params} features={features} />\n        )}\n      </div>\n    </Fragment>\n  );\n}\n\nexport default ProjectFilters;\n"],"names":["route","newLineHelpText","t","globHelpText","tct","link","href","getOptionsData","data","options","title","fields","name","type","multiline","autosize","rows","maxRows","placeholder","label","help","Fragment","getData","customFilterFields","recreateRoute","to","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","PermissionAlert","access","props","hasAccess","GroupTombstoneRow","onUndiscard","actor","center","StyledBox","includeLink","hideIcons","className","size","AvatarContainer","user","hasTooltip","tooltip","email","ActionContainer","message","onConfirm","id","icon","GroupTombstones","AsyncComponent","tombstoneId","orgId","projectId","this","api","requestPromise","method","then","addSuccessMessage","fetchData","catch","addErrorMessage","getEndpoints","paginate","renderEmpty","renderBody","tombstones","tombstonesPageLinks","state","length","handleUndiscard","pageLinks","space","STAT_OPS","color","theme","cors","localhost","ProjectFiltersChart","Component","loading","error","statsError","formattedData","blankStats","getFilterStats","componentDidMount","componentDidUpdate","prevProps","project","formatData","rawData","seriesWithData","Set","transformed","Object","keys","stat","timestamp","value","add","setState","seriesName","filter","series","has","statOptions","until","Math","floor","Date","getTime","since","statEndpoint","slug","query","resolution","requests","assign","Promise","all","results","rawStatsData","i","render","isLoading","hasError","hasLoaded","colors","undefined","withPadding","height","onRetry","isGroupedByDate","stacked","labelYAxisExtents","description","withApi","LEGACY_BROWSER_SUBFILTERS","ie_pre_9","iconIe","helpText","ie9","ie10","ie11","safari_pre_6","iconSafari","opera_pre_15","iconOpera","opera_mini_pre_8","android_pre_4","iconAndroid","LEGACY_BROWSER_KEYS","LegacyBrowserFilterRow","constructor","initialSubfilters","super","subfilter","e","subfilters","delete","onToggle","active","disabled","BulkFilter","BulkFilterLabel","BulkFilterItem","onClick","handleToggleSubfilters","bind","FilterGrid","key","FilterGridItem","FilterGridIcon","src","FilterTitle","FilterDescription","isActive","isDisabled","css","toggle","ProjectFiltersSettings","onChange","onBlur","_filter","response","ProjectsStore","p","featureName","features","alert","PanelAlert","hookName","renderDisabled","children","renderDisabledCustomFilters","hasFeature","organization","featureProps","field","getDefaultState","hooksDisabled","HookStore","prevState","reloadData","projectEndpoint","filtersEndpoint","filterList","fieldProps","noPadding","NestedForm","apiMethod","apiEndpoint","initialData","saveOnBlur","inline","handleLegacyChange","onSubmitSuccess","handleSubmit","forms","filterGroups","renderFooter","renderCustomFilters","Form","backgroundSecondary","borderRadius","fontSizeMedium","subText","fontSizeSmall","ProjectFilters","filterType","projectSlug","underlined","style","paddingTop"],"sourceRoot":""}