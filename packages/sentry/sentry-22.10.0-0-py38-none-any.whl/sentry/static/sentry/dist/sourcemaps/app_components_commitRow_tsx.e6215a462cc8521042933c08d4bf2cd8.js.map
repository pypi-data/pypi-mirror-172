{"version":3,"file":"chunks/app_components_commitRow_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/commitLink.tsx","webpack:///./app/components/commitRow.tsx"],"sourcesContent":["import Button from 'sentry/components/button';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {IconBitbucket, IconGithub, IconGitlab, IconVsts} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Repository} from 'sentry/types';\nimport {getShortCommitHash} from 'sentry/utils';\n\ntype CommitFormatterParameters = {\n  baseUrl: string;\n  commitId: string;\n};\n\ntype CommitProvider = {\n  commitUrl: (opts: CommitFormatterParameters) => string;\n  icon: React.ReactNode;\n  providerIds: string[];\n};\n\n// TODO(epurkhiser, jess): This should be moved into plugins.\nconst SUPPORTED_PROVIDERS: Readonly<CommitProvider[]> = [\n  {\n    icon: <IconGithub size=\"xs\" />,\n    providerIds: ['github', 'integrations:github', 'integrations:github_enterprise'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconBitbucket size=\"xs\" />,\n    providerIds: ['bitbucket', 'integrations:bitbucket'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commits/${commitId}`,\n  },\n  {\n    icon: <IconVsts size=\"xs\" />,\n    providerIds: ['visualstudio', 'integrations:vsts'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n  {\n    icon: <IconGitlab size=\"xs\" />,\n    providerIds: ['gitlab', 'integrations:gitlab'],\n    commitUrl: ({baseUrl, commitId}) => `${baseUrl}/commit/${commitId}`,\n  },\n];\n\ntype Props = {\n  commitId?: string;\n  inline?: boolean;\n  onClick?: () => void;\n  repository?: Repository;\n  showIcon?: boolean;\n};\n\nfunction CommitLink({inline, commitId, repository, showIcon = true, onClick}: Props) {\n  if (!commitId || !repository) {\n    return <span>{t('Unknown Commit')}</span>;\n  }\n\n  const shortId = getShortCommitHash(commitId);\n\n  const providerData = SUPPORTED_PROVIDERS.find(provider => {\n    if (!repository.provider) {\n      return false;\n    }\n    return provider.providerIds.includes(repository.provider.id);\n  });\n\n  if (providerData === undefined) {\n    return <span>{shortId}</span>;\n  }\n\n  const commitUrl =\n    repository.url &&\n    providerData.commitUrl({\n      commitId,\n      baseUrl: repository.url,\n    });\n\n  return !inline ? (\n    <Button\n      external\n      href={commitUrl}\n      size=\"sm\"\n      icon={showIcon ? providerData.icon : null}\n      onClick={onClick}\n    >\n      {shortId}\n    </Button>\n  ) : (\n    <ExternalLink href={commitUrl} onClick={onClick}>\n      {showIcon ? providerData.icon : null}\n      {' ' + shortId}\n    </ExternalLink>\n  );\n}\n\nexport default CommitLink;\n","import {useCallback} from 'react';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport {openInviteMembersModal} from 'sentry/actionCreators/modal';\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport CommitLink from 'sentry/components/commitLink';\nimport {Hovercard} from 'sentry/components/hovercard';\nimport Link from 'sentry/components/links/link';\nimport {PanelItem} from 'sentry/components/panels';\nimport TextOverflow from 'sentry/components/textOverflow';\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconWarning} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport space from 'sentry/styles/space';\nimport {Commit} from 'sentry/types';\n\nimport Button from './button';\n\nfunction formatCommitMessage(message: string | null) {\n  if (!message) {\n    return t('No message provided');\n  }\n\n  return message.split(/\\n/)[0];\n}\n\ninterface CommitRowProps {\n  commit: Commit;\n  customAvatar?: React.ReactNode;\n  onCommitClick?: () => void;\n  onPullRequestClick?: () => void;\n}\n\nfunction CommitRow({\n  commit,\n  customAvatar,\n  onPullRequestClick,\n  onCommitClick,\n}: CommitRowProps) {\n  const handleInviteClick = useCallback(() => {\n    if (!commit.author?.email) {\n      Sentry.captureException(\n        new Error(`Commit author has no email or id, invite flow is broken.`)\n      );\n      return;\n    }\n\n    openInviteMembersModal({\n      initialData: [\n        {\n          emails: new Set([commit.author.email]),\n        },\n      ],\n      source: 'suspect_commit',\n    });\n  }, [commit.author]);\n\n  const user = ConfigStore.get('user');\n  const isUser = user?.id === commit.author?.id;\n\n  return (\n    <StyledPanelItem key={commit.id} data-test-id=\"commit-row\">\n      {customAvatar ? (\n        customAvatar\n      ) : commit.author && commit.author.id === undefined ? (\n        <AvatarWrapper>\n          <Hovercard\n            skipWrapper\n            body={\n              <EmailWarning>\n                {tct(\n                  'The email [actorEmail] is not a member of your organization. [inviteUser:Invite] them or link additional emails in [accountSettings:account settings].',\n                  {\n                    actorEmail: <strong>{commit.author.email}</strong>,\n                    accountSettings: <StyledLink to=\"/settings/account/emails/\" />,\n                    inviteUser: <StyledLink to=\"\" onClick={handleInviteClick} />,\n                  }\n                )}\n              </EmailWarning>\n            }\n          >\n            <UserAvatar size={36} user={commit.author} />\n            <EmailWarningIcon data-test-id=\"email-warning\">\n              <IconWarning size=\"xs\" />\n            </EmailWarningIcon>\n          </Hovercard>\n        </AvatarWrapper>\n      ) : (\n        <div>\n          <UserAvatar size={36} user={commit.author} />\n        </div>\n      )}\n\n      <CommitMessage>\n        <Message>\n          {tct('[author] committed [commitLink]', {\n            author: isUser ? t('You') : commit.author?.name ?? t('Unknown author'),\n            commitLink: (\n              <CommitLink\n                inline\n                showIcon={false}\n                commitId={commit.id}\n                repository={commit.repository}\n                onClick={onCommitClick}\n              />\n            ),\n          })}\n        </Message>\n        <Meta>\n          {formatCommitMessage(commit.message)} &bull;{' '}\n          <TimeSince date={commit.dateCreated} />\n        </Meta>\n      </CommitMessage>\n\n      {commit.pullRequest && commit.pullRequest.externalUrl && (\n        <Button\n          external\n          href={commit.pullRequest.externalUrl}\n          onClick={onPullRequestClick}\n        >\n          {t('View Pull Request')}\n        </Button>\n      )}\n    </StyledPanelItem>\n  );\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: flex;\n  align-items: center;\n  gap: ${space(2)};\n`;\n\nconst AvatarWrapper = styled('div')`\n  position: relative;\n`;\n\nconst EmailWarning = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  line-height: 1.4;\n  margin: -4px;\n`;\n\nconst StyledLink = styled(Link)`\n  color: ${p => p.theme.textColor};\n  border-bottom: 1px dotted ${p => p.theme.textColor};\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n  }\n`;\n\nconst EmailWarningIcon = styled('span')`\n  position: absolute;\n  bottom: -6px;\n  right: -7px;\n  line-height: 12px;\n  border-radius: 50%;\n  border: 1px solid ${p => p.theme.background};\n  background: ${p => p.theme.yellow200};\n  padding: 1px 2px 3px 2px;\n`;\n\nconst CommitMessage = styled('div')`\n  flex: 1;\n  flex-direction: column;\n  min-width: 0;\n  margin-right: ${space(2)};\n`;\n\nconst Message = styled(TextOverflow)`\n  font-size: ${p => p.theme.fontSizeLarge};\n  line-height: 1.2;\n`;\n\nconst Meta = styled(TextOverflow)`\n  font-size: 13px;\n  line-height: 1.5;\n  margin: 0;\n  color: ${p => p.theme.subText};\n`;\n\nexport {CommitRow};\n"],"names":["SUPPORTED_PROVIDERS","icon","size","providerIds","commitUrl","baseUrl","commitId","inline","repository","showIcon","onClick","t","shortId","getShortCommitHash","providerData","find","provider","includes","id","undefined","url","href","external","CommitRow","commit","customAvatar","onPullRequestClick","onCommitClick","handleInviteClick","useCallback","author","email","openInviteMembersModal","initialData","emails","Set","source","Sentry","Error","isUser","ConfigStore","StyledPanelItem","AvatarWrapper","skipWrapper","body","EmailWarning","tct","actorEmail","accountSettings","StyledLink","to","inviteUser","user","EmailWarningIcon","CommitMessage","Message","name","commitLink","Meta","message","split","date","dateCreated","pullRequest","externalUrl","PanelItem","space","p","theme","fontSizeSmall","Link","textColor","background","yellow200","TextOverflow","fontSizeLarge","subText"],"sourceRoot":""}