{"version":3,"file":"chunks/app_views_organizationGroupDetails_groupTags_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/constants/ios-device-list.tsx","webpack:///./app/components/deviceName.tsx","webpack:///./app/views/organizationGroupDetails/groupTags.tsx"],"sourcesContent":["// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n// generated using scripts/extract-ios-device-names.ts as part of build step.\n// the purpose of the script is to extract only the iOS information that Sentry cares about\n// and discard the rest of the JSON so we do not end up bloating bundle size.\n\nconst iOSDeviceMapping: Record<string, string> = {\n  'iPod1,1': 'iPod touch',\n  'iPod2,1': 'iPod touch (2nd generation)',\n  'iPod3,1': 'iPod touch (3rd generation)',\n  'iPod4,1': 'iPod touch (4th generation)',\n  'iPod5,1': 'iPod touch (5th generation)',\n  'iPod7,1': 'iPod touch (6th generation)',\n  'iPod9,1': 'iPod touch (7th generation)',\n  'iPhone1,1': 'iPhone',\n  'iPhone1,2': 'iPhone 3G',\n  'iPhone2,1': 'iPhone 3GS',\n  'iPhone3,1': 'iPhone 4',\n  'iPhone3,2': 'iPhone 4',\n  'iPhone3,3': 'iPhone 4',\n  'iPhone4,1': 'iPhone 4S',\n  'iPhone5,1': 'iPhone 5',\n  'iPhone5,2': 'iPhone 5',\n  'iPhone5,3': 'iPhone 5c',\n  'iPhone5,4': 'iPhone 5c',\n  'iPhone6,1': 'iPhone 5s',\n  'iPhone6,2': 'iPhone 5s',\n  'iPhone8,4': 'iPhone SE (1st generation)',\n  'iPhone7,2': 'iPhone 6',\n  'iPhone7,1': 'iPhone 6 Plus',\n  'iPhone8,1': 'iPhone 6s',\n  'iPhone8,2': 'iPhone 6s Plus',\n  'iPhone9,1': 'iPhone 7',\n  'iPhone9,3': 'iPhone 7',\n  'iPhone9,2': 'iPhone 7 Plus',\n  'iPhone9,4': 'iPhone 7 Plus',\n  'iPhone10,1': 'iPhone 8',\n  'iPhone10,4': 'iPhone 8',\n  'iPhone10,2': 'iPhone 8 Plus',\n  'iPhone10,5': 'iPhone 8 Plus',\n  'iPhone10,3': 'iPhone X',\n  'iPhone10,6': 'iPhone X',\n  'iPhone11,8': 'iPhone XR',\n  'iPhone11,2': 'iPhone XS',\n  'iPhone11,4': 'iPhone XS Max',\n  'iPhone11,6': 'iPhone XS Max',\n  'iPhone12,1': 'iPhone 11',\n  'iPhone12,3': 'iPhone 11 Pro',\n  'iPhone12,5': 'iPhone 11 Pro Max',\n  'iPhone12,8': 'iPhone SE (2nd generation)',\n  'iPhone13,1': 'iPhone 12 mini',\n  'iPhone13,2': 'iPhone 12',\n  'iPhone13,3': 'iPhone 12 Pro',\n  'iPhone13,4': 'iPhone 12 Pro Max',\n  'iPad6,7': 'iPad Pro (12.9-inch)',\n  'iPad6,8': 'iPad Pro (12.9-inch)',\n  'iPad6,3': 'iPad Pro (9.7-inch)',\n  'iPad6,4': 'iPad Pro (9.7-inch)',\n  'iPad7,1': 'iPad Pro (12.9-inch, 2nd generation)',\n  'iPad7,2': 'iPad Pro (12.9-inch, 2nd generation)',\n  'iPad7,3': 'iPad Pro (10.5-inch)',\n  'iPad7,4': 'iPad Pro (10.5-inch)',\n  'iPad8,1': 'iPad Pro (11-inch)',\n  'iPad8,2': 'iPad Pro (11-inch)',\n  'iPad8,3': 'iPad Pro (11-inch)',\n  'iPad8,4': 'iPad Pro (11-inch)',\n  'iPad8,5': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,6': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,7': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,8': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,9': 'iPad Pro (11-inch) (2nd generation)',\n  'iPad8,10': 'iPad Pro (11-inch) (2nd generation)',\n  'iPad8,11': 'iPad Pro (12.9-inch) (4th generation)',\n  'iPad8,12': 'iPad Pro (12.9-inch) (4th generation)',\n  'iPad2,5': 'iPad mini',\n  'iPad2,6': 'iPad mini',\n  'iPad2,7': 'iPad mini',\n  'iPad4,4': 'iPad mini 2',\n  'iPad4,5': 'iPad mini 2',\n  'iPad4,6': 'iPad mini 2',\n  'iPad4,7': 'iPad mini 3',\n  'iPad4,8': 'iPad mini 3',\n  'iPad4,9': 'iPad mini 3',\n  'iPad5,1': 'iPad mini 4',\n  'iPad5,2': 'iPad mini 4',\n  'iPad11,1': 'iPad mini (5th generation)',\n  'iPad11,2': 'iPad mini (5th generation)',\n  'iPad4,1': 'iPad Air',\n  'iPad4,2': 'iPad Air',\n  'iPad4,3': 'iPad Air',\n  'iPad5,3': 'iPad Air 2',\n  'iPad5,4': 'iPad Air 2',\n  'iPad11,3': 'iPad Air (3rd generation)',\n  'iPad11,4': 'iPad Air (3rd generation)',\n  'iPad13,1': 'iPad Air (4th generation)',\n  'iPad13,2': 'iPad Air (4th generation)',\n  'iPad1,1': 'iPad',\n  'iPad2,1': 'iPad 2',\n  'iPad2,2': 'iPad 2',\n  'iPad2,3': 'iPad 2',\n  'iPad2,4': 'iPad 2',\n  'iPad3,1': 'iPad (3rd generation)',\n  'iPad3,2': 'iPad (3rd generation)',\n  'iPad3,3': 'iPad (3rd generation)',\n  'iPad3,4': 'iPad (4th generation)',\n  'iPad3,5': 'iPad (4th generation)',\n  'iPad3,6': 'iPad (4th generation)',\n  'iPad6,11': 'iPad (5th generation)',\n  'iPad6,12': 'iPad (5th generation)',\n  'iPad7,5': 'iPad (6th generation)',\n  'iPad7,6': 'iPad (6th generation)',\n  'iPad7,11': 'iPad (7th generation)',\n  'iPad7,12': 'iPad (7th generation)',\n  'iPad11,6': 'iPad (8th generation)',\n  'iPad11,7': 'iPad (8th generation)',\n  'AudioAccessory1,1': 'HomePod',\n  'AudioAccessory1,2': 'HomePod',\n  'AudioAccessory5,1': 'HomePod mini',\n  'Watch1,1': 'Apple Watch (1st generation)',\n  'Watch1,2': 'Apple Watch (1st generation)',\n  'Watch2,6': 'Apple Watch Series 1',\n  'Watch2,7': 'Apple Watch Series 1',\n  'Watch2,3': 'Apple Watch Series 2',\n  'Watch2,4': 'Apple Watch Series 2',\n  'Watch3,1': 'Apple Watch Series 3',\n  'Watch3,2': 'Apple Watch Series 3',\n  'Watch3,3': 'Apple Watch Series 3',\n  'Watch3,4': 'Apple Watch Series 3',\n  'Watch4,1': 'Apple Watch Series 4',\n  'Watch4,2': 'Apple Watch Series 4',\n  'Watch4,3': 'Apple Watch Series 4',\n  'Watch4,4': 'Apple Watch Series 4',\n  'Watch5,1': 'Apple Watch Series 5',\n  'Watch5,2': 'Apple Watch Series 5',\n  'Watch5,3': 'Apple Watch Series 5',\n  'Watch5,4': 'Apple Watch Series 5',\n  'Watch5,9': 'Apple Watch SE',\n  'Watch5,10': 'Apple Watch SE',\n  'Watch5,11': 'Apple Watch SE',\n  'Watch5,12': 'Apple Watch SE',\n  'Watch6,1': 'Apple Watch Series 6',\n  'Watch6,2': 'Apple Watch Series 6',\n  'Watch6,3': 'Apple Watch Series 6',\n  'Watch6,4': 'Apple Watch Series 6',\n  'AppleTV1,1': 'Apple TV (1st generation)',\n  'AppleTV2,1': 'Apple TV (2nd generation)',\n  'AppleTV3,1': 'Apple TV (3rd generation)',\n  'AppleTV3,2': 'Apple TV (3rd generation)',\n  'AppleTV5,3': 'Apple TV (4th generation)',\n  'AppleTV6,2': 'Apple TV 4K',\n  'AirPods1,1': 'AirPods (1st generation)',\n  'AirPods2,1': 'AirPods (2nd generation)',\n  'iProd8,1': 'AirPods Pro',\n};\n\nexport {iOSDeviceMapping};\n","import {useMemo} from 'react';\n\nimport {iOSDeviceMapping} from 'sentry/constants/ios-device-list';\n\nexport function deviceNameMapper(model: string | undefined): string | null {\n  // If we have no model, render nothing\n  if (typeof model !== 'string') {\n    return null;\n  }\n\n  // If module has not loaded yet, render the unparsed model\n  if (module === null) {\n    return model;\n  }\n\n  const [identifier, ...rest] = model.split(' ');\n\n  const modelName = iOSDeviceMapping[identifier];\n  return modelName === undefined ? model : `${modelName} ${rest.join(' ')}`;\n}\n\ninterface DeviceNameProps {\n  value: string;\n  children?: (name: string) => React.ReactNode;\n}\n\n/**\n * This is used to map iOS Device Names to model name.\n * This asynchronously loads the ios-device-list library because of its size\n */\nfunction DeviceName({value, children}: DeviceNameProps): React.ReactElement | null {\n  const deviceName = useMemo(() => deviceNameMapper(value), [value]);\n\n  return deviceName ? (\n    <span data-test-id=\"loaded-device-name\">\n      {children ? children(deviceName) : deviceName}\n    </span>\n  ) : null;\n}\n\nexport {DeviceName};\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport Alert from 'sentry/components/alert';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Count from 'sentry/components/count';\nimport {DeviceName} from 'sentry/components/deviceName';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport GlobalSelectionLink from 'sentry/components/globalSelectionLink';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport {extractSelectionParameters} from 'sentry/components/organizations/pageFilters/utils';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport Version from 'sentry/components/version';\nimport {tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group, Organization, TagWithTopValues} from 'sentry/types';\nimport {percent} from 'sentry/utils';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = AsyncComponent['props'] & {\n  baseUrl: string;\n  environments: string[];\n  group: Group;\n  organization: Organization;\n} & RouteComponentProps<{}, {}>;\n\ntype State = AsyncComponent['state'] & {\n  tagList: null | TagWithTopValues[];\n};\n\nclass GroupTags extends AsyncComponent<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      tagList: null,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {group, environments} = this.props;\n    return [\n      [\n        'tagList',\n        `/issues/${group.id}/tags/`,\n        {\n          query: {environment: environments},\n        },\n      ],\n    ];\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!isEqual(prevProps.environments, this.props.environments)) {\n      this.remountComponent();\n    }\n  }\n\n  renderTags() {\n    const {baseUrl, location} = this.props;\n    const {tagList} = this.state;\n\n    const alphabeticalTags = (tagList ?? []).sort((a, b) => a.key.localeCompare(b.key));\n\n    return (\n      <Container>\n        {alphabeticalTags.map((tag, tagIdx) => (\n          <TagItem key={tagIdx}>\n            <StyledPanel>\n              <PanelBody withPadding>\n                <TagHeading>\n                  <Link\n                    to={{\n                      pathname: `${baseUrl}tags/${tag.key}/`,\n                      query: extractSelectionParameters(location.query),\n                    }}\n                  >\n                    <span data-test-id=\"tag-title\">{tag.key}</span>\n                  </Link>\n                </TagHeading>\n                <UnstyledUnorderedList>\n                  {tag.topValues.map((tagValue, tagValueIdx) => (\n                    <li key={tagValueIdx} data-test-id={tag.key}>\n                      <TagBarGlobalSelectionLink\n                        to={{\n                          pathname: `${baseUrl}events/`,\n                          query: {\n                            query: tagValue.query || `${tag.key}:\"${tagValue.value}\"`,\n                          },\n                        }}\n                      >\n                        <TagBarBackground\n                          widthPercent={percent(tagValue.count, tag.totalValues) + '%'}\n                        />\n                        <TagBarLabel>\n                          {tag.key === 'release' ? (\n                            <Version version={tagValue.name} anchor={false} />\n                          ) : (\n                            <DeviceName value={tagValue.name} />\n                          )}\n                        </TagBarLabel>\n                        <TagBarCount>\n                          <Count value={tagValue.count} />\n                        </TagBarCount>\n                      </TagBarGlobalSelectionLink>\n                    </li>\n                  ))}\n                </UnstyledUnorderedList>\n              </PanelBody>\n            </StyledPanel>\n          </TagItem>\n        ))}\n      </Container>\n    );\n  }\n\n  renderBody() {\n    return (\n      <Layout.Body>\n        <Layout.Main fullWidth>\n          <FilterSection>\n            <EnvironmentPageFilter />\n          </FilterSection>\n          <Alert type=\"info\">\n            {tct(\n              'Tags are automatically indexed for searching and breakdown charts. Learn how to [link: add custom tags to issues]',\n              {\n                link: (\n                  <ExternalLink href=\"https://docs.sentry.io/platform-redirect/?next=/enriching-events/tags\" />\n                ),\n              }\n            )}\n          </Alert>\n          {this.renderTags()}\n        </Layout.Main>\n      </Layout.Body>\n    );\n  }\n}\n\nconst Container = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n`;\n\nconst FilterSection = styled('div')`\n  width: max-content;\n  max-width: 100%;\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledPanel = styled(Panel)`\n  height: 100%;\n`;\n\nconst TagHeading = styled('h5')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  margin-bottom: 0;\n  color: ${p => p.theme.blue300};\n`;\n\nconst UnstyledUnorderedList = styled('ul')`\n  list-style: none;\n  padding-left: 0;\n  margin-bottom: 0;\n`;\n\nconst TagItem = styled('div')`\n  padding: 0;\n`;\n\nconst TagBarBackground = styled('div')<{widthPercent: string}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  background: ${p => p.theme.tagBar};\n  border-radius: ${p => p.theme.borderRadius};\n  width: ${p => p.widthPercent};\n`;\n\nconst TagBarGlobalSelectionLink = styled(GlobalSelectionLink)`\n  position: relative;\n  display: flex;\n  line-height: 2.2;\n  color: ${p => p.theme.textColor};\n  margin-bottom: ${space(0.5)};\n  padding: 0 ${space(1)};\n  background: ${p => p.theme.backgroundSecondary};\n  border-radius: ${p => p.theme.borderRadius};\n  overflow: hidden;\n\n  &:hover {\n    color: ${p => p.theme.textColor};\n    text-decoration: underline;\n    ${TagBarBackground} {\n      background: ${p => p.theme.tagBarHover};\n    }\n  }\n`;\n\nconst TagBarLabel = styled('div')`\n  display: flex;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeMedium};\n  position: relative;\n  flex-grow: 1;\n  ${p => p.theme.overflowEllipsis}\n`;\n\nconst TagBarCount = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  position: relative;\n  padding-left: ${space(2)};\n  padding-right: ${space(1)};\n  font-variant-numeric: tabular-nums;\n`;\n\nexport default withOrganization(GroupTags);\n"],"names":["iOSDeviceMapping","deviceNameMapper","model","module","identifier","rest","split","modelName","undefined","join","DeviceName","value","children","deviceName","useMemo","GroupTags","AsyncComponent","getDefaultState","super","tagList","getEndpoints","group","environments","this","props","id","query","environment","componentDidUpdate","prevProps","isEqual","remountComponent","renderTags","baseUrl","location","state","alphabeticalTags","sort","a","b","key","localeCompare","Container","map","tag","tagIdx","TagItem","StyledPanel","withPadding","TagHeading","to","pathname","extractSelectionParameters","UnstyledUnorderedList","topValues","tagValue","tagValueIdx","TagBarGlobalSelectionLink","TagBarBackground","widthPercent","percent","count","totalValues","TagBarLabel","version","name","anchor","TagBarCount","renderBody","fullWidth","FilterSection","type","tct","link","href","space","Panel","p","theme","fontSizeLarge","blue300","tagBar","borderRadius","GlobalSelectionLink","textColor","backgroundSecondary","tagBarHover","fontSizeMedium","overflowEllipsis","withOrganization"],"sourceRoot":""}