{"version":3,"file":"chunks/app_views_settings_organizationMembers_organizationMemberDetail_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/isMemberDisabledFromLimit.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/settings/organizationMembers/inviteMember/orgRoleSelect.tsx","webpack:///./app/views/settings/organizationMembers/organizationMemberDetail.tsx"],"sourcesContent":["import {Member} from 'sentry/types';\n\n// check to see if a member has been disabled because of the member limit\nexport default function isMemberDisabledFromLimit(member?: Member | null) {\n  return member?.flags['member-limit:restricted'] ?? false;\n}\n","import {PlainRoute} from 'react-router';\nimport {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'sentry/utils/replaceRouterParams';\n\ntype Options = {\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  routes: PlainRoute[];\n\n  location?: Location;\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport Radio from 'sentry/components/radio';\nimport {t} from 'sentry/locale';\nimport {OrgRole} from 'sentry/types';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nconst Label = styled('label')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  margin-bottom: 0;\n`;\n\ntype Props = {\n  disabled: boolean;\n  enforceAllowed: boolean;\n  enforceRetired: boolean;\n  roleList: OrgRole[];\n  roleSelected: string;\n  setSelected: (id: string) => void;\n};\n\nclass OrganizationRoleSelect extends Component<Props> {\n  render() {\n    const {\n      disabled,\n      enforceRetired,\n      enforceAllowed,\n      roleList,\n      roleSelected,\n      setSelected,\n    } = this.props;\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Organization Role')}</PanelHeader>\n\n        <PanelBody>\n          {roleList.map(role => {\n            const {desc, name, id, allowed, isRetired: roleRetired} = role;\n\n            const isRetired = enforceRetired && roleRetired;\n            const isDisabled = disabled || isRetired || (enforceAllowed && !allowed);\n\n            return (\n              <PanelItem\n                key={id}\n                onClick={() => !isDisabled && setSelected(id)}\n                css={!isDisabled ? {} : {color: 'grey', cursor: 'default'}}\n              >\n                <Label>\n                  <Radio id={id} value={name} checked={id === roleSelected} readOnly />\n                  <div style={{flex: 1, padding: '0 16px'}}>\n                    {name} {isRetired && t('(Deprecated)')}\n                    <TextBlock noMargin>\n                      <div className=\"help-block\">{desc}</div>\n                    </TextBlock>\n                  </div>\n                </Label>\n              </PanelItem>\n            );\n          })}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default OrganizationRoleSelect;\n","import {Fragment} from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\n\nimport {removeAuthenticator} from 'sentry/actionCreators/account';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {resendMemberInvite, updateMember} from 'sentry/actionCreators/members';\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport DateTime from 'sentry/components/dateTime';\nimport NotFound from 'sentry/components/errors/notFound';\nimport Field from 'sentry/components/forms/field';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport Tooltip from 'sentry/components/tooltip';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Member, Organization, Team} from 'sentry/types';\nimport isMemberDisabledFromLimit from 'sentry/utils/isMemberDisabledFromLimit';\nimport recreateRoute from 'sentry/utils/recreateRoute';\nimport Teams from 'sentry/utils/teams';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TeamSelect from 'sentry/views/settings/components/teamSelect';\n\nimport OrganizationRoleSelect from './inviteMember/orgRoleSelect';\n\nconst MULTIPLE_ORGS = t('Cannot be reset since user is in more than one organization');\nconst NOT_ENROLLED = t('Not enrolled in two-factor authentication');\nconst NO_PERMISSION = t('You do not have permission to perform this action');\nconst TWO_FACTOR_REQUIRED = t(\n  'Cannot be reset since two-factor is required for this organization'\n);\n\ntype RouteParams = {\n  memberId: string;\n  orgId: string;\n};\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  member: Member | null;\n  roleList: Member['roles'];\n  selectedRole: Member['role'];\n} & AsyncView['state'];\n\nconst DisabledMemberTooltip = HookOrDefault({\n  hookName: 'component:disabled-member-tooltip',\n  defaultComponent: ({children}) => <Fragment>{children}</Fragment>,\n});\n\nclass OrganizationMemberDetail extends AsyncView<Props, State> {\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      roleList: [],\n      selectedRole: '',\n      member: null,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, params} = this.props;\n    return [\n      ['member', `/organizations/${organization.slug}/members/${params.memberId}/`],\n    ];\n  }\n\n  redirectToMemberPage() {\n    const {location, params, routes} = this.props;\n    const members = recreateRoute('members/', {\n      location,\n      routes,\n      params,\n      stepBack: -2,\n    });\n    browserHistory.push(members);\n  }\n\n  handleSave = async () => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Saving...'));\n    this.setState({busy: true});\n\n    try {\n      await updateMember(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        data: this.state.member,\n      });\n      addSuccessMessage(t('Saved'));\n      this.redirectToMemberPage();\n    } catch (resp) {\n      const errorMessage =\n        (resp && resp.responseJSON && resp.responseJSON.detail) || t('Could not save...');\n      addErrorMessage(errorMessage);\n    }\n    this.setState({busy: false});\n  };\n\n  handleInvite = async (regenerate: boolean) => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Sending invite...'));\n\n    this.setState({busy: true});\n\n    try {\n      const data = await resendMemberInvite(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        regenerate,\n      });\n\n      addSuccessMessage(t('Sent invite!'));\n\n      if (regenerate) {\n        this.setState(state => ({member: {...state.member, ...data}}));\n      }\n    } catch (_err) {\n      addErrorMessage(t('Could not send invite'));\n    }\n\n    this.setState({busy: false});\n  };\n\n  handleAddTeam = (team: Team) => {\n    const {member} = this.state;\n    if (!member!.teams.includes(team.slug)) {\n      member!.teams.push(team.slug);\n    }\n    this.setState({member});\n  };\n\n  handleRemoveTeam = (removedTeam: string) => {\n    const {member} = this.state;\n\n    this.setState({\n      member: {\n        ...member!,\n        teams: member!.teams.filter(slug => slug !== removedTeam),\n      },\n    });\n  };\n\n  handle2faReset = async () => {\n    const {organization, router} = this.props;\n    const {user} = this.state.member!;\n\n    const requests = user.authenticators.map(auth =>\n      removeAuthenticator(this.api, user.id, auth.id)\n    );\n\n    try {\n      await Promise.all(requests);\n      router.push(`/settings/${organization.slug}/members/`);\n      addSuccessMessage(t('All authenticators have been removed'));\n    } catch (err) {\n      addErrorMessage(t('Error removing authenticators'));\n      Sentry.captureException(err);\n    }\n  };\n\n  showResetButton = () => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user || !user.authenticators || organization.require2FA) {\n      return false;\n    }\n    const hasAuth = user.authenticators.length >= 1;\n    return hasAuth && user.canReset2fa;\n  };\n\n  getTooltip = (): string => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user) {\n      return '';\n    }\n\n    if (!user.authenticators) {\n      return NO_PERMISSION;\n    }\n    if (!user.authenticators.length) {\n      return NOT_ENROLLED;\n    }\n    if (!user.canReset2fa) {\n      return MULTIPLE_ORGS;\n    }\n    if (organization.require2FA) {\n      return TWO_FACTOR_REQUIRED;\n    }\n\n    return '';\n  };\n\n  get memberDeactivated() {\n    return isMemberDisabledFromLimit(this.state.member);\n  }\n\n  renderMemberStatus(member: Member) {\n    if (this.memberDeactivated) {\n      return (\n        <em>\n          <DisabledMemberTooltip>{t('Deactivated')}</DisabledMemberTooltip>\n        </em>\n      );\n    }\n    if (member.expired) {\n      return <em>{t('Invitation Expired')}</em>;\n    }\n    if (member.pending) {\n      return <em>{t('Invitation Pending')}</em>;\n    }\n    return t('Active');\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const {member} = this.state;\n\n    if (!member) {\n      return <NotFound />;\n    }\n\n    const {access, features} = organization;\n    const inviteLink = member.invite_link;\n    const canEdit = access.includes('org:write') && !this.memberDeactivated;\n    const hasTeamRoles = features.includes('team-roles');\n\n    const {email, expired, pending} = member;\n    const canResend = !expired;\n    const showAuth = !pending;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={\n            <Fragment>\n              <div>{member.name}</div>\n              <ExtraHeaderText>{t('Member Settings')}</ExtraHeaderText>\n            </Fragment>\n          }\n        />\n\n        <Panel>\n          <PanelHeader>{t('Basics')}</PanelHeader>\n\n          <PanelBody>\n            <PanelItem>\n              <OverflowWrapper>\n                <Details>\n                  <div>\n                    <DetailLabel>{t('Email')}</DetailLabel>\n                    <div>\n                      <ExternalLink href={`mailto:${email}`}>{email}</ExternalLink>\n                    </div>\n                  </div>\n                  <div>\n                    <DetailLabel>{t('Status')}</DetailLabel>\n                    <div data-test-id=\"member-status\">\n                      {this.renderMemberStatus(member)}\n                    </div>\n                  </div>\n                  <div>\n                    <DetailLabel>{t('Added')}</DetailLabel>\n                    <div>\n                      <DateTime dateOnly date={member.dateCreated} />\n                    </div>\n                  </div>\n                </Details>\n\n                {inviteLink && (\n                  <InviteSection>\n                    <div>\n                      <DetailLabel>{t('Invite Link')}</DetailLabel>\n                      <TextCopyInput>{inviteLink}</TextCopyInput>\n                      <p className=\"help-block\">\n                        {t('This unique invite link may only be used by this member.')}\n                      </p>\n                    </div>\n                    <InviteActions>\n                      <Button onClick={() => this.handleInvite(true)}>\n                        {t('Generate New Invite')}\n                      </Button>\n                      {canResend && (\n                        <Button\n                          data-test-id=\"resend-invite\"\n                          onClick={() => this.handleInvite(false)}\n                        >\n                          {t('Resend Invite')}\n                        </Button>\n                      )}\n                    </InviteActions>\n                  </InviteSection>\n                )}\n              </OverflowWrapper>\n            </PanelItem>\n          </PanelBody>\n        </Panel>\n\n        {showAuth && (\n          <Panel>\n            <PanelHeader>{t('Authentication')}</PanelHeader>\n            <PanelBody>\n              <Field\n                alignRight\n                flexibleControlStateSize\n                label={t('Reset two-factor authentication')}\n                help={t(\n                  'Resetting two-factor authentication will remove all two-factor authentication methods for this member.'\n                )}\n              >\n                <Tooltip\n                  data-test-id=\"reset-2fa-tooltip\"\n                  disabled={this.showResetButton()}\n                  title={this.getTooltip()}\n                >\n                  <Confirm\n                    disabled={!this.showResetButton()}\n                    message={tct(\n                      'Are you sure you want to disable all two-factor authentication methods for [name]?',\n                      {name: member.name ? member.name : 'this member'}\n                    )}\n                    onConfirm={this.handle2faReset}\n                    data-test-id=\"reset-2fa-confirm\"\n                  >\n                    <Button data-test-id=\"reset-2fa\" priority=\"danger\">\n                      {t('Reset two-factor authentication')}\n                    </Button>\n                  </Confirm>\n                </Tooltip>\n              </Field>\n            </PanelBody>\n          </Panel>\n        )}\n\n        <OrganizationRoleSelect\n          enforceAllowed={false}\n          enforceRetired={hasTeamRoles}\n          disabled={!canEdit}\n          roleList={member.roles}\n          roleSelected={member.role}\n          setSelected={slug => this.setState({member: {...member, role: slug}})}\n        />\n\n        <Teams slugs={member.teams}>\n          {({teams, initiallyLoaded}) => (\n            <TeamSelect\n              organization={organization}\n              selectedTeams={teams}\n              disabled={!canEdit}\n              onAddTeam={this.handleAddTeam}\n              onRemoveTeam={this.handleRemoveTeam}\n              loadingTeams={!initiallyLoaded}\n            />\n          )}\n        </Teams>\n\n        <Footer>\n          <Button\n            priority=\"primary\"\n            busy={this.state.busy}\n            onClick={this.handleSave}\n            disabled={!canEdit}\n          >\n            {t('Save Member')}\n          </Button>\n        </Footer>\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationMemberDetail);\n\nconst ExtraHeaderText = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst Details = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 2fr 1fr 1fr;\n  gap: ${space(2)};\n  width: 100%;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-auto-flow: row;\n    grid-template-columns: auto;\n  }\n`;\n\nconst DetailLabel = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n  color: ${p => p.theme.textColor};\n`;\n\nconst OverflowWrapper = styled('div')`\n  overflow: hidden;\n  flex: 1;\n`;\n\nconst InviteSection = styled('div')`\n  border-top: 1px solid ${p => p.theme.border};\n  margin-top: ${space(2)};\n  padding-top: ${space(2)};\n`;\n\nconst InviteActions = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  grid-auto-flow: column;\n  justify-content: flex-end;\n  margin-top: ${space(2)};\n`;\n\nconst Footer = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n"],"names":["isMemberDisabledFromLimit","member","flags","recreateRoute","to","options","routes","params","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","Label","OrganizationRoleSelect","Component","render","disabled","enforceRetired","enforceAllowed","roleList","roleSelected","setSelected","this","props","t","role","desc","name","id","allowed","isRetired","roleRetired","isDisabled","onClick","css","color","cursor","value","checked","readOnly","style","flex","padding","noMargin","className","MULTIPLE_ORGS","NOT_ENROLLED","NO_PERMISSION","TWO_FACTOR_REQUIRED","DisabledMemberTooltip","HookOrDefault","hookName","defaultComponent","children","Fragment","OrganizationMemberDetail","AsyncView","async","organization","addLoadingMessage","setState","busy","updateMember","api","orgId","slug","memberId","data","state","addSuccessMessage","redirectToMemberPage","resp","errorMessage","responseJSON","detail","addErrorMessage","resendMemberInvite","regenerate","_err","team","teams","includes","push","removedTeam","filter","router","user","requests","authenticators","auth","removeAuthenticator","Promise","all","err","Sentry","require2FA","length","canReset2fa","getDefaultState","super","selectedRole","getEndpoints","members","browserHistory","memberDeactivated","renderMemberStatus","expired","pending","renderBody","access","features","inviteLink","invite_link","canEdit","hasTeamRoles","email","canResend","showAuth","title","ExtraHeaderText","OverflowWrapper","Details","DetailLabel","href","dateOnly","date","dateCreated","InviteSection","InviteActions","handleInvite","alignRight","flexibleControlStateSize","label","help","showResetButton","getTooltip","message","tct","onConfirm","handle2faReset","priority","roles","slugs","initiallyLoaded","selectedTeams","onAddTeam","handleAddTeam","onRemoveTeam","handleRemoveTeam","loadingTeams","Footer","handleSave","withOrganization","p","theme","gray300","fontSizeLarge","space","breakpoints","small","textColor","border"],"sourceRoot":""}