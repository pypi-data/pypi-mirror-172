{"version":3,"file":"chunks/app_components_modals_dashboardWidgetQuerySelectorModal_tsx-node_modules_lodash_trimStart_js.xxxxxxxxxxxxxxxxxxxx.js","mappings":"q3BAgCA,MAAMA,UAA0CC,EAAAA,UAC9CC,gBACE,MAAM,aAACC,EAAD,OAAeC,EAAf,UAAuBC,EAAvB,cAAkCC,GAAiBC,KAAKC,MAyC9D,OAxCwBJ,EAAOK,QAAQC,KAAI,CAACC,EAAOC,KACjD,MAAMC,GAAmBC,EAAAA,EAAAA,IACvB,IACKV,EACHK,QAAS,CAACE,IAEZN,EACAF,EACA,EACAG,GAEF,OACE,QAAC,EAAAS,SAAD,WACE,QAACC,EAAD,YACE,QAACC,EAAD,YACE,QAACC,EAAD,CAAaC,QAAQ,qBAAqB,cAAYC,EAAAA,EAAAA,GAAE,iBAAxD,UACE,QAAC,KAAD,OAEF,QAACC,EAAD,CAAaC,MAAOX,EAAMY,WAAYC,UAAQ,QAEhD,QAAC,EAAAC,KAAD,CAAMC,GAAIb,EAAV,UACE,QAACc,EAAD,CACEC,SAAS,UACTC,MAAM,QAAC,KAAD,CAAaC,KAAK,KAAKC,UAAU,UACvCC,QAAS,MACPC,EAAAA,EAAAA,GACE,2CACA,CACE9B,eACA+B,YAAa9B,EAAO+B,aAJxB,EAQF,cAAYf,EAAAA,EAAAA,GAAE,4BArBPR,EADjB,GA8BH,CAEDwB,SACE,MAAM,KAACC,EAAD,OAAOC,EAAP,OAAelC,GAAUG,KAAKC,MACpC,OACE,QAAC,EAAAO,SAAD,YACE,QAACuB,EAAD,CAAQC,aAAW,EAAnB,UACE,uBAAKnC,EAAOoC,WAEd,QAACH,EAAD,YACE,uBACGjB,EAAAA,EAAAA,GACC,qHAGHb,KAAKL,qBAIb,EA/DGF,EAAAA,YAAAA,oCAkEN,MAAMqB,GAAc,OAAOoB,EAAAA,EAAP,sBAAH,iIAUXzB,GAAiB,OAAO,MAAP,sBAAH,+BAED0B,EAAAA,EAAAA,GAAM,GAFL,KAIdf,GAAuB,OAAOgB,EAAAA,GAAP,sBAAH,gBACTD,EAAAA,EAAAA,GAAM,GADG,KAIpBzB,GAAY,OAAO,MAAP,sBAAH,qBACO2B,GAAKA,EAAEC,MAAMC,QADpB,sBAEOF,GAAKA,EAAEC,MAAME,iBAFpB,gBAGCH,GAAKA,EAAEC,MAAMG,qBAHd,iBAIEN,EAAAA,EAAAA,GAAM,GAJR,0FAQNA,EAAAA,EAAAA,GAAM,GARA,iDAWIE,GAAKA,EAAEC,MAAMI,cAXjB,KAcT/B,GAAc,OAAO,QAAP,sBAAH,yBAEJwB,EAAAA,EAAAA,GAAM,IAFF,sBAINE,GAAKA,EAAEC,MAAMK,SAJP,KAOJC,EAAW,CAAH,oEAMrB,GAAeC,EAAAA,EAAAA,IAAQC,EAAAA,EAAAA,GAAgBrD,G,yDC/IvC,IAAIsD,EAAc,EAAQ,0CAmB1BC,EAAOC,QARP,SAAyBC,EAAYC,GAInC,IAHA,IAAI9C,GAAS,EACT+C,EAASF,EAAWE,SAEf/C,EAAQ+C,GAAUL,EAAYI,EAAYD,EAAW7C,GAAQ,IAAM,IAC5E,OAAOA,CACT,C,kDCjBA,IAAIgD,EAAe,EAAQ,2CACvBC,EAAY,EAAQ,wCACpBC,EAAkB,EAAQ,8CAC1BC,EAAgB,EAAQ,4CACxBC,EAAW,EAAQ,sCAGnBC,EAAc,OAmClBV,EAAOC,QAdP,SAAmBU,EAAQC,EAAOC,GAEhC,IADAF,EAASF,EAASE,MACHE,QAAmBC,IAAVF,GACtB,OAAOD,EAAOI,QAAQL,EAAa,IAErC,IAAKC,KAAYC,EAAQP,EAAaO,IACpC,OAAOD,EAET,IAAIT,EAAaM,EAAcG,GAC3BK,EAAQT,EAAgBL,EAAYM,EAAcI,IAEtD,OAAON,EAAUJ,EAAYc,GAAOC,KAAK,GAC3C,C","sources":["webpack:///./app/components/modals/dashboardWidgetQuerySelectorModal.tsx","webpack:///../node_modules/lodash/_charsStartIndex.js","webpack:///../node_modules/lodash/trimStart.js"],"sourcesContent":["import {Component, Fragment} from 'react';\nimport {Link} from 'react-router';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport Input from 'sentry/components/input';\nimport {IconChevron, IconSearch} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, PageFilters} from 'sentry/types';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport withApi from 'sentry/utils/withApi';\nimport withPageFilters from 'sentry/utils/withPageFilters';\nimport {Widget} from 'sentry/views/dashboardsV2/types';\nimport {getWidgetDiscoverUrl} from 'sentry/views/dashboardsV2/utils';\n\nexport type DashboardWidgetQuerySelectorModalOptions = {\n  organization: Organization;\n  widget: Widget;\n  isMetricsData?: boolean;\n};\n\ntype Props = ModalRenderProps &\n  DashboardWidgetQuerySelectorModalOptions & {\n    api: Client;\n    organization: Organization;\n    selection: PageFilters;\n  };\n\nclass DashboardWidgetQuerySelectorModal extends Component<Props> {\n  renderQueries() {\n    const {organization, widget, selection, isMetricsData} = this.props;\n    const querySearchBars = widget.queries.map((query, index) => {\n      const discoverLocation = getWidgetDiscoverUrl(\n        {\n          ...widget,\n          queries: [query],\n        },\n        selection,\n        organization,\n        0,\n        isMetricsData\n      );\n      return (\n        <Fragment key={index}>\n          <QueryContainer>\n            <Container>\n              <SearchLabel htmlFor=\"smart-search-input\" aria-label={t('Search events')}>\n                <IconSearch />\n              </SearchLabel>\n              <StyledInput value={query.conditions} disabled />\n            </Container>\n            <Link to={discoverLocation}>\n              <OpenInDiscoverButton\n                priority=\"primary\"\n                icon={<IconChevron size=\"xs\" direction=\"right\" />}\n                onClick={() => {\n                  trackAdvancedAnalyticsEvent(\n                    'dashboards_views.query_selector.selected',\n                    {\n                      organization,\n                      widget_type: widget.displayType,\n                    }\n                  );\n                }}\n                aria-label={t('Open in Discover')}\n              />\n            </Link>\n          </QueryContainer>\n        </Fragment>\n      );\n    });\n    return querySearchBars;\n  }\n\n  render() {\n    const {Body, Header, widget} = this.props;\n    return (\n      <Fragment>\n        <Header closeButton>\n          <h4>{widget.title}</h4>\n        </Header>\n        <Body>\n          <p>\n            {t(\n              'Multiple queries were used to create this widget visualization. Which query would you like to view in Discover?'\n            )}\n          </p>\n          {this.renderQueries()}\n        </Body>\n      </Fragment>\n    );\n  }\n}\n\nconst StyledInput = styled(Input)`\n  text-overflow: ellipsis;\n  padding: 0px;\n  box-shadow: none;\n  height: auto;\n  &:disabled {\n    border: none;\n    cursor: default;\n  }\n`;\nconst QueryContainer = styled('div')`\n  display: flex;\n  margin-bottom: ${space(1)};\n`;\nconst OpenInDiscoverButton = styled(Button)`\n  margin-left: ${space(1)};\n`;\n\nconst Container = styled('div')`\n  border: 1px solid ${p => p.theme.border};\n  box-shadow: inset ${p => p.theme.dropShadowLight};\n  background: ${p => p.theme.backgroundSecondary};\n  padding: 7px ${space(1)};\n  position: relative;\n  display: grid;\n  grid-template-columns: max-content 1fr max-content;\n  gap: ${space(1)};\n  align-items: start;\n  flex-grow: 1;\n  border-radius: ${p => p.theme.borderRadius};\n`;\n\nconst SearchLabel = styled('label')`\n  display: flex;\n  padding: ${space(0.5)} 0;\n  margin: 0;\n  color: ${p => p.theme.gray300};\n`;\n\nexport const modalCss = css`\n  width: 100%;\n  max-width: 700px;\n  margin: 70px auto;\n`;\n\nexport default withApi(withPageFilters(DashboardWidgetQuerySelectorModal));\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nmodule.exports = charsStartIndex;\n","var baseToString = require('./_baseToString'),\n    castSlice = require('./_castSlice'),\n    charsStartIndex = require('./_charsStartIndex'),\n    stringToArray = require('./_stringToArray'),\n    toString = require('./toString');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      start = charsStartIndex(strSymbols, stringToArray(chars));\n\n  return castSlice(strSymbols, start).join('');\n}\n\nmodule.exports = trimStart;\n"],"names":["DashboardWidgetQuerySelectorModal","Component","renderQueries","organization","widget","selection","isMetricsData","this","props","queries","map","query","index","discoverLocation","getWidgetDiscoverUrl","Fragment","QueryContainer","Container","SearchLabel","htmlFor","t","StyledInput","value","conditions","disabled","Link","to","OpenInDiscoverButton","priority","icon","size","direction","onClick","trackAdvancedAnalyticsEvent","widget_type","displayType","render","Body","Header","closeButton","title","Input","space","Button","p","theme","border","dropShadowLight","backgroundSecondary","borderRadius","gray300","modalCss","withApi","withPageFilters","baseIndexOf","module","exports","strSymbols","chrSymbols","length","baseToString","castSlice","charsStartIndex","stringToArray","toString","reTrimStart","string","chars","guard","undefined","replace","start","join"],"sourceRoot":""}