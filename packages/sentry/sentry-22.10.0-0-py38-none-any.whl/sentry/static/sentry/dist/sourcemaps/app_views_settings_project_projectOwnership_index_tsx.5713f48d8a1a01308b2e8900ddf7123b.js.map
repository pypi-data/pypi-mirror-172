{"version":3,"file":"chunks/app_views_settings_project_projectOwnership_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./app/views/settings/project/projectOwnership/addCodeOwnerModal.tsx","webpack:///./app/views/settings/project/projectOwnership/rulesPanel.tsx","webpack:///./app/views/settings/project/projectOwnership/codeowners.tsx","webpack:///./app/views/settings/project/projectOwnership/index.tsx"],"sourcesContent":["function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import Access from 'sentry/components/acl/access';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access = ['project:write'], ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nexport default PermissionAlert;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Alert from 'sentry/components/alert';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport SelectField from 'sentry/components/forms/fields/selectField';\nimport Form from 'sentry/components/forms/form';\nimport Link from 'sentry/components/links/link';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody} from 'sentry/components/panels';\nimport {IconCheckmark, IconNot} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {\n  CodeOwner,\n  CodeownersFile,\n  Integration,\n  Organization,\n  Project,\n  RepositoryProjectPathConfig,\n} from 'sentry/types';\nimport {getIntegrationIcon} from 'sentry/utils/integrationUtil';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n  onSave?: (data: CodeOwner) => void;\n} & ModalRenderProps &\n  AsyncComponent['props'];\n\ntype State = {\n  codeMappingId: string | null;\n  codeMappings: RepositoryProjectPathConfig[];\n  codeownersFile: CodeownersFile | null;\n  error: boolean;\n  errorJSON: {raw?: string} | null;\n  integrations: Integration[];\n  isLoading: boolean;\n} & AsyncComponent['state'];\n\nclass AddCodeOwnerModal extends AsyncComponent<Props, State> {\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      codeownersFile: null,\n      codeMappingId: null,\n      isLoading: false,\n      error: false,\n      errorJSON: null,\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, project} = this.props;\n    const endpoints: ReturnType<AsyncComponent['getEndpoints']> = [\n      [\n        'codeMappings',\n        `/organizations/${organization.slug}/code-mappings/`,\n        {query: {project: project.id}},\n      ],\n      [\n        'integrations',\n        `/organizations/${organization.slug}/integrations/`,\n        {query: {features: ['codeowners']}},\n      ],\n    ];\n    return endpoints;\n  }\n\n  fetchFile = async (codeMappingId: string) => {\n    const {organization} = this.props;\n    this.setState({\n      codeMappingId,\n      codeownersFile: null,\n      error: false,\n      errorJSON: null,\n      isLoading: true,\n    });\n    try {\n      const data: CodeownersFile = await this.api.requestPromise(\n        `/organizations/${organization.slug}/code-mappings/${codeMappingId}/codeowners/`,\n        {\n          method: 'GET',\n        }\n      );\n      this.setState({codeownersFile: data, isLoading: false});\n    } catch (_err) {\n      this.setState({isLoading: false});\n    }\n  };\n\n  addFile = async () => {\n    const {organization, project} = this.props;\n    const {codeownersFile, codeMappingId, codeMappings} = this.state;\n\n    if (codeownersFile) {\n      const postData: {\n        codeMappingId: string | null;\n        raw: string;\n      } = {\n        codeMappingId,\n        raw: codeownersFile.raw,\n      };\n\n      try {\n        const data = await this.api.requestPromise(\n          `/projects/${organization.slug}/${project.slug}/codeowners/`,\n          {\n            method: 'POST',\n            data: postData,\n          }\n        );\n        const codeMapping = codeMappings.find(\n          mapping => mapping.id === codeMappingId?.toString()\n        );\n        this.handleAddedFile({...data, codeMapping});\n      } catch (err) {\n        if (err.responseJSON.raw) {\n          this.setState({error: true, errorJSON: err.responseJSON, isLoading: false});\n        } else {\n          addErrorMessage(t(Object.values(err.responseJSON).flat().join(' ')));\n        }\n      }\n    }\n  };\n\n  handleAddedFile(data: CodeOwner) {\n    this.props.onSave && this.props.onSave(data);\n    this.props.closeModal();\n  }\n\n  sourceFile(codeownersFile: CodeownersFile) {\n    return (\n      <Panel>\n        <SourceFileBody>\n          <IconCheckmark size=\"md\" isCircled color=\"green200\" />\n          {codeownersFile.filepath}\n          <Button size=\"sm\" href={codeownersFile.html_url} external>\n            {t('Preview File')}\n          </Button>\n        </SourceFileBody>\n      </Panel>\n    );\n  }\n\n  errorMessage(baseUrl) {\n    const {errorJSON, codeMappingId, codeMappings} = this.state;\n    const codeMapping = codeMappings.find(mapping => mapping.id === codeMappingId);\n    const {integrationId, provider} = codeMapping as RepositoryProjectPathConfig;\n    const errActors = errorJSON?.raw?.[0].split('\\n').map((el, i) => <p key={i}>{el}</p>);\n    return (\n      <Alert type=\"error\" showIcon>\n        {errActors}\n        {codeMapping && (\n          <p>\n            {tct(\n              'Configure [userMappingsLink:User Mappings] or [teamMappingsLink:Team Mappings] for any missing associations.',\n              {\n                userMappingsLink: (\n                  <Link\n                    to={`${baseUrl}/${provider?.key}/${integrationId}/?tab=userMappings&referrer=add-codeowners`}\n                  />\n                ),\n                teamMappingsLink: (\n                  <Link\n                    to={`${baseUrl}/${provider?.key}/${integrationId}/?tab=teamMappings&referrer=add-codeowners`}\n                  />\n                ),\n              }\n            )}\n          </p>\n        )}\n        {tct(\n          '[addAndSkip:Add and Skip Missing Associations] will add your codeowner file and skip any rules that having missing associations. You can add associations later for any skipped rules.',\n          {addAndSkip: <strong>Add and Skip Missing Associations</strong>}\n        )}\n      </Alert>\n    );\n  }\n\n  noSourceFile() {\n    const {codeMappingId, isLoading} = this.state;\n    if (isLoading) {\n      return (\n        <Container>\n          <LoadingIndicator mini />\n        </Container>\n      );\n    }\n    if (!codeMappingId) {\n      return null;\n    }\n    return (\n      <Panel>\n        <NoSourceFileBody>\n          {codeMappingId ? (\n            <Fragment>\n              <IconNot size=\"md\" color=\"red200\" />\n              {t('No codeowner file found.')}\n            </Fragment>\n          ) : null}\n        </NoSourceFileBody>\n      </Panel>\n    );\n  }\n\n  renderBody() {\n    const {Header, Body, Footer} = this.props;\n    const {codeownersFile, error, errorJSON, codeMappings, integrations} = this.state;\n    const {organization} = this.props;\n    const baseUrl = `/settings/${organization.slug}/integrations`;\n\n    return (\n      <Fragment>\n        <Header closeButton>{t('Add Code Owner File')}</Header>\n        <Body>\n          {!codeMappings.length ? (\n            !integrations.length ? (\n              <Fragment>\n                <div>\n                  {t('Install a GitHub or GitLab integration to use this feature.')}\n                </div>\n                <Container style={{paddingTop: space(2)}}>\n                  <Button type=\"button\" priority=\"primary\" size=\"sm\" to={baseUrl}>\n                    Setup Integration\n                  </Button>\n                </Container>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <div>\n                  {t(\n                    \"Configure code mapping to add your CODEOWNERS file. Select the integration you'd like to use for mapping:\"\n                  )}\n                </div>\n                <IntegrationsList>\n                  {integrations.map(integration => (\n                    <Button\n                      key={integration.id}\n                      type=\"button\"\n                      to={`${baseUrl}/${integration.provider.key}/${integration.id}/?tab=codeMappings&referrer=add-codeowners`}\n                    >\n                      {getIntegrationIcon(integration.provider.key)}\n                      <IntegrationName>{integration.name}</IntegrationName>\n                    </Button>\n                  ))}\n                </IntegrationsList>\n              </Fragment>\n            )\n          ) : null}\n          {codeMappings.length > 0 && (\n            <Form\n              apiMethod=\"POST\"\n              apiEndpoint=\"/code-mappings/\"\n              hideFooter\n              initialData={{}}\n            >\n              <StyledSelectField\n                name=\"codeMappingId\"\n                label={t('Apply an existing code mapping')}\n                options={codeMappings.map((cm: RepositoryProjectPathConfig) => ({\n                  value: cm.id,\n                  label: cm.repoName,\n                }))}\n                onChange={this.fetchFile}\n                required\n                inline={false}\n                flexibleControlStateSize\n                stacked\n              />\n\n              <FileResult>\n                {codeownersFile ? this.sourceFile(codeownersFile) : this.noSourceFile()}\n                {error && errorJSON && this.errorMessage(baseUrl)}\n              </FileResult>\n            </Form>\n          )}\n        </Body>\n        <Footer>\n          <Button\n            disabled={codeownersFile ? false : true}\n            aria-label={t('Add File')}\n            priority=\"primary\"\n            onClick={this.addFile}\n          >\n            {t('Add File')}\n          </Button>\n        </Footer>\n      </Fragment>\n    );\n  }\n}\n\nexport default AddCodeOwnerModal;\nexport {AddCodeOwnerModal};\n\nconst StyledSelectField = styled(SelectField)`\n  border-bottom: None;\n  padding-right: 16px;\n`;\nconst FileResult = styled('div')`\n  width: inherit;\n`;\nconst NoSourceFileBody = styled(PanelBody)`\n  display: grid;\n  padding: 12px;\n  grid-template-columns: 30px 1fr;\n  align-items: center;\n`;\nconst SourceFileBody = styled(PanelBody)`\n  display: grid;\n  padding: 12px;\n  grid-template-columns: 30px 1fr 100px;\n  align-items: center;\n`;\n\nconst IntegrationsList = styled('div')`\n  display: grid;\n  gap: ${space(1)};\n  justify-items: center;\n  margin-top: ${space(2)};\n`;\n\nconst IntegrationName = styled('p')`\n  padding-left: 10px;\n`;\n\nconst Container = styled('div')`\n  display: flex;\n  justify-content: center;\n`;\n","import styled from '@emotion/styled';\n\nimport TextArea from 'sentry/components/forms/controls/textarea';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconGithub, IconGitlab, IconSentry} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  'data-test-id': string;\n  dateUpdated: string | null;\n  raw: string;\n  type: 'codeowners' | 'issueowners';\n  controls?: React.ReactNode[];\n  placeholder?: string;\n  provider?: string;\n  repoName?: string;\n};\n\nfunction RulesPanel({\n  raw,\n  dateUpdated,\n  provider,\n  repoName,\n  type,\n  placeholder,\n  controls,\n  ['data-test-id']: dataTestId,\n}: Props) {\n  function renderIcon() {\n    switch (provider ?? '') {\n      case 'github':\n        return <IconGithub size=\"md\" />;\n      case 'gitlab':\n        return <IconGitlab size=\"md\" />;\n      default:\n        return <IconSentry size=\"md\" />;\n    }\n  }\n\n  function renderTitle() {\n    switch (type) {\n      case 'codeowners':\n        return 'CODEOWNERS';\n      case 'issueowners':\n        return 'Ownership Rules';\n      default:\n        return null;\n    }\n  }\n\n  return (\n    <Panel data-test-id={dataTestId}>\n      <PanelHeader>\n        <Container>\n          {renderIcon()}\n          <Title>{renderTitle()}</Title>\n          {repoName && <Repository>{`- ${repoName}`}</Repository>}\n        </Container>\n        <Container>\n          {dateUpdated && (\n            <SyncDate>\n              {t('Last %s', type === 'codeowners' ? t('synced') : t('edited'))}{' '}\n              <TimeSince date={dateUpdated} />\n            </SyncDate>\n          )}\n          <Controls>{controls}</Controls>\n        </Container>\n      </PanelHeader>\n\n      <PanelBody>\n        <InnerPanelBody>\n          <StyledTextArea\n            monospace\n            readOnly\n            value={raw}\n            spellCheck=\"false\"\n            autoComplete=\"off\"\n            autoCorrect=\"off\"\n            autoCapitalize=\"off\"\n            placeholder={placeholder}\n          />\n        </InnerPanelBody>\n      </PanelBody>\n    </Panel>\n  );\n}\n\nexport default RulesPanel;\n\nconst Container = styled('div')`\n  display: flex;\n  align-items: center;\n  text-transform: none;\n`;\n\nconst Title = styled('div')`\n  padding: 0 ${space(0.5)} 0 ${space(1)};\n  font-size: initial;\n`;\n\nconst Repository = styled('div')``;\n\nconst InnerPanelBody = styled(PanelBody)`\n  height: auto;\n`;\n\nconst StyledTextArea = styled(TextArea)`\n  height: 350px !important;\n  overflow: auto;\n  outline: 0;\n  width: 100%;\n  resize: none;\n  margin: 0;\n  word-break: break-all;\n  white-space: pre-wrap;\n  line-height: ${space(3)};\n  border: none;\n  box-shadow: none;\n  color: transparent;\n  text-shadow: 0 0 0 #9386a0;\n\n  &:hover,\n  &:focus,\n  &:active {\n    border: none;\n    box-shadow: none;\n  }\n`;\n\nconst SyncDate = styled('div')`\n  padding: 0 ${space(1)};\n  font-weight: normal;\n`;\nconst Controls = styled('div')`\n  display: flex;\n  align-items: center;\n  gap: ${space(1)};\n`;\n","import {Component, Fragment} from 'react';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport {IconDelete, IconSync} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {CodeOwner, CodeownersFile, Organization, Project} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport RulesPanel from 'sentry/views/settings/project/projectOwnership/rulesPanel';\n\ntype Props = {\n  api: Client;\n  codeowners: CodeOwner[];\n  disabled: boolean;\n  onDelete: (data: CodeOwner) => void;\n  onUpdate: (data: CodeOwner) => void;\n  organization: Organization;\n  project: Project;\n};\n\nclass CodeOwnersPanel extends Component<Props> {\n  handleDelete = async (codeowner: CodeOwner) => {\n    const {api, organization, project, onDelete} = this.props;\n    const endpoint = `/api/0/projects/${organization.slug}/${project.slug}/codeowners/${codeowner.id}/`;\n    try {\n      await api.requestPromise(endpoint, {\n        method: 'DELETE',\n      });\n      onDelete(codeowner);\n      addSuccessMessage(t('Deletion successful'));\n    } catch {\n      // no 4xx errors should happen on delete\n      addErrorMessage(t('An error occurred'));\n    }\n  };\n\n  handleSync = async (codeowner: CodeOwner) => {\n    const {api, organization, project, onUpdate} = this.props;\n    try {\n      const codeownerFile: CodeownersFile = await api.requestPromise(\n        `/organizations/${organization.slug}/code-mappings/${codeowner.codeMappingId}/codeowners/`,\n        {\n          method: 'GET',\n        }\n      );\n\n      const data = await api.requestPromise(\n        `/projects/${organization.slug}/${project.slug}/codeowners/${codeowner.id}/`,\n        {\n          method: 'PUT',\n          data: {raw: codeownerFile.raw},\n        }\n      );\n      onUpdate({...codeowner, ...data});\n      addSuccessMessage(t('CODEOWNERS file sync successful.'));\n    } catch (_err) {\n      addErrorMessage(t('An error occurred trying to sync CODEOWNERS file.'));\n    }\n  };\n  render() {\n    const {codeowners, disabled} = this.props;\n    return codeowners.map(codeowner => {\n      const {dateUpdated, provider, codeMapping, ownershipSyntax} = codeowner;\n      return (\n        <Fragment key={codeowner.id}>\n          <RulesPanel\n            data-test-id=\"codeowners-panel\"\n            type=\"codeowners\"\n            raw={ownershipSyntax || ''}\n            dateUpdated={dateUpdated}\n            provider={provider}\n            repoName={codeMapping?.repoName}\n            controls={[\n              <Button\n                key=\"sync\"\n                icon={<IconSync size=\"xs\" />}\n                size=\"xs\"\n                onClick={() => this.handleSync(codeowner)}\n                disabled={disabled}\n                aria-label={t('Sync')}\n              />,\n              <Confirm\n                onConfirm={() => this.handleDelete(codeowner)}\n                message={t('Are you sure you want to remove this CODEOWNERS file?')}\n                key=\"confirm-delete\"\n                disabled={disabled}\n              >\n                <Button\n                  key=\"delete\"\n                  icon={<IconDelete size=\"xs\" />}\n                  aria-label={t('Delete')}\n                  size=\"xs\"\n                />\n              </Confirm>,\n            ]}\n          />\n        </Fragment>\n      );\n    });\n  }\n}\n\nexport default withApi(CodeOwnersPanel);\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {openEditOwnershipRules, openModal} from 'sentry/actionCreators/modal';\nimport Access from 'sentry/components/acl/access';\nimport Feature from 'sentry/components/acl/feature';\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport Form from 'sentry/components/forms/form';\nimport JsonForm from 'sentry/components/forms/jsonForm';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {t, tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {CodeOwner, IssueOwnership, Organization, Project} from 'sentry/types';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport PermissionAlert from 'sentry/views/settings/project/permissionAlert';\nimport AddCodeOwnerModal from 'sentry/views/settings/project/projectOwnership/addCodeOwnerModal';\nimport CodeOwnersPanel from 'sentry/views/settings/project/projectOwnership/codeowners';\nimport RulesPanel from 'sentry/views/settings/project/projectOwnership/rulesPanel';\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<{orgId: string; projectId: string}, {}>;\n\ntype State = {\n  codeowners?: CodeOwner[];\n  ownership?: null | IssueOwnership;\n} & AsyncView['state'];\n\nclass ProjectOwnership extends AsyncView<Props, State> {\n  getTitle() {\n    const {project} = this.props;\n    return routeTitleGen(t('Issue Owners'), project.slug, false);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, project} = this.props;\n    const endpoints: ReturnType<AsyncView['getEndpoints']> = [\n      ['ownership', `/projects/${organization.slug}/${project.slug}/ownership/`],\n    ];\n    if (organization.features.includes('integrations-codeowners')) {\n      endpoints.push([\n        'codeowners',\n        `/projects/${organization.slug}/${project.slug}/codeowners/`,\n        {query: {expand: ['codeMapping', 'ownershipSyntax']}},\n      ]);\n    }\n    return endpoints;\n  }\n\n  handleAddCodeOwner = () => {\n    openModal(modalProps => (\n      <AddCodeOwnerModal\n        {...modalProps}\n        organization={this.props.organization}\n        project={this.props.project}\n        onSave={this.handleCodeOwnerAdded}\n      />\n    ));\n  };\n\n  getPlaceholder() {\n    return `#example usage\npath:src/example/pipeline/* person@sentry.io #infra\nmodule:com.module.name.example #sdks\nurl:http://example.com/settings/* #product\ntags.sku_class:enterprise #enterprise`;\n  }\n\n  getDetail() {\n    return tct(\n      `Auto-assign issues to users and teams. To learn more, [link:read the docs].`,\n      {\n        link: (\n          <ExternalLink href=\"https://docs.sentry.io/product/error-monitoring/issue-owners/\" />\n        ),\n      }\n    );\n  }\n\n  handleOwnershipSave = (text: string | null) => {\n    this.setState(prevState => ({\n      ...(prevState.ownership\n        ? {\n            ownership: {\n              ...prevState.ownership,\n              raw: text || '',\n            },\n          }\n        : {}),\n    }));\n  };\n\n  handleCodeOwnerAdded = (data: CodeOwner) => {\n    const {codeowners} = this.state;\n    const newCodeowners = [data, ...(codeowners || [])];\n    this.setState({codeowners: newCodeowners});\n  };\n\n  handleCodeOwnerDeleted = (data: CodeOwner) => {\n    const {codeowners} = this.state;\n    const newCodeowners = (codeowners || []).filter(\n      codeowner => codeowner.id !== data.id\n    );\n    this.setState({codeowners: newCodeowners});\n  };\n\n  handleCodeOwnerUpdated = (data: CodeOwner) => {\n    const codeowners = this.state.codeowners || [];\n    const index = codeowners.findIndex(item => item.id === data.id);\n    this.setState({\n      codeowners: [...codeowners.slice(0, index), data, ...codeowners.slice(index + 1)],\n    });\n  };\n\n  renderCodeOwnerErrors = () => {\n    const {project, organization} = this.props;\n    const {codeowners} = this.state;\n\n    const errMessageComponent = (message, values, link, linkValue) => (\n      <Fragment>\n        <ErrorMessageContainer>\n          <span>{message}</span>\n          <b>{values.join(', ')}</b>\n        </ErrorMessageContainer>\n        <ErrorCtaContainer>\n          <ExternalLink href={link}>{linkValue}</ExternalLink>\n        </ErrorCtaContainer>\n      </Fragment>\n    );\n\n    const errMessageListComponent = (\n      message: string,\n      values: string[],\n      linkFunction: (s: string) => string,\n      linkValueFunction: (s: string) => string\n    ) => {\n      return (\n        <Fragment>\n          <ErrorMessageContainer>\n            <span>{message}</span>\n          </ErrorMessageContainer>\n          <ErrorMessageListContainer>\n            {values.map((value, index) => (\n              <ErrorInlineContainer key={index}>\n                <b>{value}</b>\n                <ErrorCtaContainer>\n                  <ExternalLink href={linkFunction(value)} key={index}>\n                    {linkValueFunction(value)}\n                  </ExternalLink>\n                </ErrorCtaContainer>\n              </ErrorInlineContainer>\n            ))}\n          </ErrorMessageListContainer>\n        </Fragment>\n      );\n    };\n\n    return (codeowners || [])\n      .filter(({errors}) => Object.values(errors).flat().length)\n      .map(({id, codeMapping, errors}) => {\n        const errMessage = (type, values) => {\n          switch (type) {\n            case 'missing_external_teams':\n              return errMessageComponent(\n                `The following teams do not have an association in the organization: ${organization.slug}`,\n                values,\n                `/settings/${organization.slug}/integrations/${codeMapping?.provider?.slug}/${codeMapping?.integrationId}/?tab=teamMappings`,\n                'Configure Team Mappings'\n              );\n\n            case 'missing_external_users':\n              return errMessageComponent(\n                `The following usernames do not have an association in the organization: ${organization.slug}`,\n                values,\n                `/settings/${organization.slug}/integrations/${codeMapping?.provider?.slug}/${codeMapping?.integrationId}/?tab=userMappings`,\n                'Configure User Mappings'\n              );\n\n            case 'missing_user_emails':\n              return errMessageComponent(\n                `The following emails do not have an Sentry user in the organization: ${organization.slug}`,\n                values,\n                `/settings/${organization.slug}/members/`,\n                'Invite Users'\n              );\n\n            case 'teams_without_access':\n              return errMessageListComponent(\n                `The following team do not have access to the project: ${project.slug}`,\n                values,\n                value =>\n                  `/settings/${organization.slug}/teams/${value.slice(1)}/projects/`,\n                value => `Configure ${value} Permissions`\n              );\n\n            case 'users_without_access':\n              return errMessageListComponent(\n                `The following users are not on a team that has access to the project: ${project.slug}`,\n                values,\n                email => `/settings/${organization.slug}/members/?query=${email}`,\n                _ => `Configure Member Settings`\n              );\n            default:\n              return null;\n          }\n        };\n        return (\n          <Alert\n            key={id}\n            type=\"error\"\n            showIcon\n            expand={[\n              <AlertContentContainer key=\"container\">\n                {Object.entries(errors)\n                  .filter(([_, values]) => values.length)\n                  .map(([type, values]) => (\n                    <ErrorContainer key={`${id}-${type}`}>\n                      {errMessage(type, values)}\n                    </ErrorContainer>\n                  ))}\n              </AlertContentContainer>,\n            ]}\n          >\n            {`There were ${\n              Object.values(errors).flat().length\n            } ownership issues within Sentry on the latest sync with the CODEOWNERS file`}\n          </Alert>\n        );\n      });\n  };\n  renderBody() {\n    const {project, organization} = this.props;\n    const {ownership, codeowners} = this.state;\n\n    const disabled = !organization.access.includes('project:write');\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('Issue Owners')}\n          action={\n            <Fragment>\n              <Button\n                to={{\n                  pathname: `/organizations/${organization.slug}/issues/`,\n                  query: {project: project.id},\n                }}\n                size=\"sm\"\n              >\n                {t('View Issues')}\n              </Button>\n              <Feature features={['integrations-codeowners']}>\n                <Access access={['org:integrations']}>\n                  {({hasAccess}) =>\n                    hasAccess ? (\n                      <CodeOwnerButton\n                        onClick={this.handleAddCodeOwner}\n                        size=\"sm\"\n                        priority=\"primary\"\n                        data-test-id=\"add-codeowner-button\"\n                      >\n                        {t('Add CODEOWNERS')}\n                      </CodeOwnerButton>\n                    ) : null\n                  }\n                </Access>\n              </Feature>\n            </Fragment>\n          }\n        />\n        <IssueOwnerDetails>{this.getDetail()}</IssueOwnerDetails>\n\n        <PermissionAlert />\n        {this.renderCodeOwnerErrors()}\n        {ownership && (\n          <RulesPanel\n            data-test-id=\"issueowners-panel\"\n            type=\"issueowners\"\n            raw={ownership.raw || ''}\n            dateUpdated={ownership.lastUpdated}\n            placeholder={this.getPlaceholder()}\n            controls={[\n              <Button\n                key=\"edit\"\n                size=\"xs\"\n                onClick={() =>\n                  openEditOwnershipRules({\n                    organization,\n                    project,\n                    ownership,\n                    onSave: this.handleOwnershipSave,\n                  })\n                }\n                disabled={disabled}\n              >\n                {t('Edit')}\n              </Button>,\n            ]}\n          />\n        )}\n        <Feature features={['integrations-codeowners']}>\n          <CodeOwnersPanel\n            codeowners={codeowners || []}\n            onDelete={this.handleCodeOwnerDeleted}\n            onUpdate={this.handleCodeOwnerUpdated}\n            disabled={disabled}\n            {...this.props}\n          />\n        </Feature>\n        {ownership && (\n          <Form\n            apiEndpoint={`/projects/${organization.slug}/${project.slug}/ownership/`}\n            apiMethod=\"PUT\"\n            saveOnBlur\n            initialData={{\n              fallthrough: ownership.fallthrough,\n              autoAssignment: ownership.autoAssignment,\n              codeownersAutoSync: ownership.codeownersAutoSync,\n            }}\n            hideFooter\n          >\n            <JsonForm\n              forms={[\n                {\n                  title: t('Issue Owners'),\n                  fields: [\n                    {\n                      name: 'autoAssignment',\n                      type: 'boolean',\n                      label: t('Automatically assign issues'),\n                      help: t('Assign issues when a new event matches the rules above.'),\n                      disabled,\n                    },\n                    {\n                      name: 'fallthrough',\n                      type: 'boolean',\n                      label: t(\n                        'Send alert to project members if there’s no assigned owner'\n                      ),\n                      help: t(\n                        'Alerts will be sent to all users who have access to this project.'\n                      ),\n                      disabled,\n                    },\n                    {\n                      name: 'codeownersAutoSync',\n                      type: 'boolean',\n                      label: t(`Sync changes from CODEOWNERS`),\n                      help: t(\n                        'We’ll update any changes you make to your CODEOWNERS files during a release.'\n                      ),\n                      disabled: disabled || !(this.state.codeowners || []).length,\n                    },\n                  ],\n                },\n              ]}\n            />\n          </Form>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default ProjectOwnership;\n\nconst CodeOwnerButton = styled(Button)`\n  margin-left: ${space(1)};\n`;\n\nconst AlertContentContainer = styled('div')`\n  overflow-y: auto;\n  max-height: 350px;\n`;\n\nconst ErrorContainer = styled('div')`\n  display: grid;\n  grid-template-areas: 'message cta';\n  grid-template-columns: 2fr 1fr;\n  gap: ${space(2)};\n  padding: ${space(1.5)} 0;\n`;\n\nconst ErrorInlineContainer = styled(ErrorContainer)`\n  gap: ${space(1.5)};\n  grid-template-columns: 1fr 2fr;\n  align-items: center;\n  padding: 0;\n`;\n\nconst ErrorMessageContainer = styled('div')`\n  grid-area: message;\n  display: grid;\n  gap: ${space(1.5)};\n`;\n\nconst ErrorMessageListContainer = styled('div')`\n  grid-column: message / cta-end;\n  gap: ${space(1.5)};\n`;\n\nconst ErrorCtaContainer = styled('div')`\n  grid-area: cta;\n  justify-self: flex-end;\n  text-align: right;\n  line-height: 1.5;\n`;\n\nconst IssueOwnerDetails = styled('div')`\n  padding-bottom: ${space(3)};\n`;\n"],"names":["routeName","orgSlug","withSentry","projectSlug","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","title","this","renderComponent","PermissionAlert","access","props","hasAccess","type","t","AddCodeOwnerModal","async","organization","setState","codeMappingId","codeownersFile","error","errorJSON","isLoading","data","api","requestPromise","slug","method","_err","project","codeMappings","state","postData","raw","codeMapping","find","mapping","id","toString","handleAddedFile","err","responseJSON","addErrorMessage","Object","values","flat","join","getDefaultState","super","getEndpoints","query","features","onSave","closeModal","sourceFile","SourceFileBody","size","isCircled","color","filepath","href","html_url","external","errorMessage","baseUrl","integrationId","provider","errActors","split","map","el","i","showIcon","tct","userMappingsLink","to","key","teamMappingsLink","addAndSkip","noSourceFile","Container","mini","NoSourceFileBody","Fragment","renderBody","Header","Body","Footer","integrations","closeButton","length","IntegrationsList","integration","getIntegrationIcon","IntegrationName","name","style","paddingTop","space","priority","apiMethod","apiEndpoint","hideFooter","initialData","StyledSelectField","label","options","cm","value","repoName","onChange","fetchFile","required","inline","flexibleControlStateSize","stacked","FileResult","disabled","onClick","addFile","SelectField","PanelBody","RulesPanel","dateUpdated","placeholder","controls","dataTestId","renderIcon","Title","renderTitle","Repository","SyncDate","date","Controls","InnerPanelBody","StyledTextArea","monospace","readOnly","spellCheck","autoComplete","autoCorrect","autoCapitalize","TextArea","CodeOwnersPanel","Component","onDelete","endpoint","codeowner","addSuccessMessage","onUpdate","codeownerFile","codeowners","ownershipSyntax","icon","handleSync","onConfirm","handleDelete","message","withApi","ProjectOwnership","openModal","modalProps","handleCodeOwnerAdded","text","prevState","ownership","newCodeowners","filter","index","findIndex","item","slice","errMessageComponent","link","linkValue","ErrorMessageContainer","ErrorCtaContainer","errMessageListComponent","linkFunction","linkValueFunction","ErrorMessageListContainer","ErrorInlineContainer","errors","errMessage","email","_","expand","AlertContentContainer","entries","ErrorContainer","routeTitleGen","endpoints","includes","push","getPlaceholder","getDetail","action","pathname","CodeOwnerButton","handleAddCodeOwner","IssueOwnerDetails","renderCodeOwnerErrors","lastUpdated","openEditOwnershipRules","handleOwnershipSave","handleCodeOwnerDeleted","handleCodeOwnerUpdated","saveOnBlur","fallthrough","autoAssignment","codeownersAutoSync","forms","fields","help","Button"],"sourceRoot":""}