{"version":3,"file":"extra-loader-b8744c62.js","sources":["../../../src/js/uml.js","../../../src/js/extra-loader.js","../../../src/js/arithmatex.js"],"sourcesContent":["/* Notes (as of Mermaid 8.7.0):\n * - Gantt: width is always relative to the parent, if you have a small parent, the chart will be squashed.\n *   Can't help it.\n * - Journey: Suffers from the same issues that Gantt does.\n * - Pie: These charts have no default height or width. Good luck pinning them down to a reasonable size.\n * - Git: The render portion is agnostic to the size of the parent element. But padding of the SVG is relative\n *   to the parent element. You will never find a happy size.\n */\n\n/**\n * Targets special code or div blocks and converts them to UML.\n * @param {string} className is the name of the class to target.\n * @return {void}\n */\nexport default className => {\n\n  // Custom element to encapsulate Mermaid content.\n  class MermaidDiv extends HTMLElement {\n\n    /**\n    * Creates a special Mermaid div shadow DOM.\n    * Works around issues of shared IDs.\n    * @return {void}\n    */\n    constructor() {\n      super()\n\n      // Create the Shadow DOM and attach style\n      const shadow = this.attachShadow({mode: \"open\"})\n      const style = document.createElement(\"style\")\n      style.textContent = `\n      :host {\n        display: block;\n        line-height: initial;\n        font-size: 16px;\n      }\n      div.diagram {\n        margin: 0;\n        overflow: visible;\n      }`\n      shadow.appendChild(style)\n    }\n  }\n\n  if (typeof customElements.get(\"diagram-div\") === \"undefined\") {\n    customElements.define(\"diagram-div\", MermaidDiv)\n  }\n\n  const getFromCode = parent => {\n    // Handles <pre><code> text extraction.\n    let text = \"\"\n    for (let j = 0; j < parent.childNodes.length; j++) {\n      const subEl = parent.childNodes[j]\n      if (subEl.tagName.toLowerCase() === \"code\") {\n        for (let k = 0; k < subEl.childNodes.length; k++) {\n          const child = subEl.childNodes[k]\n          const whitespace = /^\\s*$/\n          if (child.nodeName === \"#text\" && !(whitespace.test(child.nodeValue))) {\n            text = child.nodeValue\n            break\n          }\n        }\n      }\n    }\n    return text\n  }\n\n  // We use this to determine if we want the dark or light theme.\n  // This is specific for our MkDocs Material environment.\n  // You should load your configs based on your own environment's needs.\n  const defaultConfig = {\n    startOnLoad: false,\n    theme: \"default\",\n    flowchart: {\n      htmlLabels: false\n    },\n    er: {\n      useMaxWidth: false\n    },\n    sequence: {\n      useMaxWidth: false,\n      noteFontWeight: \"14px\",\n      actorFontSize: \"14px\",\n      messageFontSize: \"16px\"\n    }\n  }\n  mermaid.mermaidAPI.globalReset()\n  // Non Material themes should just use \"default\"\n  let scheme = null\n  try {\n    scheme = document.querySelector(\"[data-md-color-scheme]\").getAttribute(\"data-md-color-scheme\")\n  } catch (err) {\n    scheme = \"default\"\n  }\n  const config = (typeof mermaidConfig === \"undefined\") ?\n    defaultConfig :\n    mermaidConfig[scheme] || (mermaidConfig.default || defaultConfig)\n  mermaid.initialize(config)\n\n  // Find all of our Mermaid sources and render them.\n  const blocks = document.querySelectorAll(`pre.${className}, diagram-div`)\n  const surrogate = document.querySelector(\"html body\")\n  for (let i = 0; i < blocks.length; i++) {\n    const block = blocks[i]\n    const parentEl = (block.tagName.toLowerCase() === \"diagram-div\") ?\n      block.shadowRoot.querySelector(`pre.${className}`) :\n      block\n\n    // Create a temporary element with the typeset and size we desire.\n    // Insert it at the end of our parent to render the SVG.\n    const temp = document.createElement(\"div\")\n    temp.style.visibility = \"hidden\"\n    temp.style.display = \"display\"\n    temp.style.padding = \"0\"\n    temp.style.margin = \"0\"\n    temp.style.lineHeight = \"initial\"\n    temp.style.fontSize = \"16px\"\n    surrogate.appendChild(temp)\n\n    try {\n      mermaid.mermaidAPI.render(\n        `_diagram_${i}`,\n        getFromCode(parentEl),\n        content => {\n          const el = document.createElement(\"div\")\n          el.className = className\n          el.innerHTML = content\n\n          // Insert the render where we want it and remove the original text source.\n          // Mermaid will clean up the temporary element.\n          const shadow = document.createElement(\"diagram-div\")\n          shadow.shadowRoot.appendChild(el)\n          block.parentNode.insertBefore(shadow, block)\n          parentEl.style.display = \"none\"\n          shadow.shadowRoot.appendChild(parentEl)\n          if (parentEl !== block) {\n            block.parentNode.removeChild(block)\n          }\n        },\n        temp\n      )\n    } catch (err) {} // eslint-disable-line no-empty\n\n    if (surrogate.contains(temp)) {\n      surrogate.removeChild(temp)\n    }\n  }\n}\n","import uml from \"./uml\"\nimport arithmatex from \"./arithmatex\"\n\n// Main function\n(() => {\n  let umlPromise = Promise.resolve()\n  let mathPromise = Promise.resolve()\n\n  const observer = new MutationObserver(mutations => {\n    mutations.forEach(mutation => {\n      if (mutation.type === \"attributes\") {\n        let scheme = mutation.target.getAttribute(\"data-md-color-scheme\")\n        if (!scheme) {\n          scheme = \"default\"\n        }\n        localStorage.setItem(\"data-md-color-scheme\", scheme)\n        if (typeof mermaid !== \"undefined\") {\n          uml(\"diagram\")\n        }\n      }\n    })\n  })\n\n  const main = () => {\n    observer.observe(document.querySelector(\"body\"), {attributeFilter: [\"data-md-color-scheme\"]})\n\n    if (typeof mermaid !== \"undefined\") {\n      umlPromise = umlPromise.then(() => {\n        uml(\"diagram\")\n      }).catch(err => {\n        console.log(`UML loading failed...${err}`) // eslint-disable-line no-console\n      })\n    }\n\n    if (typeof katex !== \"undefined\") {\n      mathPromise = mathPromise.then(() => {\n        arithmatex(\"arithmatex\", \"katex\")\n      }).catch(err => {\n        console.log(`Math loading failed...${err}`) // eslint-disable-line no-console\n      })\n    } else if (typeof MathJax !== \"undefined\" && 'typesetPromise' in MathJax) {\n      mathPromise = mathPromise.then(() => {\n        arithmatex(\"arithmatex\", \"mathjax\")\n      }).catch(err => {\n        console.log(`Math loading failed...${err}`) // eslint-disable-line no-console\n      })\n    }\n  }\n\n  if (window.document$) {\n    // Material specific hook\n    window.document$.subscribe(main)\n  } else {\n    // Normal non-Material specific hook\n    document.addEventListener(\"DOMContentLoaded\", main)\n  }\n})()\n","export default (className, mode) => {\n  if (mode === 'katex') {\n    const maths = document.querySelectorAll(`.${className}`)\n\n    for (let i = 0; i < maths.length; i++) {\n      const tex = maths[i].textContent || maths[i].innerText\n\n      if (tex.startsWith('\\\\(') && tex.endsWith('\\\\)')) {\n        katex.render(tex.slice(2, -2), maths[i], {'displayMode': false})\n      } else if (tex.startsWith('\\\\[') && tex.endsWith('\\\\]')) {\n        katex.render(tex.slice(2, -2), maths[i], {'displayMode': true})\n      }\n    }\n  } else if (mode === 'mathjax') {\n    MathJax.typesetPromise()\n  }\n}\n"],"names":["umlPromise","mathPromise","observer","main","uml","className","MermaidDiv","_HTMLElement","_inherits","_super","_this","_classCallCheck","this","shadow","call","attachShadow","mode","style","document","createElement","textContent","appendChild","_wrapNativeSuper","HTMLElement","customElements","get","define","defaultConfig","startOnLoad","theme","flowchart","htmlLabels","er","useMaxWidth","sequence","noteFontWeight","actorFontSize","messageFontSize","mermaid","mermaidAPI","globalReset","scheme","querySelector","getAttribute","err","config","mermaidConfig","initialize","blocks","querySelectorAll","concat","surrogate","_loop","i","block","parentEl","tagName","toLowerCase","shadowRoot","temp","visibility","display","padding","margin","lineHeight","fontSize","render","parent","text","j","childNodes","length","subEl","k","child","nodeName","test","nodeValue","getFromCode","content","el","innerHTML","parentNode","insertBefore","removeChild","contains","arithmatex","maths","tex","innerText","startsWith","endsWith","katex","slice","displayMode","MathJax","typesetPromise","Promise","resolve","MutationObserver","mutations","forEach","mutation","type","target","localStorage","setItem","observe","attributeFilter","then","console","log","window","document$","subscribe","addEventListener"],"mappings":"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"}