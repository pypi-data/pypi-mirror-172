{"version":3,"file":"mod-tree-dev.js","names":["$","MyAMS","tree","switchTreeNode","evt","removeChildNodes","nodeId","each","idx","elt","row","data","dtTable","remove","draw","node","currentTarget","switcher","tr","parents","first","table","DataTable","tooltip","hasClass","html","removeClass","location","treeNodesTarget","sourceName","require","then","ajax","post","can_sort","is","result","length","newRow","add","core","initContent","addClass","switchTree","th","tableID","filter","target","deleteElement","form","options","console","debug","node_id","sortTree","details","amsReorderUrl","amsReorderSource","rowID","rowParentID","parent","prev","parentID","action","exists","localTarget","getFunctionByName","call","dnd_table","post_data","startsWith","window","protocol","amsLocation","postData","child","order","JSON","stringify","listattr","removeRow","removeChildRows","childs","childRow","childID","attr","status","handleJSON","oldRow","resultRow","setTimeout","removeData","env","bundle","config","modules","push"],"sources":["mod-tree.js"],"sourcesContent":["/* global MyAMS */\n/**\n * MyAMS tree management\n */\n\nconst $ = MyAMS.$;\n\n\nexport const tree = {\n\n\t/**\n\t * Open/close tree node inside a table\n\t */\n\tswitchTreeNode: (evt) => {\n\n\t\tconst removeChildNodes = (nodeId) => {\n\t\t\t$(`tr[data-ams-tree-node-parent-id=\"${nodeId}\"]`).each((idx, elt) => {\n\t\t\t\tconst row = $(elt);\n\t\t\t\tremoveChildNodes(row.data('ams-tree-node-id'));\n\t\t\t\tdtTable.row(row).remove().draw();\n\t\t\t});\n\t\t}\n\n\t\tconst\n\t\t\tnode = $(evt.currentTarget),\n\t\t\tswitcher = $('.switcher', node),\n\t\t\ttr = node.parents('tr').first(),\n\t\t\ttable = tr.parents('table').first(),\n\t\t\tdtTable = table.DataTable();\n\t\tnode.tooltip('hide');\n\t\tif (switcher.hasClass('expanded')) {\n\t\t\tremoveChildNodes(tr.data('ams-tree-node-id'));\n\t\t\tswitcher.html('<i class=\"far fa-plus-square\"></i>')\n\t\t\t\t.removeClass('expanded');\n\t\t} else {\n\t\t\tconst\n\t\t\t\tlocation = tr.data('ams-location') || table.data('ams-location') || '',\n\t\t\t\ttreeNodesTarget = tr.data('ams-tree-nodes-target') ||\n\t\t\t\t\ttable.data('ams-tree-nodes-target') || 'get-tree-nodes.json',\n\t\t\t\tsourceName = tr.data('ams-element-name');\n\t\t\tswitcher.html('<i class=\"fas fa-spinner fa-spin\"></i>');\n\t\t\tMyAMS.require('ajax').then(() => {\n\t\t\t\tMyAMS.ajax.post(`${location}/${sourceName}/${treeNodesTarget}`, {\n\t\t\t\t\tcan_sort: !$('td.sorter', tr).is(':empty')\n\t\t\t\t}).then((result) => {\n\t\t\t\t\tif (result.length > 0) {\n\t\t\t\t\t\tlet newRow;\n\t\t\t\t\t\tfor (const row of result) {\n\t\t\t\t\t\t\tnewRow = $(row);\n\t\t\t\t\t\t\tdtTable.row.add(newRow).draw();\n\t\t\t\t\t\t\tMyAMS.core.initContent(newRow).then();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tswitcher.html('<i class=\"far fa-minus-square\"></i>')\n\t\t\t\t\t\t.addClass('expanded');\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t},\n\n\n\t/**\n\t * Open close all tree nodes\n\t */\n\tswitchTree: (evt) => {\n\t\tconst\n\t\t\tnode = $(evt.currentTarget),\n\t\t\tswitcher = $('.switcher', node),\n\t\t\tth = node.parents('th'),\n\t\t\ttable = th.parents('table').first(),\n\t\t\ttableID = table.data('ams-tree-node-id'),\n\t\t\tdtTable = table.DataTable();\n\t\tnode.tooltip('hide');\n\t\tif (switcher.hasClass('expanded')) {\n\t\t\t$('tr[data-ams-tree-node-parent-id]').filter(`tr[data-ams-tree-node-parent-id!=\"${tableID}\"]`).each((idx, elt) => {\n\t\t\t\tdtTable.row(elt).remove().draw();\n\t\t\t});\n\t\t\t$('.switcher', table).each((idx, elt) => {\n\t\t\t\t$(elt).html('<i class=\"far fa-plus-square\"></i>')\n\t\t\t\t\t.removeClass('expanded');\n\t\t\t});\n\t\t} else {\n\t\t\tconst\n\t\t\t\tlocation = table.data('ams-location') || '',\n\t\t\t\ttarget = table.data('ams-tree-nodes-target') || 'get-tree.json',\n\t\t\t\ttr = $('tbody tr', table.first());\n\t\t\tswitcher.html('<i class=\"fas fa-spinner fa-spin\"></i>');\n\t\t\tMyAMS.require('ajax').then(() => {\n\t\t\t\tMyAMS.ajax.post(`${location}/${target}`, {\n\t\t\t\t\tcan_sort: !$('td.sorter', tr).is(':empty')\n\t\t\t\t}).then((result) => {\n\t\t\t\t\t$(`tr[data-ams-tree-node-id]`, table).each((idx, elt) => {\n\t\t\t\t\t\tdtTable.row(elt).remove().draw();\n\t\t\t\t\t});\n\t\t\t\t\t$(result).each((idx, elt) => {\n\t\t\t\t\t\tconst newRow = $(elt);\n\t\t\t\t\t\tdtTable.row.add(newRow).draw();\n\t\t\t\t\t});\n\t\t\t\t\tMyAMS.core.initContent(table).then();\n\t\t\t\t\tswitcher.html('<i class=\"far fa-minus-square\"></i>')\n\t\t\t\t\t\t.addClass('expanded');\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t},\n\n\n\t/**\n\t * Custom tree element delete callback\n\t *\n\t * @param form: source form, which can be null if callback wasn't triggered from a form\n\t * @param options: callback options\n\t */\n\tdeleteElement: (form, options) => {\n\t\tconsole.debug(options);\n\t\tconst nodeId = options.node_id;\n\t\tif (nodeId) {\n\t\t\t$(`tr[data-ams-tree-node-parent-id=\"${nodeId}\"]`).each((idx, elt) => {\n\t\t\t\tconst\n\t\t\t\t\ttable = $(elt).parents('table'),\n\t\t\t\t\tdtTable  = table.DataTable();\n\t\t\t\tdtTable.row(elt).remove().draw();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Sort and re-parent tree elements\n\t */\n\tsortTree: (evt, details) => {\n\t\tconst\n\t\t\ttable = $(evt.target),\n\t\t\tdtTable = table.DataTable(),\n\t\t\tdata = $(table).data();\n\t\tlet target = data.amsReorderUrl;\n\t\tif (target) {\n\t\t\t// Disable row click handler\n\t\t\tconst row = $(data.amsReorderSource.node);\n\t\t\trow.data('ams-disabled-handlers', 'click');\n\t\t\ttry {\n\t\t\t\t// Get root ID\n\t\t\t\tconst tableID = row.parents('table').first().data('ams-tree-node-id');\n\t\t\t\t// Get moved row ID\n\t\t\t\tconst rowID = row.data('ams-tree-node-id');\n\t\t\t\tconst rowParentID = row.data('ams-tree-node-parent-id');\n\t\t\t\t// Get new parent ID\n\t\t\t\tconst parent = row.prev('tr');\n\t\t\t\tlet parentID,\n\t\t\t\t\tswitcher,\n\t\t\t\t\taction;\n\t\t\t\tif (parent.exists()) {\n\t\t\t\t\t// Move below an existing row\n\t\t\t\t\tparentID = parent.data('ams-tree-node-id');\n\t\t\t\t\t// Check switcher state\n\t\t\t\t\tswitcher = $('.switch', parent);\n\t\t\t\t\tif (switcher.hasClass('minus')) {\n\t\t\t\t\t\t// Opened folder: move as child\n\t\t\t\t\t\tif (rowParentID === parentID) {\n\t\t\t\t\t\t\t// Don't change parent\n\t\t\t\t\t\t\taction = 'reorder';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Change parent\n\t\t\t\t\t\t\taction = 'reparent';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Closed folder or simple item: move as sibling\n\t\t\t\t\t\tparentID = parent.data('ams-tree-node-parent-id');\n\t\t\t\t\t\tif (rowParentID === parentID) {\n\t\t\t\t\t\t\t// Don't change parent\n\t\t\t\t\t\t\taction = 'reorder';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Change parent\n\t\t\t\t\t\t\taction = 'reparent';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Move to site root\n\t\t\t\t\tparentID = tableID;\n\t\t\t\t\tswitcher = null;\n\t\t\t\t\tif (rowParentID === parentID) {\n\t\t\t\t\t\t// Already child of site root\n\t\t\t\t\t\taction = 'reorder';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Move from inner folder to site root\n\t\t\t\t\t\taction = 'reparent';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Call ordering target\n\t\t\t\tconst localTarget = MyAMS.core.getFunctionByName(target);\n\t\t\t\tif (typeof localTarget === 'function') {\n\t\t\t\t\tlocalTarget.call(table, dnd_table, post_data);\n\t\t\t\t} else {\n\t\t\t\t\tif (!target.startsWith(window.location.protocol)) {\n\t\t\t\t\t\tconst location = data.amsLocation;\n\t\t\t\t\t\tif (location) {\n\t\t\t\t\t\t\ttarget = `${location}/${target}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst\n\t\t\t\t\t\tpostData = {\n\t\t\t\t\t\t\taction: action,\n\t\t\t\t\t\t\tchild: rowID,\n\t\t\t\t\t\t\tparent: parentID,\n\t\t\t\t\t\t\torder: JSON.stringify($('tr[data-ams-tree-node-id]').listattr('data-ams-tree-node-id')),\n\t\t\t\t\t\t\tcan_sort: !$('td.sorter', row).is(':empty')\n\t\t\t\t\t\t};\n\t\t\t\t\tMyAMS.require('ajax').then(() => {\n\t\t\t\t\t\tMyAMS.ajax.post(target, postData).then((result) => {\n\n\t\t\t\t\t\t\tconst removeRow = (rowID) => {\n\t\t\t\t\t\t\t\tconst row = $(`tr[data-ams-tree-node-id=\"${rowID}\"]`);\n\t\t\t\t\t\t\t\tdtTable.row(row).remove().draw();\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tconst removeChildRows = (rowID) => {\n\t\t\t\t\t\t\t\tconst childs = $(`tr[data-ams-tree-node-parent-id=\"${rowID}\"]`);\n\t\t\t\t\t\t\t\tchilds.each((idx, elt) => {\n\t\t\t\t\t\t\t\t\tconst\n\t\t\t\t\t\t\t\t\t\tchildRow = $(elt),\n\t\t\t\t\t\t\t\t\t\tchildID = childRow.attr('data-ams-tree-node-id');\n\t\t\t\t\t\t\t\t\tremoveChildRows(childID);\n\t\t\t\t\t\t\t\t\tdtTable.row(childRow).remove().draw();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tif (result.status) {\n\t\t\t\t\t\t\t\tMyAMS.ajax.handleJSON(result);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Remove parent row if changed parent\n\t\t\t\t\t\t\t\tif (postData.action === 'reparent') {\n\t\t\t\t\t\t\t\t\tremoveRow(parentID);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Remove moved row children\n\t\t\t\t\t\t\t\tremoveChildRows(parentID);\n\t\t\t\t\t\t\t\tremoveChildRows(rowID);\n\t\t\t\t\t\t\t\tdtTable.row(row).remove().draw();\n\t\t\t\t\t\t\t\tlet newRow,\n\t\t\t\t\t\t\t\t\toldRow;\n\t\t\t\t\t\t\t\tfor (const resultRow of result) {\n\t\t\t\t\t\t\t\t\tnewRow = $(resultRow);\n\t\t\t\t\t\t\t\t\toldRow = $(`tr[id=\"${newRow.attr('id')}\"]`);\n\t\t\t\t\t\t\t\t\tdtTable.row(oldRow).remove().draw();\n\t\t\t\t\t\t\t\t\tdtTable.row.add(newRow).draw();\n\t\t\t\t\t\t\t\t\tMyAMS.core.initContent(newRow).then();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\t// Restore row click handler\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t$(row).removeData('ams-disabled-handlers');\n\t\t\t\t}, 50);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n};\n\n\n/**\n * Global module initialization\n */\nif (window.MyAMS) {\n\tif (MyAMS.env.bundle) {\n\t\tMyAMS.config.modules.push('tree');\n\t} else {\n\t\tMyAMS.tree = tree;\n\t\tconsole.debug(\"MyAMS: tree module loaded...\");\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;EAAA;;EACA;AACA;AACA;EAEA,MAAMA,CAAC,GAAGC,KAAK,CAACD,CAAhB;EAGO,MAAME,IAAI,GAAG;IAEnB;AACD;AACA;IACCC,cAAc,EAAGC,GAAD,IAAS;MAExB,MAAMC,gBAAgB,GAAIC,MAAD,IAAY;QACpCN,CAAC,CAAE,oCAAmCM,MAAO,IAA5C,CAAD,CAAkDC,IAAlD,CAAuD,CAACC,GAAD,EAAMC,GAAN,KAAc;UACpE,MAAMC,GAAG,GAAGV,CAAC,CAACS,GAAD,CAAb;UACAJ,gBAAgB,CAACK,GAAG,CAACC,IAAJ,CAAS,kBAAT,CAAD,CAAhB;UACAC,OAAO,CAACF,GAAR,CAAYA,GAAZ,EAAiBG,MAAjB,GAA0BC,IAA1B;QACA,CAJD;MAKA,CAND;;MAQA,MACCC,IAAI,GAAGf,CAAC,CAACI,GAAG,CAACY,aAAL,CADT;MAAA,MAECC,QAAQ,GAAGjB,CAAC,CAAC,WAAD,EAAce,IAAd,CAFb;MAAA,MAGCG,EAAE,GAAGH,IAAI,CAACI,OAAL,CAAa,IAAb,EAAmBC,KAAnB,EAHN;MAAA,MAICC,KAAK,GAAGH,EAAE,CAACC,OAAH,CAAW,OAAX,EAAoBC,KAApB,EAJT;MAAA,MAKCR,OAAO,GAAGS,KAAK,CAACC,SAAN,EALX;MAMAP,IAAI,CAACQ,OAAL,CAAa,MAAb;;MACA,IAAIN,QAAQ,CAACO,QAAT,CAAkB,UAAlB,CAAJ,EAAmC;QAClCnB,gBAAgB,CAACa,EAAE,CAACP,IAAH,CAAQ,kBAAR,CAAD,CAAhB;QACAM,QAAQ,CAACQ,IAAT,CAAc,oCAAd,EACEC,WADF,CACc,UADd;MAEA,CAJD,MAIO;QACN,MACCC,QAAQ,GAAGT,EAAE,CAACP,IAAH,CAAQ,cAAR,KAA2BU,KAAK,CAACV,IAAN,CAAW,cAAX,CAA3B,IAAyD,EADrE;QAAA,MAECiB,eAAe,GAAGV,EAAE,CAACP,IAAH,CAAQ,uBAAR,KACjBU,KAAK,CAACV,IAAN,CAAW,uBAAX,CADiB,IACsB,qBAHzC;QAAA,MAICkB,UAAU,GAAGX,EAAE,CAACP,IAAH,CAAQ,kBAAR,CAJd;QAKAM,QAAQ,CAACQ,IAAT,CAAc,wCAAd;;QACAxB,KAAK,CAAC6B,OAAN,CAAc,MAAd,EAAsBC,IAAtB,CAA2B,MAAM;UAChC9B,KAAK,CAAC+B,IAAN,CAAWC,IAAX,CAAiB,GAAEN,QAAS,IAAGE,UAAW,IAAGD,eAAgB,EAA7D,EAAgE;YAC/DM,QAAQ,EAAE,CAAClC,CAAC,CAAC,WAAD,EAAckB,EAAd,CAAD,CAAmBiB,EAAnB,CAAsB,QAAtB;UADoD,CAAhE,EAEGJ,IAFH,CAESK,MAAD,IAAY;YACnB,IAAIA,MAAM,CAACC,MAAP,GAAgB,CAApB,EAAuB;cACtB,IAAIC,MAAJ;;cACA,KAAK,MAAM5B,GAAX,IAAkB0B,MAAlB,EAA0B;gBACzBE,MAAM,GAAGtC,CAAC,CAACU,GAAD,CAAV;gBACAE,OAAO,CAACF,GAAR,CAAY6B,GAAZ,CAAgBD,MAAhB,EAAwBxB,IAAxB;gBACAb,KAAK,CAACuC,IAAN,CAAWC,WAAX,CAAuBH,MAAvB,EAA+BP,IAA/B;cACA;YACD;;YACDd,QAAQ,CAACQ,IAAT,CAAc,qCAAd,EACEiB,QADF,CACW,UADX;UAEA,CAbD;QAcA,CAfD;MAgBA;IACD,CAlDkB;;IAqDnB;AACD;AACA;IACCC,UAAU,EAAGvC,GAAD,IAAS;MACpB,MACCW,IAAI,GAAGf,CAAC,CAACI,GAAG,CAACY,aAAL,CADT;MAAA,MAECC,QAAQ,GAAGjB,CAAC,CAAC,WAAD,EAAce,IAAd,CAFb;MAAA,MAGC6B,EAAE,GAAG7B,IAAI,CAACI,OAAL,CAAa,IAAb,CAHN;MAAA,MAICE,KAAK,GAAGuB,EAAE,CAACzB,OAAH,CAAW,OAAX,EAAoBC,KAApB,EAJT;MAAA,MAKCyB,OAAO,GAAGxB,KAAK,CAACV,IAAN,CAAW,kBAAX,CALX;MAAA,MAMCC,OAAO,GAAGS,KAAK,CAACC,SAAN,EANX;MAOAP,IAAI,CAACQ,OAAL,CAAa,MAAb;;MACA,IAAIN,QAAQ,CAACO,QAAT,CAAkB,UAAlB,CAAJ,EAAmC;QAClCxB,CAAC,CAAC,kCAAD,CAAD,CAAsC8C,MAAtC,CAA8C,qCAAoCD,OAAQ,IAA1F,EAA+FtC,IAA/F,CAAoG,CAACC,GAAD,EAAMC,GAAN,KAAc;UACjHG,OAAO,CAACF,GAAR,CAAYD,GAAZ,EAAiBI,MAAjB,GAA0BC,IAA1B;QACA,CAFD;QAGAd,CAAC,CAAC,WAAD,EAAcqB,KAAd,CAAD,CAAsBd,IAAtB,CAA2B,CAACC,GAAD,EAAMC,GAAN,KAAc;UACxCT,CAAC,CAACS,GAAD,CAAD,CAAOgB,IAAP,CAAY,oCAAZ,EACEC,WADF,CACc,UADd;QAEA,CAHD;MAIA,CARD,MAQO;QACN,MACCC,QAAQ,GAAGN,KAAK,CAACV,IAAN,CAAW,cAAX,KAA8B,EAD1C;QAAA,MAECoC,MAAM,GAAG1B,KAAK,CAACV,IAAN,CAAW,uBAAX,KAAuC,eAFjD;QAAA,MAGCO,EAAE,GAAGlB,CAAC,CAAC,UAAD,EAAaqB,KAAK,CAACD,KAAN,EAAb,CAHP;QAIAH,QAAQ,CAACQ,IAAT,CAAc,wCAAd;;QACAxB,KAAK,CAAC6B,OAAN,CAAc,MAAd,EAAsBC,IAAtB,CAA2B,MAAM;UAChC9B,KAAK,CAAC+B,IAAN,CAAWC,IAAX,CAAiB,GAAEN,QAAS,IAAGoB,MAAO,EAAtC,EAAyC;YACxCb,QAAQ,EAAE,CAAClC,CAAC,CAAC,WAAD,EAAckB,EAAd,CAAD,CAAmBiB,EAAnB,CAAsB,QAAtB;UAD6B,CAAzC,EAEGJ,IAFH,CAESK,MAAD,IAAY;YACnBpC,CAAC,CAAE,2BAAF,EAA8BqB,KAA9B,CAAD,CAAsCd,IAAtC,CAA2C,CAACC,GAAD,EAAMC,GAAN,KAAc;cACxDG,OAAO,CAACF,GAAR,CAAYD,GAAZ,EAAiBI,MAAjB,GAA0BC,IAA1B;YACA,CAFD;YAGAd,CAAC,CAACoC,MAAD,CAAD,CAAU7B,IAAV,CAAe,CAACC,GAAD,EAAMC,GAAN,KAAc;cAC5B,MAAM6B,MAAM,GAAGtC,CAAC,CAACS,GAAD,CAAhB;cACAG,OAAO,CAACF,GAAR,CAAY6B,GAAZ,CAAgBD,MAAhB,EAAwBxB,IAAxB;YACA,CAHD;YAIAb,KAAK,CAACuC,IAAN,CAAWC,WAAX,CAAuBpB,KAAvB,EAA8BU,IAA9B;YACAd,QAAQ,CAACQ,IAAT,CAAc,qCAAd,EACEiB,QADF,CACW,UADX;UAEA,CAbD;QAcA,CAfD;MAgBA;IACD,CAhGkB;;IAmGnB;AACD;AACA;AACA;AACA;AACA;IACCM,aAAa,EAAE,CAACC,IAAD,EAAOC,OAAP,KAAmB;MACjCC,OAAO,CAACC,KAAR,CAAcF,OAAd;MACA,MAAM5C,MAAM,GAAG4C,OAAO,CAACG,OAAvB;;MACA,IAAI/C,MAAJ,EAAY;QACXN,CAAC,CAAE,oCAAmCM,MAAO,IAA5C,CAAD,CAAkDC,IAAlD,CAAuD,CAACC,GAAD,EAAMC,GAAN,KAAc;UACpE,MACCY,KAAK,GAAGrB,CAAC,CAACS,GAAD,CAAD,CAAOU,OAAP,CAAe,OAAf,CADT;UAAA,MAECP,OAAO,GAAIS,KAAK,CAACC,SAAN,EAFZ;UAGAV,OAAO,CAACF,GAAR,CAAYD,GAAZ,EAAiBI,MAAjB,GAA0BC,IAA1B;QACA,CALD;MAMA;IACD,CApHkB;;IAsHnB;AACD;AACA;IACCwC,QAAQ,EAAE,CAAClD,GAAD,EAAMmD,OAAN,KAAkB;MAC3B,MACClC,KAAK,GAAGrB,CAAC,CAACI,GAAG,CAAC2C,MAAL,CADV;MAAA,MAECnC,OAAO,GAAGS,KAAK,CAACC,SAAN,EAFX;MAAA,MAGCX,IAAI,GAAGX,CAAC,CAACqB,KAAD,CAAD,CAASV,IAAT,EAHR;MAIA,IAAIoC,MAAM,GAAGpC,IAAI,CAAC6C,aAAlB;;MACA,IAAIT,MAAJ,EAAY;QACX;QACA,MAAMrC,GAAG,GAAGV,CAAC,CAACW,IAAI,CAAC8C,gBAAL,CAAsB1C,IAAvB,CAAb;QACAL,GAAG,CAACC,IAAJ,CAAS,uBAAT,EAAkC,OAAlC;;QACA,IAAI;UACH;UACA,MAAMkC,OAAO,GAAGnC,GAAG,CAACS,OAAJ,CAAY,OAAZ,EAAqBC,KAArB,GAA6BT,IAA7B,CAAkC,kBAAlC,CAAhB,CAFG,CAGH;;UACA,MAAM+C,KAAK,GAAGhD,GAAG,CAACC,IAAJ,CAAS,kBAAT,CAAd;UACA,MAAMgD,WAAW,GAAGjD,GAAG,CAACC,IAAJ,CAAS,yBAAT,CAApB,CALG,CAMH;;UACA,MAAMiD,MAAM,GAAGlD,GAAG,CAACmD,IAAJ,CAAS,IAAT,CAAf;UACA,IAAIC,QAAJ,EACC7C,QADD,EAEC8C,MAFD;;UAGA,IAAIH,MAAM,CAACI,MAAP,EAAJ,EAAqB;YACpB;YACAF,QAAQ,GAAGF,MAAM,CAACjD,IAAP,CAAY,kBAAZ,CAAX,CAFoB,CAGpB;;YACAM,QAAQ,GAAGjB,CAAC,CAAC,SAAD,EAAY4D,MAAZ,CAAZ;;YACA,IAAI3C,QAAQ,CAACO,QAAT,CAAkB,OAAlB,CAAJ,EAAgC;cAC/B;cACA,IAAImC,WAAW,KAAKG,QAApB,EAA8B;gBAC7B;gBACAC,MAAM,GAAG,SAAT;cACA,CAHD,MAGO;gBACN;gBACAA,MAAM,GAAG,UAAT;cACA;YACD,CATD,MASO;cACN;cACAD,QAAQ,GAAGF,MAAM,CAACjD,IAAP,CAAY,yBAAZ,CAAX;;cACA,IAAIgD,WAAW,KAAKG,QAApB,EAA8B;gBAC7B;gBACAC,MAAM,GAAG,SAAT;cACA,CAHD,MAGO;gBACN;gBACAA,MAAM,GAAG,UAAT;cACA;YACD;UACD,CAzBD,MAyBO;YACN;YACAD,QAAQ,GAAGjB,OAAX;YACA5B,QAAQ,GAAG,IAAX;;YACA,IAAI0C,WAAW,KAAKG,QAApB,EAA8B;cAC7B;cACAC,MAAM,GAAG,SAAT;YACA,CAHD,MAGO;cACN;cACAA,MAAM,GAAG,UAAT;YACA;UACD,CA/CE,CAgDH;;;UACA,MAAME,WAAW,GAAGhE,KAAK,CAACuC,IAAN,CAAW0B,iBAAX,CAA6BnB,MAA7B,CAApB;;UACA,IAAI,OAAOkB,WAAP,KAAuB,UAA3B,EAAuC;YACtCA,WAAW,CAACE,IAAZ,CAAiB9C,KAAjB,EAAwB+C,SAAxB,EAAmCC,SAAnC;UACA,CAFD,MAEO;YACN,IAAI,CAACtB,MAAM,CAACuB,UAAP,CAAkBC,MAAM,CAAC5C,QAAP,CAAgB6C,QAAlC,CAAL,EAAkD;cACjD,MAAM7C,QAAQ,GAAGhB,IAAI,CAAC8D,WAAtB;;cACA,IAAI9C,QAAJ,EAAc;gBACboB,MAAM,GAAI,GAAEpB,QAAS,IAAGoB,MAAO,EAA/B;cACA;YACD;;YACD,MACC2B,QAAQ,GAAG;cACVX,MAAM,EAAEA,MADE;cAEVY,KAAK,EAAEjB,KAFG;cAGVE,MAAM,EAAEE,QAHE;cAIVc,KAAK,EAAEC,IAAI,CAACC,SAAL,CAAe9E,CAAC,CAAC,2BAAD,CAAD,CAA+B+E,QAA/B,CAAwC,uBAAxC,CAAf,CAJG;cAKV7C,QAAQ,EAAE,CAAClC,CAAC,CAAC,WAAD,EAAcU,GAAd,CAAD,CAAoByB,EAApB,CAAuB,QAAvB;YALD,CADZ;;YAQAlC,KAAK,CAAC6B,OAAN,CAAc,MAAd,EAAsBC,IAAtB,CAA2B,MAAM;cAChC9B,KAAK,CAAC+B,IAAN,CAAWC,IAAX,CAAgBc,MAAhB,EAAwB2B,QAAxB,EAAkC3C,IAAlC,CAAwCK,MAAD,IAAY;gBAElD,MAAM4C,SAAS,GAAItB,KAAD,IAAW;kBAC5B,MAAMhD,GAAG,GAAGV,CAAC,CAAE,6BAA4B0D,KAAM,IAApC,CAAb;kBACA9C,OAAO,CAACF,GAAR,CAAYA,GAAZ,EAAiBG,MAAjB,GAA0BC,IAA1B;gBACA,CAHD;;gBAKA,MAAMmE,eAAe,GAAIvB,KAAD,IAAW;kBAClC,MAAMwB,MAAM,GAAGlF,CAAC,CAAE,oCAAmC0D,KAAM,IAA3C,CAAhB;kBACAwB,MAAM,CAAC3E,IAAP,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;oBACzB,MACC0E,QAAQ,GAAGnF,CAAC,CAACS,GAAD,CADb;oBAAA,MAEC2E,OAAO,GAAGD,QAAQ,CAACE,IAAT,CAAc,uBAAd,CAFX;oBAGAJ,eAAe,CAACG,OAAD,CAAf;oBACAxE,OAAO,CAACF,GAAR,CAAYyE,QAAZ,EAAsBtE,MAAtB,GAA+BC,IAA/B;kBACA,CAND;gBAOA,CATD;;gBAWA,IAAIsB,MAAM,CAACkD,MAAX,EAAmB;kBAClBrF,KAAK,CAAC+B,IAAN,CAAWuD,UAAX,CAAsBnD,MAAtB;gBACA,CAFD,MAEO;kBACN;kBACA,IAAIsC,QAAQ,CAACX,MAAT,KAAoB,UAAxB,EAAoC;oBACnCiB,SAAS,CAAClB,QAAD,CAAT;kBACA,CAJK,CAKN;;;kBACAmB,eAAe,CAACnB,QAAD,CAAf;kBACAmB,eAAe,CAACvB,KAAD,CAAf;kBACA9C,OAAO,CAACF,GAAR,CAAYA,GAAZ,EAAiBG,MAAjB,GAA0BC,IAA1B;kBACA,IAAIwB,MAAJ,EACCkD,MADD;;kBAEA,KAAK,MAAMC,SAAX,IAAwBrD,MAAxB,EAAgC;oBAC/BE,MAAM,GAAGtC,CAAC,CAACyF,SAAD,CAAV;oBACAD,MAAM,GAAGxF,CAAC,CAAE,UAASsC,MAAM,CAAC+C,IAAP,CAAY,IAAZ,CAAkB,IAA7B,CAAV;oBACAzE,OAAO,CAACF,GAAR,CAAY8E,MAAZ,EAAoB3E,MAApB,GAA6BC,IAA7B;oBACAF,OAAO,CAACF,GAAR,CAAY6B,GAAZ,CAAgBD,MAAhB,EAAwBxB,IAAxB;oBACAb,KAAK,CAACuC,IAAN,CAAWC,WAAX,CAAuBH,MAAvB,EAA+BP,IAA/B;kBACA;gBACD;cACD,CAvCD;YAwCA,CAzCD;UA0CA;QACD,CA9GD,SA8GU;UACT;UACA2D,UAAU,CAAC,YAAW;YACrB1F,CAAC,CAACU,GAAD,CAAD,CAAOiF,UAAP,CAAkB,uBAAlB;UACA,CAFS,EAEP,EAFO,CAAV;QAGA;MACD;;MACD,OAAO,KAAP;IACA;EAzPkB,CAAb;EA8PP;AACA;AACA;;;;EACA,IAAIpB,MAAM,CAACtE,KAAX,EAAkB;IACjB,IAAIA,KAAK,CAAC2F,GAAN,CAAUC,MAAd,EAAsB;MACrB5F,KAAK,CAAC6F,MAAN,CAAaC,OAAb,CAAqBC,IAArB,CAA0B,MAA1B;IACA,CAFD,MAEO;MACN/F,KAAK,CAACC,IAAN,GAAaA,IAAb;MACAiD,OAAO,CAACC,KAAR,CAAc,8BAAd;IACA;EACD"}