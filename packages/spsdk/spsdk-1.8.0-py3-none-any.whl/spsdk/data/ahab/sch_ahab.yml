---
type: object
required:
  - family
  - containers
  - image_type
  - output
properties:
  family:
    type: string
    title: MCU family
    description:
      Family identifier including the chip revision. If revision is not
      present, latest revision is used as default.
    enum:
      - rt1180
    template_value: rt1180
  revision:
    type: string
    title: MCU revision
    description: Revision of silicon
    enum:
      - a0
    template_value: a0
  image_type:
    type: string
    title: Type of image
    description: The final use of image, this setting is changing the style of offsets in final container.
    enum: [xip, non_xip, serial_downloader]
    template_value: xip
  output:
    type: string
    title: Output AHAB file name
    description: Revision of silicon
    format: file_name
    template_value: generated_ahab.bin
  containers:
    title: List of containers present in AHAB
    description: The order of containers in the list defines the order in AHAB.
    type: array
    minItems: 1
    items:
      oneOf:
        - type: object
          required: [binary_container]
          properties:
            binary_container:
              type: object
              title: Binary AHAB container
              template_title: Optional Binary Container format to add to AHAB image
              required: [path]
              properties:
                path:
                  type: string
                  title: The AHAB container binary file
                  description: The binary file that contains AHAB "my_binary_container.bin
                  template_value: my_ahab_container.bin
        - type: object
          required: [container]
          properties:
            container:
              type: object
              title: AHAB Container
              template_title: Optional Configuration Container format to add to AHAB image
              required: [srk_set, fuse_version, sw_version, images]
              if:
                properties:
                  srk_set:
                    const: none
              then:
                required: []
              else:
                required: [srk_table, signing_key, used_srk_id]
              properties:
                srk_set:
                  type: string
                  title: Super Root Key (SRK) set
                  description: Defines which set is used to authenticate the container.
                  enum: [none, oem, nxp]
                  template_value: oem
                used_srk_id:
                  type: [number, string]
                  title: Used SRK
                  description: Which key from SRK set is being used.
                  format: number
                  template_value: 0
                srk_revoke_mask:
                  type: [number, string]
                  title: SRK revoke mask
                  description:
                    Bitmask to indicate which SRKs to revoke. Bit set to 1 means revoke
                    key. Bit 0 = revoke SRK_0, bit 1 = revoke SRK_1 etc.
                  format: number
                  template_value: 0x00
                fuse_version:
                  type: [number, string]
                  title: Fuse version
                  description:
                    The value must be equal or greater than the version stored in fuses
                    to allow loading this container.
                  format: number
                  template_value: 0
                sw_version:
                  type: [number, string]
                  title: Software version
                  description:
                    Number used by Privileged Host Boot Companion (PHBC) to select between
                    multiple images with same Fuse version field.
                  format: number
                  template_value: 0
                signing_key:
                  type: string
                  title: AHAB container signing key
                  description:
                    Private key used for sign the container header. Header can be signed by SRK or
                    by image key that was signed by SRK. If an image key is used, it must be the
                    same algorithm and key size as the SRK. In both cases, the referenced SRK
                    must not have been revoked.
                  format: file
                  template_value: my_signing_key.pem
                images:
                  type: array
                  title: Image array
                  description: Array of image entries.
                  template_title: Configuration of AHAB Container images (array of multiple images)
                  minItems: 1
                  maxItems: 8
                  items:
                    type: object
                    required:
                      - image_path
                      - image_offset
                      - load_address
                      - entry_point
                      - image_type
                      - core_id
                      - is_encrypted
                    # TODO add conditional required iv_path and hash_type
                    properties:
                      image_path:
                        type: string
                        title: Image path
                        description: Path to image binary (absolute/relative).
                        format: file
                        template_value: my_image.bin
                      image_offset:
                        type: [number, string]
                        title: Image offset in AHAB container
                        description:
                          Relative address for start of AHAB image (can contain multiple AHAB containers).
                          In case of XiP type of AHAB image, the load_address and entry_point must correspond to this values.
                          Example of setting of load_address - AHAB_IMAGE_ADDRESS+IMAGE_OFFSET=LOAD_ADDRESS
                        format: number
                        template_value: "0x4000"
                      load_address:
                        type: [number, string]
                        title: Image destination address
                        description:
                          Address the image is written to in memory (absolute address in
                          system memory).
                        format: number
                        template_value: "0x5000"
                      entry_point:
                        type: [number, string]
                        title: Image entry point
                        description:
                          Image entry point (absolute address). Valid only for executable
                          image types.
                        format: number
                        template_value: "0x5000"
                      image_type:
                        type: string
                        title: Image type
                        description: Kind of image.
                        enum:
                          - executable
                          - data
                          - dcd_image
                          - seco
                          - provisioning_image
                          - provisioning_data
                        template_value: executable
                      core_id:
                        type: string
                        title: Core ID
                        description: Defines the core the image is dedicated for.
                        enum:
                          - cortex-m33
                          - cortex-m7
                        template_value: cortex-m33
                      is_encrypted:
                        type: boolean
                        title: Image encryption
                        description: Determines, whether image is encrypted or not.
                        template_value: false
                      boot_flags:
                        type: [number, string]
                        title: Boot flags
                        description: Boot flags controlling SCFW boot.
                        template_value: 0x00
                      meta_data_start_cpu_id:
                        type: [number, string]
                        title: Start CPU ID
                        description: Resource ID of CPU to be started
                        format: number
                        template_value: 0
                      meta_data_mu_cpu_id:
                        type: [number, string]
                        title: CPU memory unit start ID
                        description: Resource ID of the MU associated with the CPU
                        format: number
                        template_value: 0
                      meta_data_start_partition_id:
                        type: [number, string]
                        title: Start partition ID
                        description: Partition ID of the partition to start
                        format: number
                        template_value: 0
                      hash_type:
                        type: string
                        title: Images HASH type
                        description:
                          HASH type of image. All images in the container must have the same
                          HASH type.
                        enum:
                          - sha256
                          - sha384
                          - sha512
                        template_value: sha256
                      # iv_path:
                      #   type: string
                      #   title: IV file path
                      #   description:
                      #     "Used only for encrypted images (zero otherwise): SHA256 of the plain
                      #     text image. Fixed size at 256 bits. The lower 128-bit part of the SHA256 value
                      #     will be retained as IV in the encryption/decryption process. The HEX format is accepted."
                      #   format: file
                      #   template_value: my_IV.txt
                srk_table:
                  type: object
                  title: SRK Table
                  template_title: Configuration of AHAB SRK table
                  description: "SRK (Super Root key) table definition."
                  required: [hash_type, srk_array]
                  properties:
                    hash_type:
                      type: string
                      title: SRK HASH type
                      description:
                        HASH type of image. All images in the container must have the same
                        HASH type.
                      enum:
                        - sha256
                        - sha384
                        - sha512
                      template_value: sha256
                    srk_array:
                      type: array
                      title: Super Root Key (SRK) table
                      description:
                        "Table containing the used SRK records. All SRKs must be of the same
                        type. Supported signing algorithms are: RSASSA-PSS or ECDSA. Supported hash algorithms:
                        sha256, sha384, sha512. Supported key sizes/curves: prime256v1, sec384r1, sec512r1,
                        rsa2048, rsa4096. Certificate may be of Certificate Authority."
                      minItems: 4
                      maxItems: 4
                      items:
                        type: string
                        title: SRK key
                        description: Path to SRK Key file.
                        format: file
                        template_value:
                          - my_srk_public_key0.pem
                          - my_srk_public_key1.pem
                          - my_srk_public_key2.pem
                          - my_srk_public_key3.pem
                certificate:
                  type: object
                  title: Certificate container
                  description: Optional certificate container definition."
                  template_title: Optional configuration of AHAB Container Certificate (if not used, erase the section)
                  required: [public_key, hash_type, signing_key]
                  properties:
                    permissions:
                      type: array
                      title: Certificate permissions
                      description: Permissions used to indicate what a certificate can be used for
                      items:
                        type: string
                        enum:
                          - container
                          - secure_enclave_debug
                          - phbc_debug
                          - hdmi_debug
                          - soc_debug_domain_1
                          - soc_debug_domain_2
                          - life_cycle
                          - hdcp_fuses
                          - monotonic_counter
                        template_value:
                          - container
                          - secure_enclave_debug
                          - phbc_debug
                          - hdmi_debug
                          - soc_debug_domain_1
                          - soc_debug_domain_2
                          - life_cycle
                          - hdcp_fuses
                          - monotonic_counter
                    uuid:
                      type: [number, string]
                      title: UUID
                      description: (Optional) 128-bit unique identifier
                      format: number
                      template_value: 0x00001111aaaabbbb22223333ccccdddd
                    public_key:
                      type: string
                      title: Certificate public key
                      description: Path to Public key file (RSA and ECDSA).
                      format: file
                      template_value: my_cert_public_key.pem
                    hash_type:
                      type: string
                      title: Certificate HASH type
                      description: HASH type of public key. The hash type should correspond to SRK keys.
                      enum:
                        - sha256
                        - sha384
                        - sha512
                      template_value: sha256
                    signing_key:
                      type: string
                      title: Certificate container signing key
                      description: Private key used for sign the certificate container.
                      format: file
                      template_value: my_cert_signing_key.pem
                blob:
                  type: object
                  title: Encryption blob
                  description: Encryption blob container definition
                  template_title: Optional configuration of AHAB Container Encryption blob (if not used, erase the section)
                  required: [wrapped_key_path]
                  properties:
                    wrapped_key_path:
                      type: string
                      title: KEK blob wrapped key
                      description: Wrapped Data Encryption key. Used for AES CBC-MAC (128/192/256 size). The HEX format is accepted.
                      format: file
                      template_value: my_wrapped_key.txt
