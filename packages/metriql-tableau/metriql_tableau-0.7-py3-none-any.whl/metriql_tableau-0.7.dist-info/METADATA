Metadata-Version: 2.1
Name: metriql-tableau
Version: 0.7
Summary: metriql Tableau integration
Home-page: https://github.com/metriql/metriql-tableau
Author: Burak Emre Kabakci
Author-email: emre@rakam.io
License: MIT License
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: tableaudocumentapi (==0.9)
Provides-Extra: test
Requires-Dist: tableaudocumentapi (==0.9) ; extra == 'test'

# metriql Tableau Integration

Generates Tableau Data Source ([TDS](https://help.tableau.com/current/pro/desktop/en-us/environ_filesandfolders.htm#content-body)) files from your metriql datasets.
The idea is to leverage metriql datasets in your Tableau workflow without any additional modeling in Tableau.

### Usage

The library is available in PyPI so you can install it via pip as follows:

```
pip install metriql-tableau
```

The library expects `stdin` for the metriql metadata and outputs a TDS file to `stdout`. Here is an example:

```
curl http://metriql-server.com/api/v0/metadata | metriql-tableau --metriql-url http://metriql-server.com --dataset your_dataset create-tds > your_dataset.tds
```

You can use `--file` argument instead of reading the metadata from `stdin` as an alternative.
You can use `--out` argument to create a file instead of printing the TDS file to `stdout` as an alternative.

The only command is `create-tds` for now.

### How does it work?

The generated file includes your metriql URL and uses Presto interface which is natively supported in Tableau. In order to use Tableau integration, you need to enable JDBC in your metriql server.
