[tool.poetry]
name = "param-sweeps"
version = "0.1.1"
description = "Parameter sweeper for ui.json powered applications"
authors = ["Mira Geoscience <benjamink@mirageoscience.com>"]
repository = "https://github.com/MiraGeoscience/param-sweeps"
homepage = "https://mirageoscience.com"
readme = "README.md"
keywords = ["geology", "geophysics", "earth sciences"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Physics",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
#    "Operating System :: MacOS",
    "Natural Language :: English",
]

packages = [
    { include="sweeps", from="." },
]

[tool.poetry.dependencies]
python = "^3.7.2,<3.11"

numpy = "!=1.19.4, ^1.21.5" # also in simpeg and geoana
geoh5py = "~0.4.0"


## indirect dependencies, forcing them here for installation through Conda not pip
h5py = "^3.2.1" # from geoh5py

[tool.poetry.dev-dependencies]
pylint = "^2.14.4"
pytest = "^7.1.2"
pytest-cov = "^3.0.0"
requests = "^2.27.1" # for tests only

[tool.conda-lock]
platforms = ['win-64', 'osx-64', 'linux-64']
channels = ['conda-forge', 'defaults']

[tool.conda-lock.dependencies]
libblas = "*=*mkl"

[tool.isort]
# settings for compatibility between ``isort`` and ``black`` formatting
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.black]
# defaults are just fine

[tool.poetry2conda]
name = "geoapps"
## usage of poetry2conda
# As poetry2conda does not support url sources for pip dependencies,
# temporarily edit this file and use git sources instead, with 'tag=' indifferently whether it is actually a branch or rev.
#> poetry2conda pyproject.toml -E full environment.yml
#> poetry2conda pyproject.toml -E full --dev environment-dev.yml

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools"]
build-backend = "poetry.core.masonry.api"
