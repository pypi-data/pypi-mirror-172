# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/arg_robotics_tools/',
                'doc_host': 'https://ARG-NCTU.github.io',
                'git_url': 'https://github.com/ARG-NCTU/arg_robotics_tools/tree/master/',
                'lib_path': 'arg_robotics_tools'},
  'syms': { 'arg_robotics_tools.anchor_logging': { 'arg_robotics_tools.anchor_logging.examine_one_plot': ( 'anchor_logging.html#examine_one_plot',
                                                                                                           'arg_robotics_tools/anchor_logging.py'),
                                                   'arg_robotics_tools.anchor_logging.examine_one_with_boat_plot': ( 'anchor_logging.html#examine_one_with_boat_plot',
                                                                                                                     'arg_robotics_tools/anchor_logging.py'),
                                                   'arg_robotics_tools.anchor_logging.examine_plot': ( 'anchor_logging.html#examine_plot',
                                                                                                       'arg_robotics_tools/anchor_logging.py')},
            'arg_robotics_tools.camera_projection': { 'arg_robotics_tools.camera_projection.camera_projection': ( 'camera_projection.html#camera_projection',
                                                                                                                  'arg_robotics_tools/camera_projection.py'),
                                                      'arg_robotics_tools.camera_projection.camera_projection.__init__': ( 'camera_projection.html#camera_projection.__init__',
                                                                                                                           'arg_robotics_tools/camera_projection.py'),
                                                      'arg_robotics_tools.camera_projection.camera_projection.apriltag_detection': ( 'camera_projection.html#camera_projection.apriltag_detection',
                                                                                                                                     'arg_robotics_tools/camera_projection.py'),
                                                      'arg_robotics_tools.camera_projection.camera_projection.draw_point': ( 'camera_projection.html#camera_projection.draw_point',
                                                                                                                             'arg_robotics_tools/camera_projection.py'),
                                                      'arg_robotics_tools.camera_projection.camera_projection.read_camera_info': ( 'camera_projection.html#camera_projection.read_camera_info',
                                                                                                                                   'arg_robotics_tools/camera_projection.py'),
                                                      'arg_robotics_tools.camera_projection.camera_projection.read_images': ( 'camera_projection.html#camera_projection.read_images',
                                                                                                                              'arg_robotics_tools/camera_projection.py'),
                                                      'arg_robotics_tools.camera_projection.camera_projection.solvePnP': ( 'camera_projection.html#camera_projection.solvepnp',
                                                                                                                           'arg_robotics_tools/camera_projection.py')},
            'arg_robotics_tools.get_ip': { 'arg_robotics_tools.get_ip.device_get_sensors': ( 'get_ip.html#device_get_sensors',
                                                                                             'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.dp_get_devices': ( 'get_ip.html#dp_get_devices',
                                                                                         'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.dp_load_config': ( 'get_ip.html#dp_load_config',
                                                                                         'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.find_duckiepond_devices_yaml': ( 'get_ip.html#find_duckiepond_devices_yaml',
                                                                                                       'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.get_key': ('get_ip.html#get_key', 'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.get_xbee_address': ( 'get_ip.html#get_xbee_address',
                                                                                           'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.get_xbee_address_boat': ( 'get_ip.html#get_xbee_address_boat',
                                                                                                'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.ip_connection': ( 'get_ip.html#ip_connection',
                                                                                        'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.myip': ('get_ip.html#myip', 'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.sensor_get_topic': ( 'get_ip.html#sensor_get_topic',
                                                                                           'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.ssh_connection': ( 'get_ip.html#ssh_connection',
                                                                                         'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.ssh_ping_nano': ( 'get_ip.html#ssh_ping_nano',
                                                                                        'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.ssh_ping_rpi': ( 'get_ip.html#ssh_ping_rpi',
                                                                                       'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.ssh_rostopic': ( 'get_ip.html#ssh_rostopic',
                                                                                       'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.test_ping': ('get_ip.html#test_ping', 'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.test_rostopic': ( 'get_ip.html#test_rostopic',
                                                                                        'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.test_ssh': ('get_ip.html#test_ssh', 'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.test_ssh_intranet': ( 'get_ip.html#test_ssh_intranet',
                                                                                            'arg_robotics_tools/get_ip.py'),
                                           'arg_robotics_tools.get_ip.whoami': ('get_ip.html#whoami', 'arg_robotics_tools/get_ip.py')},
            'arg_robotics_tools.mqtt': { 'arg_robotics_tools.mqtt.MQTTpublisher': ('mqtt.html#mqttpublisher', 'arg_robotics_tools/mqtt.py'),
                                         'arg_robotics_tools.mqtt.MQTTpublisher.__init__': ( 'mqtt.html#mqttpublisher.__init__',
                                                                                             'arg_robotics_tools/mqtt.py'),
                                         'arg_robotics_tools.mqtt.MQTTpublisher.create_payload': ( 'mqtt.html#mqttpublisher.create_payload',
                                                                                                   'arg_robotics_tools/mqtt.py'),
                                         'arg_robotics_tools.mqtt.MQTTpublisher.loop': ( 'mqtt.html#mqttpublisher.loop',
                                                                                         'arg_robotics_tools/mqtt.py'),
                                         'arg_robotics_tools.mqtt.MQTTpublisher.on_connect': ( 'mqtt.html#mqttpublisher.on_connect',
                                                                                               'arg_robotics_tools/mqtt.py'),
                                         'arg_robotics_tools.mqtt.MQTTpublisher.on_publish': ( 'mqtt.html#mqttpublisher.on_publish',
                                                                                               'arg_robotics_tools/mqtt.py'),
                                         'arg_robotics_tools.mqtt.MQTTpublisher.on_shutdown': ( 'mqtt.html#mqttpublisher.on_shutdown',
                                                                                                'arg_robotics_tools/mqtt.py'),
                                         'arg_robotics_tools.mqtt.VehStateSender': ( 'mqtt.html#vehstatesender',
                                                                                     'arg_robotics_tools/mqtt.py'),
                                         'arg_robotics_tools.mqtt.VehStateSender.__init__': ( 'mqtt.html#vehstatesender.__init__',
                                                                                              'arg_robotics_tools/mqtt.py'),
                                         'arg_robotics_tools.mqtt.VehStateSender.create_payload': ( 'mqtt.html#vehstatesender.create_payload',
                                                                                                    'arg_robotics_tools/mqtt.py')},
            'arg_robotics_tools.random_map': { 'arg_robotics_tools.random_map.draw_line': ( 'random_map.html#draw_line',
                                                                                            'arg_robotics_tools/random_map.py'),
                                               'arg_robotics_tools.random_map.random_generate': ( 'random_map.html#random_generate',
                                                                                                  'arg_robotics_tools/random_map.py'),
                                               'arg_robotics_tools.random_map.sub_random_generate': ( 'random_map.html#sub_random_generate',
                                                                                                      'arg_robotics_tools/random_map.py')},
            'arg_robotics_tools.robot_model': { 'arg_robotics_tools.robot_model.robot_model_loader': ( 'robot_model.html#robot_model_loader',
                                                                                                       'arg_robotics_tools/robot_model.py'),
                                                'arg_robotics_tools.robot_model.robot_model_loader.__init__': ( 'robot_model.html#robot_model_loader.__init__',
                                                                                                                'arg_robotics_tools/robot_model.py'),
                                                'arg_robotics_tools.robot_model.robot_model_loader.list_all': ( 'robot_model.html#robot_model_loader.list_all',
                                                                                                                'arg_robotics_tools/robot_model.py'),
                                                'arg_robotics_tools.robot_model.robot_model_loader.load': ( 'robot_model.html#robot_model_loader.load',
                                                                                                            'arg_robotics_tools/robot_model.py'),
                                                'arg_robotics_tools.robot_model.robot_model_loader.show_link': ( 'robot_model.html#robot_model_loader.show_link',
                                                                                                                 'arg_robotics_tools/robot_model.py')},
            'arg_robotics_tools.tsp': { 'arg_robotics_tools.tsp.dist': ('tsp.html#dist', 'arg_robotics_tools/tsp.py'),
                                        'arg_robotics_tools.tsp.distanceGenerate': ( 'tsp.html#distancegenerate',
                                                                                     'arg_robotics_tools/tsp.py'),
                                        'arg_robotics_tools.tsp.solve_tsp_held_karp': ( 'tsp.html#solve_tsp_held_karp',
                                                                                        'arg_robotics_tools/tsp.py'),
                                        'arg_robotics_tools.tsp.solve_tsp_nearest_neighbor': ( 'tsp.html#solve_tsp_nearest_neighbor',
                                                                                               'arg_robotics_tools/tsp.py'),
                                        'arg_robotics_tools.tsp.sortWaypoint': ('tsp.html#sortwaypoint', 'arg_robotics_tools/tsp.py')},
            'arg_robotics_tools.utils': { 'arg_robotics_tools.utils.gdown_download': ( 'utils.html#gdown_download',
                                                                                       'arg_robotics_tools/utils.py'),
                                          'arg_robotics_tools.utils.gdown_unzip': ('utils.html#gdown_unzip', 'arg_robotics_tools/utils.py'),
                                          'arg_robotics_tools.utils.pose_dis': ('utils.html#pose_dis', 'arg_robotics_tools/utils.py'),
                                          'arg_robotics_tools.utils.waypoint': ('utils.html#waypoint', 'arg_robotics_tools/utils.py')},
            'arg_robotics_tools.uwb': { 'arg_robotics_tools.uwb.UWB': ('uwb.html#uwb', 'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.__init__': ('uwb.html#uwb.__init__', 'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.connect': ('uwb.html#uwb.connect', 'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.env_config': ('uwb.html#uwb.env_config', 'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.height': ('uwb.html#uwb.height', 'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.load_env_config': ( 'uwb.html#uwb.load_env_config',
                                                                                        'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.localize_2_5D': ( 'uwb.html#uwb.localize_2_5d',
                                                                                      'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.localize_3D': ('uwb.html#uwb.localize_3d', 'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.network_id': ('uwb.html#uwb.network_id', 'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.network_id_str': ( 'uwb.html#uwb.network_id_str',
                                                                                       'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.port_list': ('uwb.html#uwb.port_list', 'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.pose': ('uwb.html#uwb.pose', 'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.range_from': ('uwb.html#uwb.range_from', 'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.scan_port': ('uwb.html#uwb.scan_port', 'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.status': ('uwb.html#uwb.status', 'arg_robotics_tools/uwb.py'),
                                        'arg_robotics_tools.uwb.UWB.write_env_config': ( 'uwb.html#uwb.write_env_config',
                                                                                         'arg_robotics_tools/uwb.py')},
            'arg_robotics_tools.video2picture': { 'arg_robotics_tools.video2picture.get_images_from_video': ( 'video2picture.html#get_images_from_video',
                                                                                                              'arg_robotics_tools/video2picture.py')},
            'arg_robotics_tools.websocket_rosbridge': { 'arg_robotics_tools.websocket_rosbridge.ros_socket': ( 'websocket_rosbridge.html#ros_socket',
                                                                                                               'arg_robotics_tools/websocket_rosbridge.py'),
                                                        'arg_robotics_tools.websocket_rosbridge.ros_socket.__init__': ( 'websocket_rosbridge.html#ros_socket.__init__',
                                                                                                                        'arg_robotics_tools/websocket_rosbridge.py'),
                                                        'arg_robotics_tools.websocket_rosbridge.ros_socket.check_connecting': ( 'websocket_rosbridge.html#ros_socket.check_connecting',
                                                                                                                                'arg_robotics_tools/websocket_rosbridge.py'),
                                                        'arg_robotics_tools.websocket_rosbridge.ros_socket.get_node': ( 'websocket_rosbridge.html#ros_socket.get_node',
                                                                                                                        'arg_robotics_tools/websocket_rosbridge.py'),
                                                        'arg_robotics_tools.websocket_rosbridge.ros_socket.get_topic': ( 'websocket_rosbridge.html#ros_socket.get_topic',
                                                                                                                         'arg_robotics_tools/websocket_rosbridge.py'),
                                                        'arg_robotics_tools.websocket_rosbridge.ros_socket.println': ( 'websocket_rosbridge.html#ros_socket.println',
                                                                                                                       'arg_robotics_tools/websocket_rosbridge.py'),
                                                        'arg_robotics_tools.websocket_rosbridge.ros_socket.pub': ( 'websocket_rosbridge.html#ros_socket.pub',
                                                                                                                   'arg_robotics_tools/websocket_rosbridge.py'),
                                                        'arg_robotics_tools.websocket_rosbridge.ros_socket.publisher': ( 'websocket_rosbridge.html#ros_socket.publisher',
                                                                                                                         'arg_robotics_tools/websocket_rosbridge.py'),
                                                        'arg_robotics_tools.websocket_rosbridge.ros_socket.subscriber': ( 'websocket_rosbridge.html#ros_socket.subscriber',
                                                                                                                          'arg_robotics_tools/websocket_rosbridge.py')},
            'arg_robotics_tools.xbee_coding': { 'arg_robotics_tools.xbee_coding.np_array_to_Odometry': ( 'xbee_coding.html#np_array_to_odometry',
                                                                                                         'arg_robotics_tools/xbee_coding.py'),
                                                'arg_robotics_tools.xbee_coding.xbee_decode': ( 'xbee_coding.html#xbee_decode',
                                                                                                'arg_robotics_tools/xbee_coding.py'),
                                                'arg_robotics_tools.xbee_coding.xbee_encode': ( 'xbee_coding.html#xbee_encode',
                                                                                                'arg_robotics_tools/xbee_coding.py')}}}